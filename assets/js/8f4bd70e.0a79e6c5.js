"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[905],{5318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"http-exception/exception-filters","title":"Exception Filters","description":"T\xecm hi\u1ec3u v\u1ec1 Exception Filters - c\xe1ch NestJS x\u1eed l\xfd l\u1ed7i v\xe0 t\u1ea1o custom exception filters","source":"@site/docs/http-exception/exception-filters.md","sourceDirName":"http-exception","slug":"/http-exception/exception-filters","permalink":"/document/docs/http-exception/exception-filters","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/http-exception/exception-filters.md","tags":[],"version":"current","frontMatter":{"title":"Exception Filters","description":"T\xecm hi\u1ec3u v\u1ec1 Exception Filters - c\xe1ch NestJS x\u1eed l\xfd l\u1ed7i v\xe0 t\u1ea1o custom exception filters"},"sidebar":"tutorialSidebar","previous":{"title":"HTTP Methods","permalink":"/document/docs/http-exception/http-methods"},"next":{"title":"Status Codes","permalink":"/document/docs/http-exception/status-codes"}}');var i=n(4848),l=n(8453);const r={title:"Exception Filters",description:"T\xecm hi\u1ec3u v\u1ec1 Exception Filters - c\xe1ch NestJS x\u1eed l\xfd l\u1ed7i v\xe0 t\u1ea1o custom exception filters"},o="Exception Filters",c={},p=[{value:"Exception Filters l\xe0 g\xec?",id:"exception-filters-l\xe0-g\xec",level:2},{value:"C\xe1c lo\u1ea1i Exception Filters",id:"c\xe1c-lo\u1ea1i-exception-filters",level:2},{value:"1. Built-in Filters",id:"1-built-in-filters",level:3},{value:"2. Custom Filters",id:"2-custom-filters",level:3},{value:"3. Global Filters",id:"3-global-filters",level:3},{value:"4. Controller Filters",id:"4-controller-filters",level:3},{value:"5. Method Filters",id:"5-method-filters",level:3},{value:"T\u1ea1o Exception Filter c\u01a1 b\u1ea3n",id:"t\u1ea1o-exception-filter-c\u01a1-b\u1ea3n",level:2},{value:"S\u1eed d\u1ee5ng Exception Filters",id:"s\u1eed-d\u1ee5ng-exception-filters",level:2},{value:"Global Filters",id:"global-filters",level:3},{value:"Controller Level",id:"controller-level",level:3},{value:"Method Level",id:"method-level",level:3},{value:"Built-in Exceptions",id:"built-in-exceptions",level:2},{value:"HTTP Exceptions",id:"http-exceptions",level:3},{value:"Custom Exception Filters",id:"custom-exception-filters",level:2},{value:"HTTP Exception Filter",id:"http-exception-filter",level:3},{value:"All Exceptions Filter",id:"all-exceptions-filter",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Filter Hierarchy",id:"1-filter-hierarchy",level:3},{value:"2. Error Messages",id:"2-error-messages",level:3},{value:"3. Logging Strategy",id:"3-logging-strategy",level:3},{value:"Testing Exception Filters",id:"testing-exception-filters",level:2},{value:"Unit Testing",id:"unit-testing",level:3}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"exception-filters",children:"Exception Filters"})}),"\n",(0,i.jsx)(t.p,{children:"Exception Filters trong NestJS l\xe0 c\xe1c classes x\u1eed l\xfd exceptions v\xe0 errors m\u1ed9t c\xe1ch nh\u1ea5t qu\xe1n. Ch\xfang cho ph\xe9p b\u1ea1n ki\u1ec3m so\xe1t ho\xe0n to\xe0n response format v\xe0 logging khi c\xf3 l\u1ed7i x\u1ea3y ra."}),"\n",(0,i.jsx)(t.mermaid,{value:"flowchart LR\n    A[Exception Occurs] --\x3e B[Exception Filter]\n    B --\x3e C[Log Error]\n    B --\x3e D[Format Response]\n    B --\x3e E[Send Response]\n    \n    style A fill:#ffebee\n    style B fill:#fff3e0\n    style C fill:#e8f5e8\n    style D fill:#f3e5f5\n    style E fill:#e1f5fe"}),"\n",(0,i.jsx)(t.admonition,{title:"\ud83d\udca1 Kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n",type:"tip",children:(0,i.jsx)(t.p,{children:'Exception Filters gi\u1ed1ng nh\u01b0 "b\u1ed9 l\u1ecdc l\u1ed7i" - b\u1eaft v\xe0 x\u1eed l\xfd t\u1ea5t c\u1ea3 exceptions tr\u01b0\u1edbc khi tr\u1ea3 v\u1ec1 client, \u0111\u1ea3m b\u1ea3o response format nh\u1ea5t qu\xe1n.'})}),"\n",(0,i.jsx)(t.h2,{id:"exception-filters-l\xe0-g\xec",children:"Exception Filters l\xe0 g\xec?"}),"\n",(0,i.jsx)(t.p,{children:"Exception Filters trong NestJS:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Error Handling"})," - X\u1eed l\xfd t\u1ea5t c\u1ea3 exceptions m\u1ed9t c\xe1ch nh\u1ea5t qu\xe1n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Response Formatting"})," - \u0110\u1ecbnh d\u1ea1ng error response theo chu\u1ea9n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Logging"})," - Ghi log errors \u0111\u1ec3 debug v\xe0 monitoring"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Custom Logic"})," - X\u1eed l\xfd logic t\xf9y ch\u1ec9nh cho t\u1eebng lo\u1ea1i l\u1ed7i"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Global Control"})," - Ki\u1ec3m so\xe1t error handling to\xe0n c\u1ee5c"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"c\xe1c-lo\u1ea1i-exception-filters",children:"C\xe1c lo\u1ea1i Exception Filters"}),"\n",(0,i.jsx)(t.mermaid,{value:"flowchart TD\n    A[Exception Filters] --\x3e B[Built-in Filters]\n    A --\x3e C[Custom Filters]\n    A --\x3e D[Global Filters]\n    A --\x3e E[Controller Filters]\n    A --\x3e F[Method Filters]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,i.jsx)(t.h3,{id:"1-built-in-filters",children:"1. Built-in Filters"}),"\n",(0,i.jsx)(t.p,{children:"Filters c\xf3 s\u1eb5n trong NestJS"}),"\n",(0,i.jsx)(t.h3,{id:"2-custom-filters",children:"2. Custom Filters"}),"\n",(0,i.jsx)(t.p,{children:"Filters t\xf9y ch\u1ec9nh theo logic nghi\u1ec7p v\u1ee5"}),"\n",(0,i.jsx)(t.h3,{id:"3-global-filters",children:"3. Global Filters"}),"\n",(0,i.jsx)(t.p,{children:"Filters \xe1p d\u1ee5ng cho to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng"}),"\n",(0,i.jsx)(t.h3,{id:"4-controller-filters",children:"4. Controller Filters"}),"\n",(0,i.jsx)(t.p,{children:"Filters \xe1p d\u1ee5ng cho controller c\u1ee5 th\u1ec3"}),"\n",(0,i.jsx)(t.h3,{id:"5-method-filters",children:"5. Method Filters"}),"\n",(0,i.jsx)(t.p,{children:"Filters \xe1p d\u1ee5ng cho method c\u1ee5 th\u1ec3"}),"\n",(0,i.jsx)(t.h2,{id:"t\u1ea1o-exception-filter-c\u01a1-b\u1ea3n",children:"T\u1ea1o Exception Filter c\u01a1 b\u1ea3n"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Basic Exception Filter"',children:"import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const request = ctx.getRequest<Request>();\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: exception.message,\n    });\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"s\u1eed-d\u1ee5ng-exception-filters",children:"S\u1eed d\u1ee5ng Exception Filters"}),"\n",(0,i.jsx)(t.h3,{id:"global-filters",children:"Global Filters"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Global Exception Filter Usage"',children:"// main.ts\napp.useGlobalFilters(new HttpExceptionFilter());\n"})}),"\n",(0,i.jsx)(t.h3,{id:"controller-level",children:"Controller Level"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Controller Level Exception Filter"',children:"@UseFilters(HttpExceptionFilter)\n@Controller('users')\nexport class UserController {\n  @Get()\n  findAll() {\n    throw new NotFoundException('Users not found');\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"method-level",children:"Method Level"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Method Level Exception Filter"',children:"@Controller('users')\nexport class UserController {\n  @Get()\n  @UseFilters(HttpExceptionFilter)\n  findAll() {\n    throw new NotFoundException('Users not found');\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"built-in-exceptions",children:"Built-in Exceptions"}),"\n",(0,i.jsx)(t.h3,{id:"http-exceptions",children:"HTTP Exceptions"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="HTTP Exceptions Examples"',children:"import { \n  BadRequestException,\n  UnauthorizedException,\n  ForbiddenException,\n  NotFoundException,\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\n\n// S\u1eed d\u1ee5ng\n@Get(':id')\nfindOne(@Param('id') id: string) {\n  if (!id) {\n    throw new BadRequestException('ID is required');\n  }\n  \n  const user = this.userService.findOne(id);\n  if (!user) {\n    throw new NotFoundException(`User with ID ${id} not found`);\n  }\n  \n  return user;\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"custom-exception-filters",children:"Custom Exception Filters"}),"\n",(0,i.jsx)(t.h3,{id:"http-exception-filter",children:"HTTP Exception Filter"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Custom HTTP Exception Filter"',children:"@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const request = ctx.getRequest<Request>();\n    const status = exception.getStatus();\n\n    // Log error\n    console.error(`HTTP Exception: ${exception.message}`, {\n      path: request.url,\n      method: request.method,\n      status,\n      timestamp: new Date().toISOString(),\n    });\n\n    // Format response\n    response.status(status).json({\n      success: false,\n      statusCode: status,\n      message: exception.message,\n      path: request.url,\n      timestamp: new Date().toISOString(),\n    });\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"all-exceptions-filter",children:"All Exceptions Filter"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="All Exceptions Filter"',children:"@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const request = ctx.getRequest<Request>();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = 'Internal server error';\n\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n      message = exception.message;\n    }\n\n    // Log error\n    console.error('Unhandled Exception:', {\n      message: exception instanceof Error ? exception.message : 'Unknown error',\n      path: request.url,\n      method: request.method,\n      timestamp: new Date().toISOString(),\n    });\n\n    // Format response\n    response.status(status).json({\n      success: false,\n      statusCode: status,\n      message,\n      path: request.url,\n      timestamp: new Date().toISOString(),\n    });\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(t.h3,{id:"1-filter-hierarchy",children:"1. Filter Hierarchy"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Filter Hierarchy Best Practice"',children:"// \u2705 T\u1ed1t - S\u1eed d\u1ee5ng nhi\u1ec1u filters theo th\u1ee9 t\u1ef1\n@UseFilters(\n  LoggingExceptionFilter,    // Log tr\u01b0\u1edbc\n  ValidationExceptionFilter, // Validate sau\n  HttpExceptionFilter        // Format cu\u1ed1i\n)\n@Controller('users')\nexport class UserController {}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"2-error-messages",children:"2. Error Messages"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Error Messages Best Practice"',children:"// \u2705 T\u1ed1t - Error messages r\xf5 r\xe0ng v\xe0 h\u1eefu \xedch\nthrow new BadRequestException('Email is required and must be valid format');\n\n// \u274c Kh\xf4ng t\u1ed1t - Error messages m\u01a1 h\u1ed3\nthrow new BadRequestException('Invalid input');\n"})}),"\n",(0,i.jsx)(t.h3,{id:"3-logging-strategy",children:"3. Logging Strategy"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Logging Strategy Best Practice"',children:"// \u2705 T\u1ed1t - Log \u0111\u1ea7y \u0111\u1ee7 th\xf4ng tin\nconsole.error('User creation failed', {\n  error: exception.message,\n  userId: request.body?.id,\n  email: request.body?.email,\n  timestamp: new Date().toISOString(),\n});\n"})}),"\n",(0,i.jsx)(t.h2,{id:"testing-exception-filters",children:"Testing Exception Filters"}),"\n",(0,i.jsx)(t.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Exception Filter Unit Testing"',children:"describe('HttpExceptionFilter', () => {\n  let filter: HttpExceptionFilter;\n  let mockResponse: Partial<Response>;\n  let mockRequest: Partial<Request>;\n\n  beforeEach(() => {\n    filter = new HttpExceptionFilter();\n    mockResponse = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn(),\n    };\n    mockRequest = {\n      url: '/users',\n      method: 'GET',\n    };\n  });\n\n  it('should format HTTP exception response', () => {\n    const exception = new NotFoundException('User not found');\n    const host = {\n      switchToHttp: () => ({\n        getResponse: () => mockResponse,\n        getRequest: () => mockRequest,\n      }),\n    } as ArgumentsHost;\n\n    filter.catch(exception, host);\n\n    expect(mockResponse.status).toHaveBeenCalledWith(404);\n    expect(mockResponse.json).toHaveBeenCalledWith({\n      statusCode: 404,\n      message: 'User not found',\n      timestamp: expect.any(String),\n      path: '/users',\n    });\n  });\n});\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.admonition,{title:"\ud83d\udca1 L\u1eddi khuy\xean t\u1ed5ng k\u1ebft",type:"tip",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"S\u1eed d\u1ee5ng Exception Filters \u0111\u1ec3 x\u1eed l\xfd l\u1ed7i m\u1ed9t c\xe1ch nh\u1ea5t qu\xe1n"}),"\n",(0,i.jsx)(t.li,{children:"T\u1ea1o custom filters cho logic nghi\u1ec7p v\u1ee5 c\u1ee5 th\u1ec3"}),"\n",(0,i.jsx)(t.li,{children:"Log \u0111\u1ea7y \u0111\u1ee7 th\xf4ng tin \u0111\u1ec3 debug v\xe0 monitoring"}),"\n",(0,i.jsx)(t.li,{children:"S\u1eed d\u1ee5ng structured logging cho d\u1ec5 \u0111\u1ecdc"}),"\n",(0,i.jsx)(t.li,{children:"Test Exception Filters m\u1ed9t c\xe1ch comprehensive"}),"\n",(0,i.jsx)(t.li,{children:"S\u1eed d\u1ee5ng filter hierarchy h\u1ee3p l\xfd"}),"\n"]})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"B\xe0i ti\u1ebfp theo:"})," ",(0,i.jsx)(t.a,{href:"/docs/http-exception/status-codes",children:"Status Codes"})]})]})}function d(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},l=s.createContext(i);function r(e){const t=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);