"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[5612],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var r=i(96540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},47896:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"overview/providers","title":"Providers","description":"T\xecm hi\u1ec3u v\u1ec1 Providers - c\xe1ch NestJS qu\u1ea3n l\xfd dependencies v\xe0 t\u1ea1o c\xe1c service instances","source":"@site/docs/overview/providers.md","sourceDirName":"overview","slug":"/overview/providers","permalink":"/document/docs/overview/providers","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/overview/providers.md","tags":[],"version":"current","frontMatter":{"title":"Providers","description":"T\xecm hi\u1ec3u v\u1ec1 Providers - c\xe1ch NestJS qu\u1ea3n l\xfd dependencies v\xe0 t\u1ea1o c\xe1c service instances"},"sidebar":"tutorialSidebar","previous":{"title":"Controllers","permalink":"/document/docs/overview/controllers"},"next":{"title":"Request Lifecycle","permalink":"/document/docs/overview/request-lifecycle"}}');var s=i(74848),t=i(28453);const c={title:"Providers",description:"T\xecm hi\u1ec3u v\u1ec1 Providers - c\xe1ch NestJS qu\u1ea3n l\xfd dependencies v\xe0 t\u1ea1o c\xe1c service instances"},l="Providers",o={},a=[{value:"Providers l\xe0 g\xec?",id:"providers-l\xe0-g\xec",level:2},{value:"L\xfd thuy\u1ebft v\u1ec1 Providers",id:"l\xfd-thuy\u1ebft-v\u1ec1-providers",level:2},{value:"Nguy\xean l\xfd ho\u1ea1t \u0111\u1ed9ng",id:"nguy\xean-l\xfd-ho\u1ea1t-\u0111\u1ed9ng",level:3},{value:"Provider Metadata",id:"provider-metadata",level:3},{value:"T\u1ea1o Provider c\u01a1 b\u1ea3n",id:"t\u1ea1o-provider-c\u01a1-b\u1ea3n",level:2},{value:"C\u1ea5u tr\xfac Provider",id:"c\u1ea5u-tr\xfac-provider",level:2},{value:"Injectable Decorator",id:"injectable-decorator",level:3},{value:"Constructor",id:"constructor",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Methods",id:"methods",level:3},{value:"C\xe1c lo\u1ea1i Providers",id:"c\xe1c-lo\u1ea1i-providers",level:2},{value:"1. Service Providers",id:"1-service-providers",level:3},{value:"2. Repository Providers",id:"2-repository-providers",level:3},{value:"3. Factory Providers",id:"3-factory-providers",level:3},{value:"4. Value Providers",id:"4-value-providers",level:3},{value:"5. Class Providers",id:"5-class-providers",level:3},{value:"Provider Registration",id:"provider-registration",level:2},{value:"Module Registration",id:"module-registration",level:3},{value:"Global Providers",id:"global-providers",level:3},{value:"Provider Scopes",id:"provider-scopes",level:2},{value:"Default Scope (Singleton)",id:"default-scope-singleton",level:3},{value:"Request Scope",id:"request-scope",level:3},{value:"Transient Scope",id:"transient-scope",level:3},{value:"Dependency Injection",id:"dependency-injection",level:2},{value:"Constructor Injection",id:"constructor-injection",level:3},{value:"Property Injection",id:"property-injection",level:3},{value:"Method Injection",id:"method-injection",level:3},{value:"Provider Lifecycle",id:"provider-lifecycle",level:2},{value:"Lifecycle Hooks",id:"lifecycle-hooks",level:3},{value:"Lifecycle Events",id:"lifecycle-events",level:3},{value:"Provider Testing",id:"provider-testing",level:2},{value:"Unit Testing",id:"unit-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Single Responsibility",id:"1-single-responsibility",level:3},{value:"2. Proper Error Handling",id:"2-proper-error-handling",level:3},{value:"3. Dependency Injection",id:"3-dependency-injection",level:3},{value:"4. Proper Scoping",id:"4-proper-scoping",level:3},{value:"5. Testing Strategy",id:"5-testing-strategy",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"providers",children:"Providers"})}),"\n",(0,s.jsx)(n.p,{children:"Providers trong NestJS l\xe0 c\xe1c class, functions, values, ho\u1eb7c objects \u0111\u01b0\u1ee3c inject v\xe0o c\xe1c components kh\xe1c. Ch\xfang l\xe0 n\u1ec1n t\u1ea3ng c\u1ee7a Dependency Injection system trong NestJS."}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart TD\n    A[Provider Types] --\x3e B[Service]\n    A --\x3e C[Repository]\n    A --\x3e D[Factory]\n    A --\x3e E[Value]\n    A --\x3e F[Class]\n    \n    style A fill:#e1f5fe\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udca1 Kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n",type:"tip",children:(0,s.jsx)(n.p,{children:'Providers trong NestJS gi\u1ed1ng nh\u01b0 c\xe1c "c\xf4ng c\u1ee5" \u0111\u01b0\u1ee3c cung c\u1ea5p cho c\xe1c components kh\xe1c s\u1eed d\u1ee5ng. Ch\xfang c\xf3 th\u1ec3 l\xe0 services, repositories, factories, ho\u1eb7c b\u1ea5t k\u1ef3 object n\xe0o c\u1ea7n thi\u1ebft.'})}),"\n",(0,s.jsx)(n.h2,{id:"providers-l\xe0-g\xec",children:"Providers l\xe0 g\xec?"}),"\n",(0,s.jsx)(n.p,{children:"Providers trong NestJS:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependency Injection"})," - T\u1ef1 \u0111\u1ed9ng inject v\xe0o components c\u1ea7n thi\u1ebft"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Service Management"})," - Qu\u1ea3n l\xfd lifecycle c\u1ee7a services"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reusability"})," - C\xf3 th\u1ec3 s\u1eed d\u1ee5ng \u1edf nhi\u1ec1u n\u01a1i"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testability"})," - D\u1ec5 d\xe0ng mock v\xe0 test"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration"})," - Cung c\u1ea5p configuration v\xe0 constants"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"l\xfd-thuy\u1ebft-v\u1ec1-providers",children:"L\xfd thuy\u1ebft v\u1ec1 Providers"}),"\n",(0,s.jsx)(n.h3,{id:"nguy\xean-l\xfd-ho\u1ea1t-\u0111\u1ed9ng",children:"Nguy\xean l\xfd ho\u1ea1t \u0111\u1ed9ng"}),"\n",(0,s.jsxs)(n.p,{children:["Providers trong NestJS ho\u1ea1t \u0111\u1ed9ng d\u1ef1a tr\xean nguy\xean l\xfd ",(0,s.jsx)(n.strong,{children:"Dependency Injection Container"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Registration"})," - \u0110\u0103ng k\xfd provider trong module"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resolution"})," - T\u1ef1 \u0111\u1ed9ng resolve dependencies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Instantiation"})," - T\u1ea1o instance c\u1ee7a provider"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lifecycle Management"})," - Qu\u1ea3n l\xfd v\xf2ng \u0111\u1eddi"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Injection"})," - Inject v\xe0o components c\u1ea7n thi\u1ebft"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udd27 Dependency Injection Container",type:"info",children:(0,s.jsx)(n.p,{children:'DI Container l\xe0 "b\u1ed9 n\xe3o" c\u1ee7a NestJS, t\u1ef1 \u0111\u1ed9ng qu\u1ea3n l\xfd vi\u1ec7c t\u1ea1o v\xe0 k\u1ebft n\u1ed1i c\xe1c dependencies gi\u1eefa c\xe1c th\xe0nh ph\u1ea7n.'})}),"\n",(0,s.jsx)(n.h3,{id:"provider-metadata",children:"Provider Metadata"}),"\n",(0,s.jsx)(n.p,{children:"M\u1ed7i provider \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng decorators:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Provider Metadata Structure"',children:"@Injectable()                    // Injectable decorator\nexport class UserService {\n  // highlight-start\n  constructor(\n    private userRepository: UserRepository,  // Dependency injection\n    private logger: Logger\n  ) {}\n  // highlight-end\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"t\u1ea1o-provider-c\u01a1-b\u1ea3n",children:"T\u1ea1o Provider c\u01a1 b\u1ea3n"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Basic Provider Example"',children:"import { Injectable } from '@nestjs/common';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly userRepository: UserRepository) {}\n\n  async findAll(): Promise<User[]> {\n    return this.userRepository.findAll();\n  }\n\n  async findOne(id: string): Promise<User> {\n    return this.userRepository.findOne(id);\n  }\n\n  async create(createUserDto: CreateUserDto): Promise<User> {\n    return this.userRepository.create(createUserDto);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"c\u1ea5u-tr\xfac-provider",children:"C\u1ea5u tr\xfac Provider"}),"\n",(0,s.jsx)(n.p,{children:"M\u1ed7i provider c\xf3 c\xe1c th\xe0nh ph\u1ea7n ch\xednh:"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n    A[Provider Structure] --\x3e B[Injectable]\n    A --\x3e C[Constructor]\n    A --\x3e D[Dependencies]\n    A --\x3e E[Methods]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Provider Structure Breakdown"',children:"@Injectable()                    // Injectable decorator\nexport class UserService {\n  constructor(\n    private userRepository: UserRepository,  // Dependencies\n    private logger: Logger\n  ) {}\n  \n  async findAll(): Promise<User[]> {        // Methods\n    this.logger.log('Finding all users');\n    return this.userRepository.findAll();\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"injectable-decorator",children:"Injectable Decorator"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u0110\xe1nh d\u1ea5u class c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c inject"}),"\n",(0,s.jsx)(n.li,{children:"Cho ph\xe9p NestJS qu\u1ea3n l\xfd lifecycle"}),"\n",(0,s.jsx)(n.li,{children:"T\u1ef1 \u0111\u1ed9ng resolve dependencies"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Nh\u1eadn dependencies t\u1eeb DI container"}),"\n",(0,s.jsx)(n.li,{children:"S\u1eed d\u1ee5ng private/public modifiers"}),"\n",(0,s.jsx)(n.li,{children:"TypeScript type annotations"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Services, repositories, utilities"}),"\n",(0,s.jsx)(n.li,{children:"\u0110\u01b0\u1ee3c inject t\u1ef1 \u0111\u1ed9ng"}),"\n",(0,s.jsx)(n.li,{children:"Singleton instances"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Business logic implementation"}),"\n",(0,s.jsx)(n.li,{children:"Async/await support"}),"\n",(0,s.jsx)(n.li,{children:"Error handling"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"c\xe1c-lo\u1ea1i-providers",children:"C\xe1c lo\u1ea1i Providers"}),"\n",(0,s.jsx)(n.h3,{id:"1-service-providers",children:"1. Service Providers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Service providers l\xe0 c\xe1c class ch\u1ee9a business logic v\xe0 \u0111\u01b0\u1ee3c inject v\xe0o controllers ho\u1eb7c services kh\xe1c."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vai tr\xf2:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ch\u1ee9a business logic"}),"\n",(0,s.jsx)(n.li,{children:"X\u1eed l\xfd data transformation"}),"\n",(0,s.jsx)(n.li,{children:"G\u1ecdi external APIs"}),"\n",(0,s.jsx)(n.li,{children:"Orchestrate multiple operations"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n business logic ph\u1ee9c t\u1ea1p"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n t\xe1i s\u1eed d\u1ee5ng logic"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n test business logic"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n separation of concerns"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Service Provider Example"',children:"@Injectable()\nexport class UserService {\n  constructor(\n    private readonly userRepository: UserRepository,\n    private readonly emailService: EmailService,\n    private readonly logger: Logger\n  ) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise<User> {\n    // Business logic\n    const existingUser = await this.userRepository.findByEmail(createUserDto.email);\n    if (existingUser) {\n      throw new ConflictException('User already exists');\n    }\n\n    // Create user\n    const user = await this.userRepository.create(createUserDto);\n    \n    // Send welcome email\n    await this.emailService.sendWelcomeEmail(user.email);\n    \n    // Log action\n    this.logger.log(`User created: ${user.id}`);\n    \n    return user;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udd27 Service Provider Benefits",type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Separation of Concerns"})," - T\xe1ch bi\u1ec7t business logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reusability"})," - C\xf3 th\u1ec3 s\u1eed d\u1ee5ng \u1edf nhi\u1ec1u n\u01a1i"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testability"})," - D\u1ec5 d\xe0ng unit test"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainability"})," - Code d\u1ec5 maintain v\xe0 update"]}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"2-repository-providers",children:"2. Repository Providers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Repository providers l\xe0 c\xe1c class x\u1eed l\xfd data access layer, t\u01b0\u01a1ng t\xe1c tr\u1ef1c ti\u1ebfp v\u1edbi database."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vai tr\xf2:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Data persistence operations"}),"\n",(0,s.jsx)(n.li,{children:"Database queries"}),"\n",(0,s.jsx)(n.li,{children:"Data validation"}),"\n",(0,s.jsx)(n.li,{children:"Connection management"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n t\u01b0\u01a1ng t\xe1c v\u1edbi database"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n abstract database logic"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n data access patterns"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n test data operations"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Repository Provider Example"',children:"@Injectable()\nexport class UserRepository {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository<User>\n  ) {}\n\n  async findAll(): Promise<User[]> {\n    return this.userRepository.find();\n  }\n\n  async findOne(id: string): Promise<User> {\n    return this.userRepository.findOne({ where: { id } });\n  }\n\n  async findByEmail(email: string): Promise<User> {\n    return this.userRepository.findOne({ where: { email } });\n  }\n\n  async create(createUserDto: CreateUserDto): Promise<User> {\n    const user = this.userRepository.create(createUserDto);\n    return this.userRepository.save(user);\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise<User> {\n    await this.userRepository.update(id, updateUserDto);\n    return this.findOne(id);\n  }\n\n  async remove(id: string): Promise<void> {\n    await this.userRepository.delete(id);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udca1 Repository Pattern Benefits",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Access Abstraction"})," - \u1ea8n database implementation details"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testability"})," - D\u1ec5 mock database operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database Agnostic"})," - C\xf3 th\u1ec3 thay \u0111\u1ed5i database"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent Interface"})," - Interface nh\u1ea5t qu\xe1n cho data operations"]}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"3-factory-providers",children:"3. Factory Providers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Factory providers l\xe0 c\xe1c functions t\u1ea1o ra provider instances v\u1edbi configuration \u0111\u1ed9ng."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vai tr\xf2:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"T\u1ea1o providers v\u1edbi config"}),"\n",(0,s.jsx)(n.li,{children:"Dynamic provider creation"}),"\n",(0,s.jsx)(n.li,{children:"Conditional provider instantiation"}),"\n",(0,s.jsx)(n.li,{children:"Complex initialization logic"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n configuration \u0111\u1ed9ng"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n conditional providers"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n async initialization"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n complex setup"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Factory Provider Example"',children:"@Injectable()\nexport class DatabaseService {\n  constructor(\n    @Inject('DATABASE_CONFIG')\n    private readonly config: DatabaseConfig\n  ) {}\n\n  async connect(): Promise<void> {\n    // Database connection logic\n  }\n}\n\n// Factory provider\nexport const databaseProvider = {\n  provide: 'DATABASE_CONFIG',\n  useFactory: async (configService: ConfigService): Promise<DatabaseConfig> => {\n    const config = await configService.getDatabaseConfig();\n    return {\n      host: config.host,\n      port: config.port,\n      database: config.database,\n      username: config.username,\n      password: config.password,\n    };\n  },\n  inject: [ConfigService],\n};\n\n// Usage in module\n@Module({\n  providers: [\n    DatabaseService,\n    databaseProvider, // Factory provider\n  ],\n})\nexport class DatabaseModule {}\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udd27 Factory Provider Benefits",type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})," - C\u1ea5u h\xecnh \u0111\u1ed9ng d\u1ef1a tr\xean environment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Async Initialization"})," - Kh\u1edfi t\u1ea1o b\u1ea5t \u0111\u1ed3ng b\u1ed9"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conditional Logic"})," - Logic \u0111i\u1ec1u ki\u1ec7n cho provider creation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Complex Setup"})," - Setup ph\u1ee9c t\u1ea1p v\u1edbi multiple dependencies"]}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"4-value-providers",children:"4. Value Providers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Value providers l\xe0 c\xe1c constants, configuration objects, ho\u1eb7c simple values \u0111\u01b0\u1ee3c inject."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vai tr\xf2:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configuration constants"}),"\n",(0,s.jsx)(n.li,{children:"Environment variables"}),"\n",(0,s.jsx)(n.li,{children:"API keys"}),"\n",(0,s.jsx)(n.li,{children:"Simple values"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n inject constants"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n configuration values"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n environment variables"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n simple data"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Value Provider Examples"',children:"// Simple value provider\nexport const appConfig = {\n  provide: 'APP_CONFIG',\n  useValue: {\n    name: 'NestJS App',\n    version: '1.0.0',\n    environment: process.env.NODE_ENV || 'development',\n  },\n};\n\n// Configuration provider\nexport const databaseConfig = {\n  provide: 'DATABASE_CONFIG',\n  useValue: {\n    host: process.env.DB_HOST || 'localhost',\n    port: parseInt(process.env.DB_PORT) || 5432,\n    database: process.env.DB_NAME || 'myapp',\n    username: process.env.DB_USER || 'postgres',\n    password: process.env.DB_PASSWORD || 'password',\n  },\n};\n\n// API keys provider\nexport const apiKeys = {\n  provide: 'API_KEYS',\n  useValue: {\n    stripe: process.env.STRIPE_SECRET_KEY,\n    sendgrid: process.env.SENDGRID_API_KEY,\n    aws: process.env.AWS_ACCESS_KEY_ID,\n  },\n};\n\n// Usage in module\n@Module({\n  providers: [\n    appConfig,\n    databaseConfig,\n    apiKeys,\n  ],\n})\nexport class ConfigModule {}\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udca1 Value Provider Benefits",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Simple Injection"})," - Inject \u0111\u01a1n gi\u1ea3n constants v\xe0 values"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Environment Configuration"})," - C\u1ea5u h\xecnh d\u1ef1a tr\xean environment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Centralized Config"})," - Qu\u1ea3n l\xfd configuration t\u1eadp trung"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Easy Testing"})," - D\u1ec5 d\xe0ng override values trong tests"]}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"5-class-providers",children:"5. Class Providers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Class providers l\xe0 c\xe1c custom classes ho\u1eb7c third-party classes \u0111\u01b0\u1ee3c inject."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vai tr\xf2:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Custom business logic classes"}),"\n",(0,s.jsx)(n.li,{children:"Third-party library classes"}),"\n",(0,s.jsx)(n.li,{children:"Utility classes"}),"\n",(0,s.jsx)(n.li,{children:"Wrapper classes"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n custom classes"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n third-party integrations"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n utility functions"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n wrapper implementations"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Class Provider Examples"',children:"// Custom utility class\n@Injectable()\nexport class StringUtils {\n  capitalize(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  slugify(str: string): string {\n    return str\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  }\n}\n\n// Third-party class wrapper\n@Injectable()\nexport class EmailService {\n  private transporter: any;\n\n  constructor() {\n    this.transporter = nodemailer.createTransporter({\n      host: process.env.SMTP_HOST,\n      port: process.env.SMTP_PORT,\n      secure: true,\n      auth: {\n        user: process.env.SMTP_USER,\n        pass: process.env.SMTP_PASS,\n      },\n    });\n  }\n\n  async sendEmail(to: string, subject: string, content: string): Promise<void> {\n    await this.transporter.sendMail({\n      from: process.env.SMTP_FROM,\n      to,\n      subject,\n      html: content,\n    });\n  }\n}\n\n// Usage in module\n@Module({\n  providers: [\n    StringUtils,\n    EmailService,\n  ],\n})\nexport class UtilsModule {}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"provider-registration",children:"Provider Registration"}),"\n",(0,s.jsx)(n.h3,{id:"module-registration",children:"Module Registration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," \u0110\u0103ng k\xfd providers trong module \u0111\u1ec3 NestJS c\xf3 th\u1ec3 inject ch\xfang."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1ch ho\u1ea1t \u0111\u1ed9ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Providers \u0111\u01b0\u1ee3c khai b\xe1o trong ",(0,s.jsx)(n.code,{children:"@Module()"})," decorator"]}),"\n",(0,s.jsx)(n.li,{children:"NestJS t\u1ef1 \u0111\u1ed9ng qu\u1ea3n l\xfd lifecycle"}),"\n",(0,s.jsx)(n.li,{children:"Dependencies \u0111\u01b0\u1ee3c resolve t\u1ef1 \u0111\u1ed9ng"}),"\n",(0,s.jsx)(n.li,{children:"Singleton instances \u0111\u01b0\u1ee3c chia s\u1ebb"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Module Registration Example"',children:"@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [\n    UserService,           // Service provider\n    UserRepository,        // Repository provider\n    {\n      provide: 'APP_CONFIG',  // Value provider\n      useValue: {\n        name: 'User Module',\n        version: '1.0.0',\n      },\n    },\n    {\n      provide: 'DATABASE_CONFIG',  // Factory provider\n      useFactory: (configService: ConfigService) => {\n        return configService.getDatabaseConfig();\n      },\n      inject: [ConfigService],\n    },\n  ],\n  exports: [UserService, UserRepository], // Export \u0111\u1ec3 modules kh\xe1c s\u1eed d\u1ee5ng\n})\nexport class UserModule {}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"global-providers",children:"Global Providers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Providers c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf m\u1ecdi n\u01a1i trong \u1ee9ng d\u1ee5ng m\xe0 kh\xf4ng c\u1ea7n import."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1ch s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["S\u1eed d\u1ee5ng ",(0,s.jsx)(n.code,{children:"@Global()"})," decorator"]}),"\n",(0,s.jsx)(n.li,{children:"\u0110\u0103ng k\xfd \u1edf AppModule level"}),"\n",(0,s.jsx)(n.li,{children:"T\u1ef1 \u0111\u1ed9ng c\xf3 s\u1eb5n trong to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Global Provider Example"',children:"@Global()\n@Module({\n  providers: [\n    {\n      provide: 'LOGGER',\n      useFactory: () => {\n        return new Logger('GlobalLogger');\n      },\n    },\n    {\n      provide: 'CONFIG',\n      useValue: {\n        appName: 'NestJS App',\n        version: '1.0.0',\n      },\n    },\n  ],\n  exports: ['LOGGER', 'CONFIG'],\n})\nexport class GlobalModule {}\n\n// Usage \u1edf b\u1ea5t k\u1ef3 \u0111\xe2u\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject('LOGGER') private logger: Logger,\n    @Inject('CONFIG') private config: any\n  ) {}\n\n  logUserCreation(userId: string): void {\n    this.logger.log(`User created in ${this.config.appName}: ${userId}`);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"provider-scopes",children:"Provider Scopes"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n    A[Provider Scopes] --\x3e B[Singleton]\n    A --\x3e C[Request]\n    A --\x3e D[Transient]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0"}),"\n",(0,s.jsx)(n.h3,{id:"default-scope-singleton",children:"Default Scope (Singleton)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," M\u1eb7c \u0111\u1ecbnh, t\u1ea5t c\u1ea3 providers \u0111\u1ec1u c\xf3 scope l\xe0 singleton. Ch\u1ec9 c\xf3 m\u1ed9t instance duy nh\u1ea5t cho to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u0110\u1eb7c \u0111i\u1ec3m:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"M\u1ed9t instance duy nh\u1ea5t"}),"\n",(0,s.jsx)(n.li,{children:"Shared state across requests"}),"\n",(0,s.jsx)(n.li,{children:"Memory efficient"}),"\n",(0,s.jsx)(n.li,{children:"Kh\xf4ng thread-safe"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Singleton Scope Example"',children:"@Injectable()\nexport class UserService {\n  private userCount = 0; // Shared state\n\n  createUser(): User {\n    this.userCount++; // State \u0111\u01b0\u1ee3c chia s\u1ebb\n    return { id: this.userCount.toString(), name: 'User' };\n  }\n\n  getUserCount(): number {\n    return this.userCount;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-scope",children:"Request Scope"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Request Scope t\u1ea1o ra m\u1ed9t instance m\u1edbi cho m\u1ed7i HTTP request."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u0110\u1eb7c \u0111i\u1ec3m:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Instance m\u1edbi cho m\u1ed7i request"}),"\n",(0,s.jsx)(n.li,{children:"Isolated state per request"}),"\n",(0,s.jsx)(n.li,{children:"Thread-safe"}),"\n",(0,s.jsx)(n.li,{children:"Memory overhead"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n isolated state per request"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n request-specific data"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n thread safety"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n user-specific context"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Request Scope Example"',children:"@Injectable({ scope: Scope.REQUEST })\nexport class UserService {\n  private requestId: string;\n\n  constructor() {\n    this.requestId = Math.random().toString(36).substr(2, 9);\n  }\n\n  getRequestId(): string {\n    return this.requestId; // Unique per request\n  }\n\n  createUser(): User {\n    return { id: '1', name: 'User', requestId: this.requestId };\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transient-scope",children:"Transient Scope"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Transient Scope t\u1ea1o ra m\u1ed9t instance m\u1edbi m\u1ed7i l\u1ea7n provider \u0111\u01b0\u1ee3c inject."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u0110\u1eb7c \u0111i\u1ec3m:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Instance m\u1edbi m\u1ed7i l\u1ea7n inject"}),"\n",(0,s.jsx)(n.li,{children:"No shared state"}),"\n",(0,s.jsx)(n.li,{children:"Memory overhead"}),"\n",(0,s.jsx)(n.li,{children:"Complete isolation"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Khi n\xe0o s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n complete isolation"}),"\n",(0,s.jsx)(n.li,{children:"Khi kh\xf4ng mu\u1ed1n shared state"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n fresh instance m\u1ed7i l\u1ea7n"}),"\n",(0,s.jsx)(n.li,{children:"Khi c\u1ea7n temporary objects"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Transient Scope Example"',children:"@Injectable({ scope: Scope.TRANSIENT })\nexport class TemporaryService {\n  private instanceId: string;\n\n  constructor() {\n    this.instanceId = Math.random().toString(36).substr(2, 9);\n  }\n\n  getInstanceId(): string {\n    return this.instanceId; // Unique per injection\n  }\n}\n\n// M\u1ed7i l\u1ea7n inject s\u1ebd c\xf3 instance kh\xe1c nhau\n@Injectable()\nexport class UserService {\n  constructor(\n    private tempService1: TemporaryService,\n    private tempService2: TemporaryService\n  ) {}\n\n  getIds(): { id1: string; id2: string } {\n    return {\n      id1: this.tempService1.getInstanceId(),\n      id2: this.tempService2.getInstanceId(),\n    };\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dependency-injection",children:"Dependency Injection"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n    A[Dependency Injection] --\x3e B[Constructor]\n    A --\x3e C[Property]\n    A --\x3e D[Method]\n    \n    B --\x3e E[Inject qua constructor]\n    C --\x3e F[Inject qua properties]\n    D --\x3e G[Inject qua method params]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9\n    style G fill:#f9fbe7"}),"\n",(0,s.jsx)(n.h3,{id:"constructor-injection",children:"Constructor Injection"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Inject dependencies th\xf4ng qua constructor."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1ch ho\u1ea1t \u0111\u1ed9ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"NestJS t\u1ef1 \u0111\u1ed9ng inject dependencies"}),"\n",(0,s.jsx)(n.li,{children:"S\u1eed d\u1ee5ng TypeScript types \u0111\u1ec3 resolve"}),"\n",(0,s.jsx)(n.li,{children:"Singleton instances \u0111\u01b0\u1ee3c chia s\u1ebb"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Constructor Injection Examples"',children:"@Injectable()\nexport class UserService {\n  constructor(\n    private readonly userRepository: UserRepository,\n    private readonly emailService: EmailService,\n    private readonly logger: Logger,\n    @Inject('CONFIG') private readonly config: any\n  ) {}\n\n  async createUser(dto: CreateUserDto): Promise<User> {\n    this.logger.log('Creating user with config:', this.config);\n    \n    const user = await this.userRepository.create(dto);\n    await this.emailService.sendWelcomeEmail(user.email);\n    \n    return user;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"property-injection",children:"Property Injection"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Inject dependencies th\xf4ng qua properties."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1ch s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["S\u1eed d\u1ee5ng ",(0,s.jsx)(n.code,{children:"@Inject()"})," decorator"]}),"\n",(0,s.jsx)(n.li,{children:"H\u1eefu \xedch cho optional dependencies"}),"\n",(0,s.jsx)(n.li,{children:"Dynamic injection"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Property Injection Examples"',children:"@Injectable()\nexport class UserService {\n  @Inject(UserRepository)\n  private readonly userRepository: UserRepository;\n\n  @InjectOptional(EmailService)\n  private readonly emailService?: EmailService;\n\n  @Inject('CONFIG')\n  private readonly config: any;\n\n  async createUser(dto: CreateUserDto): Promise<User> {\n    const user = await this.userRepository.create(dto);\n    \n    if (this.emailService) {\n      await this.emailService.sendWelcomeEmail(user.email);\n    }\n    \n    return user;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"method-injection",children:"Method Injection"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," Inject dependencies th\xf4ng qua method parameters."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1ch s\u1eed d\u1ee5ng:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["S\u1eed d\u1ee5ng ",(0,s.jsx)(n.code,{children:"@Inject()"})," trong method parameters"]}),"\n",(0,s.jsx)(n.li,{children:"H\u1eefu \xedch cho dynamic injection"}),"\n",(0,s.jsx)(n.li,{children:"Method-level dependencies"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Method Injection Examples"',children:"@Injectable()\nexport class UserService {\n  async createUser(\n    dto: CreateUserDto,\n    @Inject('REPOSITORY') repository: UserRepository,\n    @Inject('LOGGER') logger: Logger\n  ): Promise<User> {\n    logger.log('Creating user');\n    const user = await repository.create(dto);\n    logger.log('User created:', user.id);\n    return user;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"provider-lifecycle",children:"Provider Lifecycle"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n    A[Provider Lifecycle] --\x3e B[Module Init]\n    A --\x3e C[Module Destroy]\n    A --\x3e D[App Bootstrap]\n    A --\x3e E[App Shutdown]\n    \n    B --\x3e F[onModuleInit]\n    C --\x3e G[onModuleDestroy]\n    D --\x3e H[onApplicationBootstrap]\n    E --\x3e I[onApplicationShutdown]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9\n    style G fill:#f9fbe7\n    style H fill:#fff8e1\n    style I fill:#f3e5f5"}),"\n",(0,s.jsx)(n.h3,{id:"lifecycle-hooks",children:"Lifecycle Hooks"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," C\xe1c methods \u0111\u01b0\u1ee3c g\u1ecdi trong c\xe1c giai \u0111o\u1ea1n kh\xe1c nhau c\u1ee7a provider lifecycle."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1c hooks ch\xednh:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OnModuleInit"})," - Sau khi module \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OnModuleDestroy"})," - Tr\u01b0\u1edbc khi module b\u1ecb h\u1ee7y"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OnApplicationBootstrap"})," - Sau khi \u1ee9ng d\u1ee5ng bootstrap"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OnApplicationShutdown"})," - Tr\u01b0\u1edbc khi \u1ee9ng d\u1ee5ng shutdown"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Lifecycle Hooks Example"',children:"@Injectable()\nexport class UserService implements OnModuleInit, OnModuleDestroy {\n  private connection: any;\n\n  async onModuleInit() {\n    // Kh\u1edfi t\u1ea1o database connection\n    this.connection = await this.createDatabaseConnection();\n    console.log('Database connected');\n  }\n\n  async onModuleDestroy() {\n    // \u0110\xf3ng database connection\n    if (this.connection) {\n      await this.connection.close();\n      console.log('Database disconnected');\n    }\n  }\n\n  private async createDatabaseConnection() {\n    // Database connection logic\n    return { close: () => Promise.resolve() };\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"lifecycle-events",children:"Lifecycle Events"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u0110\u1ecbnh ngh\u0129a:"})," C\xe1c events \u0111\u01b0\u1ee3c emit trong qu\xe1 tr\xecnh lifecycle."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"C\xe1c events ch\xednh:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onModuleInit"})," - Module initialization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onModuleDestroy"})," - Module destruction"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onApplicationBootstrap"})," - Application bootstrap"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onApplicationShutdown"})," - Application shutdown"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Lifecycle Events Example"',children:"@Injectable()\nexport class LifecycleService {\n  constructor(private eventEmitter: EventEmitter2) {}\n\n  async onModuleInit() {\n    this.eventEmitter.emit('module.initialized', 'UserModule');\n  }\n\n  async onModuleDestroy() {\n    this.eventEmitter.emit('module.destroyed', 'UserModule');\n  }\n\n  async onApplicationBootstrap() {\n    this.eventEmitter.emit('application.bootstrapped');\n  }\n\n  async onApplicationShutdown(signal?: string) {\n    this.eventEmitter.emit('application.shutdown', signal);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"provider-testing",children:"Provider Testing"}),"\n",(0,s.jsx)(n.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"M\u1ee5c \u0111\xedch:"})," Test t\u1eebng provider \u0111\u1ed9c l\u1eadp \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o logic ho\u1ea1t \u0111\u1ed9ng \u0111\xfang."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Ph\u01b0\u01a1ng ph\xe1p:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mock dependencies"}),"\n",(0,s.jsx)(n.li,{children:"Test business logic"}),"\n",(0,s.jsx)(n.li,{children:"Test error scenarios"}),"\n",(0,s.jsx)(n.li,{children:"Test edge cases"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Provider Unit Testing"',children:"describe('UserService', () => {\n  let service: UserService;\n  let userRepository: jest.Mocked<UserRepository>;\n  let emailService: jest.Mocked<EmailService>;\n\n  beforeEach(async () => {\n    const module = await Test.createTestingModule({\n      providers: [\n        UserService,\n        {\n          provide: UserRepository,\n          useValue: {\n            create: jest.fn(),\n            findByEmail: jest.fn(),\n            findOne: jest.fn(),\n          },\n        },\n        {\n          provide: EmailService,\n          useValue: {\n            sendWelcomeEmail: jest.fn(),\n          },\n        },\n      ],\n    }).compile();\n\n    service = module.get<UserService>(UserService);\n    userRepository = module.get(UserRepository);\n    emailService = module.get(EmailService);\n  });\n\n  it('should be defined', () => {\n    expect(service).toBeDefined();\n  });\n\n  it('should create user successfully', async () => {\n    const createUserDto = { name: 'John', email: 'john@example.com' };\n    const expectedUser = { id: '1', ...createUserDto };\n\n    userRepository.findByEmail.mockResolvedValue(null);\n    userRepository.create.mockResolvedValue(expectedUser);\n    emailService.sendWelcomeEmail.mockResolvedValue(undefined);\n\n    const result = await service.createUser(createUserDto);\n\n    expect(result).toEqual(expectedUser);\n    expect(userRepository.create).toHaveBeenCalledWith(createUserDto);\n    expect(emailService.sendWelcomeEmail).toHaveBeenCalledWith(createUserDto.email);\n  });\n\n  it('should throw error if user already exists', async () => {\n    const createUserDto = { name: 'John', email: 'john@example.com' };\n    const existingUser = { id: '1', ...createUserDto };\n\n    userRepository.findByEmail.mockResolvedValue(existingUser);\n\n    await expect(service.createUser(createUserDto)).rejects.toThrow(\n      'User already exists'\n    );\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"M\u1ee5c \u0111\xedch:"})," Test provider trong context c\u1ee7a module ho\u1eb7c \u1ee9ng d\u1ee5ng ho\xe0n ch\u1ec9nh."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Ph\u01b0\u01a1ng ph\xe1p:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Test v\u1edbi real dependencies"}),"\n",(0,s.jsx)(n.li,{children:"Test database operations"}),"\n",(0,s.jsx)(n.li,{children:"Test external service calls"}),"\n",(0,s.jsx)(n.li,{children:"Test error scenarios"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Provider Integration Testing"',children:"describe('UserService Integration', () => {\n  let app: INestApplication;\n  let userService: UserService;\n  let userRepository: UserRepository;\n\n  beforeEach(async () => {\n    const moduleFixture = await Test.createTestingModule({\n      imports: [\n        TypeOrmModule.forRoot({\n          type: 'sqlite',\n          database: ':memory:',\n          entities: [User],\n          synchronize: true,\n        }),\n        UserModule,\n      ],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    await app.init();\n\n    userService = app.get<UserService>(UserService);\n    userRepository = app.get<UserRepository>(UserRepository);\n  });\n\n  afterEach(async () => {\n    await app.close();\n  });\n\n  it('should create and retrieve user', async () => {\n    const createUserDto = { name: 'John', email: 'john@example.com' };\n\n    const createdUser = await userService.createUser(createUserDto);\n    expect(createdUser).toBeDefined();\n    expect(createdUser.name).toBe(createUserDto.name);\n    expect(createdUser.email).toBe(createUserDto.email);\n\n    const retrievedUser = await userService.findOne(createdUser.id);\n    expect(retrievedUser).toEqual(createdUser);\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n    A[Good Practices] --\x3e B[Single Responsibility]\n    A --\x3e C[Error Handling]\n    A --\x3e D[Dependency Injection]\n    A --\x3e E[Proper Scoping]\n    A --\x3e F[Testing Strategy]\n    \n    B --\x3e G[M\u1ed7i provider m\u1ed9t nhi\u1ec7m v\u1ee5]\n    C --\x3e H[X\u1eed l\xfd l\u1ed7i gracefully]\n    D --\x3e I[S\u1eed d\u1ee5ng DI container]\n    E --\x3e J[Ch\u1ecdn scope ph\xf9 h\u1ee3p]\n    F --\x3e K[Test comprehensive]\n    \n    style A fill:#e8f5e8\n    style B fill:#f1f8e9\n    style C fill:#fff3e0\n    style D fill:#fce4ec\n    style E fill:#f3e5f5\n    style F fill:#e1f5fe\n    style G fill:#f9fbe7\n    style H fill:#fff8e1\n    style I fill:#e8f5e8\n    style J fill:#f3e5f5\n    style K fill:#e1f5fe"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n    A[Bad Practices] --\x3e B[Multiple Responsibilities]\n    A --\x3e C[No Error Handling]\n    A --\x3e D[Manual Instantiation]\n    A --\x3e E[Wrong Scoping]\n    A --\x3e F[No Testing]\n    \n    B --\x3e G[Provider qu\xe1 nhi\u1ec1u nhi\u1ec7m v\u1ee5]\n    C --\x3e H[Kh\xf4ng x\u1eed l\xfd l\u1ed7i]\n    D --\x3e I[T\u1ea1o instance th\u1ee7 c\xf4ng]\n    E --\x3e J[Ch\u1ecdn scope sai]\n    F --\x3e K[Kh\xf4ng test]\n    \n    style A fill:#ffebee\n    style B fill:#ffcdd2\n    style C fill:#ffe0b2\n    style D fill:#f8bbd9\n    style E fill:#e1bee7\n    style F fill:#c5cae9\n    style G fill:#ffcdd2\n    style H fill:#ffe0b2\n    style I fill:#f8bbd9\n    style J fill:#e1bee7\n    style K fill:#c5cae9"}),"\n",(0,s.jsx)(n.h3,{id:"1-single-responsibility",children:"1. Single Responsibility"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Single Responsibility Principle"',children:"// \u2705 T\u1ed1t - M\u1ed7i provider m\u1ed9t responsibility\n@Injectable()\nexport class UserService {\n  // Ch\u1ec9 x\u1eed l\xfd user-related business logic\n}\n\n@Injectable()\nexport class EmailService {\n  // Ch\u1ec9 x\u1eed l\xfd email operations\n}\n\n@Injectable()\nexport class PaymentService {\n  // Ch\u1ec9 x\u1eed l\xfd payment operations\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - Provider qu\xe1 nhi\u1ec1u responsibilities\n@Injectable()\nexport class UserService {\n  // X\u1eed l\xfd users, emails, payments, logging, validation...\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-proper-error-handling",children:"2. Proper Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Proper Error Handling"',children:"// \u2705 T\u1ed1t - X\u1eed l\xfd l\u1ed7i \u0111\xfang c\xe1ch\n@Injectable()\nexport class UserService {\n  async createUser(dto: CreateUserDto): Promise<User> {\n    try {\n      const existingUser = await this.userRepository.findByEmail(dto.email);\n      if (existingUser) {\n        throw new ConflictException('User already exists');\n      }\n\n      const user = await this.userRepository.create(dto);\n      await this.emailService.sendWelcomeEmail(user.email);\n      \n      return user;\n    } catch (error) {\n      this.logger.error('Failed to create user', error);\n      throw error;\n    }\n  }\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - Kh\xf4ng x\u1eed l\xfd l\u1ed7i\n@Injectable()\nexport class UserService {\n  async createUser(dto: CreateUserDto): Promise<User> {\n    const user = await this.userRepository.create(dto); // C\xf3 th\u1ec3 throw error\n    await this.emailService.sendWelcomeEmail(user.email); // C\xf3 th\u1ec3 throw error\n    return user;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-dependency-injection",children:"3. Dependency Injection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Dependency Injection Best Practices"',children:"// \u2705 T\u1ed1t - Constructor injection\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly userRepository: UserRepository,\n    private readonly emailService: EmailService,\n    private readonly logger: Logger\n  ) {}\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - Manual instantiation\n@Injectable()\nexport class UserService {\n  private userRepository = new UserRepository(); // Kh\xf4ng s\u1eed d\u1ee5ng DI\n  private emailService = new EmailService();     // Kh\xf4ng s\u1eed d\u1ee5ng DI\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-proper-scoping",children:"4. Proper Scoping"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Provider Scoping Best Practices"',children:"// \u2705 T\u1ed1t - S\u1eed d\u1ee5ng scope ph\xf9 h\u1ee3p\n@Injectable({ scope: Scope.REQUEST })\nexport class UserContextService {\n  // Request-specific data\n}\n\n@Injectable()\nexport class UserService {\n  // Singleton service\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - S\u1eed d\u1ee5ng scope kh\xf4ng ph\xf9 h\u1ee3p\n@Injectable({ scope: Scope.TRANSIENT })\nexport class DatabaseService {\n  // Database connection n\xean l\xe0 singleton\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"5-testing-strategy",children:"5. Testing Strategy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Testing Strategy Best Practices"',children:"// \u2705 T\u1ed1t - Test strategy r\xf5 r\xe0ng\n@Injectable()\nexport class UserService {\n  async createUser(dto: CreateUserDto): Promise<User> {\n    // Business logic \u0111\u01b0\u1ee3c test\n    const user = await this.userRepository.create(dto);\n    await this.emailService.sendWelcomeEmail(user.email);\n    return user;\n  }\n}\n\n// Unit test\ndescribe('UserService', () => {\n  it('should create user and send email', async () => {\n    // Mock dependencies v\xe0 test business logic\n  });\n});\n\n// Integration test\ndescribe('UserService Integration', () => {\n  it('should work with real dependencies', async () => {\n    // Test v\u1edbi real dependencies\n  });\n});\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.admonition,{title:"\ud83d\udca1 L\u1eddi khuy\xean t\u1ed5ng k\u1ebft",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["S\u1eed d\u1ee5ng ",(0,s.jsx)(n.code,{children:"@Injectable()"})," decorator cho t\u1ea5t c\u1ea3 providers"]}),"\n",(0,s.jsx)(n.li,{children:"T\xe1ch bi\u1ec7t business logic ra services"}),"\n",(0,s.jsx)(n.li,{children:"S\u1eed d\u1ee5ng repositories cho data access"}),"\n",(0,s.jsx)(n.li,{children:"Implement lifecycle hooks khi c\u1ea7n thi\u1ebft"}),"\n",(0,s.jsx)(n.li,{children:"Test providers m\u1ed9t c\xe1ch comprehensive"}),"\n",(0,s.jsx)(n.li,{children:"S\u1eed d\u1ee5ng proper scoping"}),"\n",(0,s.jsx)(n.li,{children:"Follow dependency injection best practices"}),"\n",(0,s.jsx)(n.li,{children:"Handle errors gracefully"}),"\n"]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"B\xe0i ti\u1ebfp theo:"})," ",(0,s.jsx)(n.a,{href:"/docs/overview/middleware",children:"Middleware"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);