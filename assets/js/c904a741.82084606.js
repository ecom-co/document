"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[2222],{11470:(e,n,i)=>{i.d(n,{A:()=>S});var r=i(96540),t=i(34164),s=i(23104),a=i(56347),o=i(205),d=i(57485),c=i(31682),l=i(70679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){const{values:n,children:i}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:i,default:r}})=>({value:e,label:n,attributes:i,default:r}))}(i);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function g({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const i=(0,a.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(t),(0,r.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})},[t,i])]}function h(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,s=m(e),[a,d]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s})),[c,u]=p({queryString:i,groupId:t}),[h,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,t]=(0,l.Dv)(n);return[i,(0,r.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),v=(()=>{const e=c??h;return g({value:e,tabValues:s})?e:null})();(0,o.A)(()=>{v&&d(v)},[v]);return{selectedValue:a,selectValue:(0,r.useCallback)(e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),x(e)},[u,x,s]),tabValues:s}}var x=i(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=i(74848);function y({className:e,block:n,selectedValue:i,selectValue:r,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),s=a[t].value;s!==i&&(d(n),r(s))},l=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=o.indexOf(e.currentTarget)+1;n=o[i]??o[0];break}case"ArrowLeft":{const i=o.indexOf(e.currentTarget)-1;n=o[i]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:r})=>(0,j.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{o.push(e)},onKeyDown:l,onClick:c,...r,className:(0,t.A)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function f({lazy:e,children:n,selectedValue:i}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===i);return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function b(e){const n=h(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",v.tabList),children:[(0,j.jsx)(y,{...n,...e}),(0,j.jsx)(f,{...n,...e})]})}function S(e){const n=(0,x.A)();return(0,j.jsx)(b,{...e,children:u(e.children)},String(n))}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(96540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},79950:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ecom-co/libs/typeorm/docs/migrations-seeding","title":"Migrations & Seeding \u2014 Database Versioning v\xe0 Data Population","description":"Migration v\xe0 Seeding system cung c\u1ea5p database versioning, schema management v\xe0 data population cho development, testing v\xe0 production environments.","source":"@site/docs/ecom-co/libs/typeorm/docs/migrations-seeding.md","sourceDirName":"ecom-co/libs/typeorm/docs","slug":"/migrations-seeding","permalink":"/document/docs/migrations-seeding","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/ecom-co/libs/typeorm/docs/migrations-seeding.md","tags":[{"inline":true,"label":"migrations","permalink":"/document/docs/tags/migrations"},{"inline":true,"label":"seeding","permalink":"/document/docs/tags/seeding"},{"inline":true,"label":"database","permalink":"/document/docs/tags/database"},{"inline":true,"label":"versioning","permalink":"/document/docs/tags/versioning"},{"inline":true,"label":"schema","permalink":"/document/docs/tags/schema"},{"inline":true,"label":"data-population","permalink":"/document/docs/tags/data-population"}],"version":"current","frontMatter":{"id":"migrations-seeding","title":"Migrations & Seeding \u2014 Database Versioning v\xe0 Data Population","sidebar_label":"Migrations & Seeding","slug":"/migrations-seeding","description":"Migration v\xe0 Seeding system cung c\u1ea5p database versioning, schema management v\xe0 data population cho development, testing v\xe0 production environments.","tags":["migrations","seeding","database","versioning","schema","data-population"]},"sidebar":"tutorialSidebar","previous":{"title":"Transformers","permalink":"/document/docs/transformers"},"next":{"title":"Development Guide","permalink":"/document/docs/development-guide"}}');var t=i(74848),s=i(28453);i(11470);const a={id:"migrations-seeding",title:"Migrations & Seeding \u2014 Database Versioning v\xe0 Data Population",sidebar_label:"Migrations & Seeding",slug:"/migrations-seeding",description:"Migration v\xe0 Seeding system cung c\u1ea5p database versioning, schema management v\xe0 data population cho development, testing v\xe0 production environments.",tags:["migrations","seeding","database","versioning","schema","data-population"]},o=void 0,d={},c=[{value:"T\u1ed5ng quan",id:"t\u1ed5ng-quan",level:2},{value:"Migration System",id:"migration-system",level:2},{value:"T\u1ed5ng quan Migration",id:"t\u1ed5ng-quan-migration",level:3},{value:"Migration Files",id:"migration-files",level:3},{value:"C\u1ea5u tr\xfac Migration",id:"c\u1ea5u-tr\xfac-migration",level:4},{value:"Migration Interface",id:"migration-interface",level:4},{value:"V\xed d\u1ee5 Migration",id:"v\xed-d\u1ee5-migration",level:4},{value:"Migration Commands",id:"migration-commands",level:3},{value:"Generate Migration",id:"generate-migration",level:4},{value:"Create Migration",id:"create-migration",level:4},{value:"Run Migrations",id:"run-migrations",level:4},{value:"Revert Migration",id:"revert-migration",level:4},{value:"Migration Configuration",id:"migration-configuration",level:3},{value:"Data Source Configuration",id:"data-source-configuration",level:4},{value:"Migration Table",id:"migration-table",level:4},{value:"Migration Best Practices",id:"migration-best-practices",level:3},{value:"1. Naming Convention",id:"1-naming-convention",level:4},{value:"2. Atomic Changes",id:"2-atomic-changes",level:4},{value:"3. Proper Rollback",id:"3-proper-rollback",level:4},{value:"Seeding System",id:"seeding-system",level:2},{value:"T\u1ed5ng quan Seeding",id:"t\u1ed5ng-quan-seeding",level:3},{value:"Seed Configuration",id:"seed-configuration",level:3},{value:"Seed Entry Point",id:"seed-entry-point",level:4},{value:"Seed Function",id:"seed-function",level:4},{value:"Running Seeds",id:"running-seeds",level:3},{value:"Command Line",id:"command-line",level:4},{value:"Programmatic Usage",id:"programmatic-usage",level:4},{value:"Seed Implementation Examples",id:"seed-implementation-examples",level:3},{value:"1. Basic User Seeding",id:"1-basic-user-seeding",level:4},{value:"2. Product Seeding v\u1edbi Relationships",id:"2-product-seeding-v\u1edbi-relationships",level:4},{value:"3. Main Seed Function",id:"3-main-seed-function",level:4},{value:"Environment-specific Seeding",id:"environment-specific-seeding",level:3},{value:"Development Seeding",id:"development-seeding",level:4},{value:"Test Seeding",id:"test-seeding",level:4},{value:"CLI Scripts",id:"cli-scripts",level:2},{value:"Available Scripts",id:"available-scripts",level:3},{value:"Script Configuration",id:"script-configuration",level:3},{value:"Script Usage Examples",id:"script-usage-examples",level:3},{value:"Development Workflow",id:"development-workflow",level:4},{value:"Production Deployment",id:"production-deployment",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"Migration Best Practices",id:"migration-best-practices-1",level:3},{value:"Seeding Best Practices",id:"seeding-best-practices",level:3},{value:"V\xed d\u1ee5 ho\xe0n ch\u1ec9nh",id:"v\xed-d\u1ee5-ho\xe0n-ch\u1ec9nh",level:2},{value:"Migration Workflow",id:"migration-workflow",level:3},{value:"Seeding Workflow",id:"seeding-workflow",level:3},{value:"CI/CD Integration",id:"cicd-integration",level:3},{value:"Rollback Strategy",id:"rollback-strategy",level:3}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Migration v\xe0 Seeding system cung c\u1ea5p database versioning, schema management v\xe0 data population cho development, testing v\xe0 production environments v\u1edbi TypeORM integration."})}),"\n",(0,t.jsx)(n.h2,{id:"t\u1ed5ng-quan",children:"T\u1ed5ng quan"}),"\n",(0,t.jsx)(n.p,{children:"Migration v\xe0 Seeding system bao g\u1ed3m:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Migration System"})," - Database schema versioning v\xe0 management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Seeding System"})," - Data population cho development v\xe0 testing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeORM Integration"})," - S\u1eed d\u1ee5ng TypeORM migration tools"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CLI Scripts"})," - NPM scripts \u0111\u1ec3 qu\u1ea3n l\xfd database"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Support"})," - H\u1ed7 tr\u1ee3 nhi\u1ec1u m\xf4i tr\u01b0\u1eddng kh\xe1c nhau"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"migration-system",children:"Migration System"}),"\n",(0,t.jsx)(n.h3,{id:"t\u1ed5ng-quan-migration",children:"T\u1ed5ng quan Migration"}),"\n",(0,t.jsx)(n.p,{children:"Migration l\xe0 c\xe1ch \u0111\u1ec3 qu\u1ea3n l\xfd database schema changes theo th\u1eddi gian, \u0111\u1ea3m b\u1ea3o:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Control"})," - Theo d\xf5i thay \u0111\u1ed5i database schema"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Team Collaboration"})," - \u0110\u1ed3ng b\u1ed9 schema gi\u1eefa c\xe1c developers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Consistency"})," - \u0110\u1ea3m b\u1ea3o schema gi\u1ed1ng nhau gi\u1eefa c\xe1c m\xf4i tr\u01b0\u1eddng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rollback Support"})," - C\xf3 th\u1ec3 revert v\u1ec1 version c\u0169 n\u1ebfu c\u1ea7n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"migration-files",children:"Migration Files"}),"\n",(0,t.jsx)(n.h4,{id:"c\u1ea5u-tr\xfac-migration",children:"C\u1ea5u tr\xfac Migration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import type { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class InitDb1754759157275 implements MigrationInterface {\n    name = 'InitDb1754759157275';\n\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        // Logic \u0111\u1ec3 apply migration\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n        // Logic \u0111\u1ec3 revert migration\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"migration-interface",children:"Migration Interface"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Method"}),(0,t.jsx)(n.th,{children:"M\xf4 t\u1ea3"}),(0,t.jsx)(n.th,{children:"Khi n\xe0o \u0111\u01b0\u1ee3c g\u1ecdi"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"up()"})}),(0,t.jsx)(n.td,{children:"Apply migration"}),(0,t.jsx)(n.td,{children:"Khi ch\u1ea1y migration"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"down()"})}),(0,t.jsx)(n.td,{children:"Revert migration"}),(0,t.jsx)(n.td,{children:"Khi revert migration"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"v\xed-d\u1ee5-migration",children:"V\xed d\u1ee5 Migration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import type { MigrationInterface, QueryRunner } from \'typeorm\';\n\nexport class CreateUsersTable1754759157275 implements MigrationInterface {\n    name = \'CreateUsersTable1754759157275\';\n\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        await queryRunner.query(`\n      CREATE TABLE "users" (\n        "id" uuid NOT NULL DEFAULT uuid_generate_v4(),\n        "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n        "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n        "deletedAt" TIMESTAMP WITH TIME ZONE,\n        "email" character varying(255) NOT NULL,\n        "firstName" character varying(100),\n        "lastName" character varying(100),\n        "isActive" integer NOT NULL DEFAULT 1,\n        CONSTRAINT "PK_users" PRIMARY KEY ("id"),\n        CONSTRAINT "UQ_users_email" UNIQUE ("email")\n      )\n    `);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n        await queryRunner.query(\'DROP TABLE "users"\');\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"migration-commands",children:"Migration Commands"}),"\n",(0,t.jsx)(n.h4,{id:"generate-migration",children:"Generate Migration"}),"\n",(0,t.jsx)(n.p,{children:"T\u1ea1o migration m\u1edbi d\u1ef1a tr\xean thay \u0111\u1ed5i entities:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run typeorm:generate -- src/migrations/MigrationName\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"V\xed d\u1ee5:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run typeorm:generate -- src/migrations/AddUserProfile\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"K\u1ebft qu\u1ea3:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["T\u1ea1o file migration m\u1edbi trong ",(0,t.jsx)(n.code,{children:"src/migrations/"})]}),"\n",(0,t.jsx)(n.li,{children:"T\u1ef1 \u0111\u1ed9ng detect thay \u0111\u1ed5i t\u1eeb entities"}),"\n",(0,t.jsxs)(n.li,{children:["T\u1ea1o ",(0,t.jsx)(n.code,{children:"up()"})," v\xe0 ",(0,t.jsx)(n.code,{children:"down()"})," methods"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"create-migration",children:"Create Migration"}),"\n",(0,t.jsx)(n.p,{children:"T\u1ea1o migration file tr\u1ed1ng \u0111\u1ec3 vi\u1ebft SQL th\u1ee7 c\xf4ng:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run typeorm:create -- src/migrations/MigrationName\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"V\xed d\u1ee5:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run typeorm:create -- src/migrations/CustomSQLMigration\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"K\u1ebft qu\u1ea3:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"T\u1ea1o file migration tr\u1ed1ng"}),"\n",(0,t.jsxs)(n.li,{children:["C\u1ea7n vi\u1ebft logic ",(0,t.jsx)(n.code,{children:"up()"})," v\xe0 ",(0,t.jsx)(n.code,{children:"down()"})," th\u1ee7 c\xf4ng"]}),"\n",(0,t.jsx)(n.li,{children:"Ph\xf9 h\u1ee3p cho complex SQL operations"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"run-migrations",children:"Run Migrations"}),"\n",(0,t.jsx)(n.p,{children:"Ch\u1ea1y t\u1ea5t c\u1ea3 pending migrations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run typeorm:run\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Qu\xe1 tr\xecnh:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"K\u1ebft n\u1ed1i database"}),"\n",(0,t.jsx)(n.li,{children:"Ki\u1ec3m tra migrations table"}),"\n",(0,t.jsx)(n.li,{children:"Ch\u1ea1y c\xe1c migrations ch\u01b0a \u0111\u01b0\u1ee3c apply"}),"\n",(0,t.jsx)(n.li,{children:"C\u1eadp nh\u1eadt migrations table"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"revert-migration",children:"Revert Migration"}),"\n",(0,t.jsx)(n.p,{children:"Revert migration cu\u1ed1i c\xf9ng:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run typeorm:revert\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Qu\xe1 tr\xecnh:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"K\u1ebft n\u1ed1i database"}),"\n",(0,t.jsx)(n.li,{children:"T\xecm migration cu\u1ed1i c\xf9ng \u0111\xe3 apply"}),"\n",(0,t.jsxs)(n.li,{children:["Ch\u1ea1y method ",(0,t.jsx)(n.code,{children:"down()"})," c\u1ee7a migration \u0111\xf3"]}),"\n",(0,t.jsx)(n.li,{children:"X\xf3a record kh\u1ecfi migrations table"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"migration-configuration",children:"Migration Configuration"}),"\n",(0,t.jsx)(n.h4,{id:"data-source-configuration",children:"Data Source Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/orm/data-source.ts\nconst dataSource = new DataSource({\n    type: 'postgres',\n    entities: CORE_ENTITIES,\n    migrations: ['src/migrations/*.{ts,js}'], // Migration files pattern\n    migrationsTableName: 'migrations', // T\xean table l\u01b0u migration history\n    url: databaseUrl,\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"migration-table",children:"Migration Table"}),"\n",(0,t.jsxs)(n.p,{children:["TypeORM t\u1ef1 \u0111\u1ed9ng t\u1ea1o table ",(0,t.jsx)(n.code,{children:"migrations"})," v\u1edbi c\u1ea5u tr\xfac:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE "migrations" (\n  "id" SERIAL PRIMARY KEY,\n  "timestamp" bigint NOT NULL,\n  "name" character varying NOT NULL\n);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"migration-best-practices",children:"Migration Best Practices"}),"\n",(0,t.jsx)(n.h4,{id:"1-naming-convention",children:"1. Naming Convention"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// \u2705 Good naming\nexport class CreateUsersTable1754759157275 implements MigrationInterface\nexport class AddUserProfileFields1754759200000 implements MigrationInterface\nexport class UpdateProductPricing1754759250000 implements MigrationInterface\n\n// \u274c Bad naming\nexport class Migration1754759157275 implements MigrationInterface\nexport class Update1754759200000 implements MigrationInterface\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-atomic-changes",children:"2. Atomic Changes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Good: M\u1ed7i migration ch\u1ec9 thay \u0111\u1ed5i m\u1ed9t thing\nexport class AddUserEmailField1754759157275 implements MigrationInterface {\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        await queryRunner.query(`\n      ALTER TABLE "users" \n      ADD COLUMN "email" character varying(255) NOT NULL\n    `);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n        await queryRunner.query(`\n      ALTER TABLE "users" \n      DROP COLUMN "email"\n    `);\n    }\n}\n\n// \u274c Bad: Qu\xe1 nhi\u1ec1u thay \u0111\u1ed5i trong m\u1ed9t migration\nexport class BigMigration1754759157275 implements MigrationInterface {\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        // 10+ table changes...\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"3-proper-rollback",children:"3. Proper Rollback"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// \u2705 Good: down() method \u0111\xfang \u0111\u1eafn\npublic async down(queryRunner: QueryRunner): Promise<void> {\n  // Revert ch\xednh x\xe1c nh\u1eefng g\xec up() \u0111\xe3 l\xe0m\n  await queryRunner.query('DROP TABLE \"users\"');\n}\n\n// \u274c Bad: down() method kh\xf4ng \u0111\xfang\npublic async down(queryRunner: QueryRunner): Promise<void> {\n  // Kh\xf4ng revert \u0111\xfang nh\u1eefng g\xec up() \u0111\xe3 l\xe0m\n  await queryRunner.query('DROP TABLE \"products\"');\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"seeding-system",children:"Seeding System"}),"\n",(0,t.jsx)(n.h3,{id:"t\u1ed5ng-quan-seeding",children:"T\u1ed5ng quan Seeding"}),"\n",(0,t.jsx)(n.p,{children:"Seeding l\xe0 qu\xe1 tr\xecnh populate database v\u1edbi initial data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Development Data"})," - Sample data \u0111\u1ec3 test features"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test Data"})," - Data \u0111\u1ec3 run automated tests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Production Data"})," - Initial data c\u1ea7n thi\u1ebft cho production"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"seed-configuration",children:"Seed Configuration"}),"\n",(0,t.jsx)(n.h4,{id:"seed-entry-point",children:"Seed Entry Point"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/orm/seed.ts\nimport 'reflect-metadata';\nimport { runSeeds } from '../seeds';\nimport dataSource from './data-source';\n\nconst main = async (): Promise<void> => {\n    const ds = await dataSource.initialize();\n\n    try {\n        await runSeeds(ds);\n    } finally {\n        if (ds.isInitialized) await ds.destroy();\n    }\n};\n\nmain().catch((err) => {\n    console.error(err);\n    process.exit(1);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"seed-function",children:"Seed Function"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/index.ts\nimport type { DataSource } from 'typeorm';\n\nexport const runSeeds = async (ds: DataSource): Promise<void> => {\n    // Add your seed functions here\n    // const userRepo = ds.getRepository(User);\n    // await userRepo.save(userRepo.create({ name: 'admin', isActive: true }));\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"running-seeds",children:"Running Seeds"}),"\n",(0,t.jsx)(n.h4,{id:"command-line",children:"Command Line"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run seed\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Qu\xe1 tr\xecnh:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"K\u1ebft n\u1ed1i database"}),"\n",(0,t.jsx)(n.li,{children:"Ch\u1ea1y t\u1ea5t c\u1ea3 seed functions"}),"\n",(0,t.jsx)(n.li,{children:"\u0110\xf3ng k\u1ebft n\u1ed1i database"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"programmatic-usage",children:"Programmatic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { runSeeds } from '@ecom-co/orm/seeds';\nimport dataSource from '@ecom-co/orm/orm/data-source';\n\nasync function seedDatabase() {\n    const ds = await dataSource.initialize();\n\n    try {\n        await runSeeds(ds);\n        console.log('Seeding completed');\n    } finally {\n        if (ds.isInitialized) {\n            await ds.destroy();\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"seed-implementation-examples",children:"Seed Implementation Examples"}),"\n",(0,t.jsx)(n.h4,{id:"1-basic-user-seeding",children:"1. Basic User Seeding"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/user.seed.ts\nimport type { DataSource } from 'typeorm';\nimport { User } from '@ecom-co/orm';\n\nexport const seedUsers = async (ds: DataSource): Promise<void> => {\n    const userRepo = ds.getRepository(User);\n\n    // Check if users already exist\n    const existingUsers = await userRepo.count();\n    if (existingUsers > 0) {\n        console.log('Users already seeded, skipping...');\n        return;\n    }\n\n    // Create admin user\n    const adminUser = await userRepo.save(\n        userRepo.create({\n            email: 'admin@example.com',\n            firstName: 'Admin',\n            lastName: 'User',\n            isActive: true,\n        }),\n    );\n\n    // Create test users\n    const testUsers = [\n        {\n            email: 'user1@example.com',\n            firstName: 'John',\n            lastName: 'Doe',\n            isActive: true,\n        },\n        {\n            email: 'user2@example.com',\n            firstName: 'Jane',\n            lastName: 'Smith',\n            isActive: true,\n        },\n    ];\n\n    await userRepo.save(testUsers.map((user) => userRepo.create(user)));\n\n    console.log(`Seeded ${testUsers.length + 1} users`);\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-product-seeding-v\u1edbi-relationships",children:"2. Product Seeding v\u1edbi Relationships"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/product.seed.ts\nimport type { DataSource } from 'typeorm';\nimport { User, Product } from '@ecom-co/orm';\n\nexport const seedProducts = async (ds: DataSource): Promise<void> => {\n    const userRepo = ds.getRepository(User);\n    const productRepo = ds.getRepository(Product);\n\n    // Get admin user\n    const adminUser = await userRepo.findOne({\n        where: { email: 'admin@example.com' },\n    });\n\n    if (!adminUser) {\n        console.log('Admin user not found, skipping product seeding...');\n        return;\n    }\n\n    // Check if products already exist\n    const existingProducts = await productRepo.count();\n    if (existingProducts > 0) {\n        console.log('Products already seeded, skipping...');\n        return;\n    }\n\n    // Create sample products\n    const products = [\n        {\n            name: 'Sample Product 1',\n            description: 'First sample product for testing',\n            isActive: true,\n            userId: adminUser.id,\n        },\n        {\n            name: 'Sample Product 2',\n            description: 'Second sample product for testing',\n            isActive: true,\n            userId: adminUser.id,\n        },\n        {\n            name: 'Inactive Product',\n            description: 'This product is inactive',\n            isActive: false,\n            userId: adminUser.id,\n        },\n    ];\n\n    await productRepo.save(products.map((product) => productRepo.create(product)));\n\n    console.log(`Seeded ${products.length} products`);\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"3-main-seed-function",children:"3. Main Seed Function"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/index.ts\nimport type { DataSource } from 'typeorm';\nimport { seedUsers } from './user.seed';\nimport { seedProducts } from './product.seed';\n\nexport const runSeeds = async (ds: DataSource): Promise<void> => {\n    console.log('Starting database seeding...');\n\n    try {\n        // Seed users first (required for products)\n        await seedUsers(ds);\n\n        // Seed products (depends on users)\n        await seedProducts(ds);\n\n        console.log('Database seeding completed successfully');\n    } catch (error) {\n        console.error('Seeding failed:', error);\n        throw error;\n    }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"environment-specific-seeding",children:"Environment-specific Seeding"}),"\n",(0,t.jsx)(n.h4,{id:"development-seeding",children:"Development Seeding"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/development.seed.ts\nexport const seedDevelopmentData = async (ds: DataSource): Promise<void> => {\n    if (process.env.NODE_ENV !== 'development') {\n        return; // Ch\u1ec9 ch\u1ea1y trong development\n    }\n\n    // Development-specific data\n    await seedUsers(ds);\n    await seedProducts(ds);\n    await seedTestData(ds);\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"test-seeding",children:"Test Seeding"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/test.seed.ts\nexport const seedTestData = async (ds: DataSource): Promise<void> => {\n    if (process.env.NODE_ENV !== 'test') {\n        return; // Ch\u1ec9 ch\u1ea1y trong test\n    }\n\n    // Test-specific data\n    await seedTestUsers(ds);\n    await seedTestProducts(ds);\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"cli-scripts",children:"CLI Scripts"}),"\n",(0,t.jsx)(n.h3,{id:"available-scripts",children:"Available Scripts"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Script"}),(0,t.jsx)(n.th,{children:"Command"}),(0,t.jsx)(n.th,{children:"M\xf4 t\u1ea3"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Generate Migration"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"npm run typeorm:generate"})}),(0,t.jsx)(n.td,{children:"T\u1ea1o migration t\u1eeb entity changes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Create Migration"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"npm run typeorm:create"})}),(0,t.jsx)(n.td,{children:"T\u1ea1o migration file tr\u1ed1ng"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Run Migrations"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"npm run typeorm:run"})}),(0,t.jsx)(n.td,{children:"Ch\u1ea1y pending migrations"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Revert Migration"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"npm run typeorm:revert"})}),(0,t.jsx)(n.td,{children:"Revert migration cu\u1ed1i c\xf9ng"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Seed Database"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"npm run seed"})}),(0,t.jsx)(n.td,{children:"Ch\u1ea1y seeding scripts"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"script-configuration",children:"Script Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n    "scripts": {\n        "typeorm:generate": "typeorm-ts-node-commonjs migration:generate -d src/orm/data-source.ts",\n        "posttypeorm:generate": "npm run lint:fix",\n        "typeorm:create": "typeorm-ts-node-commonjs migration:create",\n        "typeorm:run": "typeorm-ts-node-commonjs migration:run -d src/orm/data-source.ts",\n        "typeorm:revert": "typeorm-ts-node-commonjs migration:revert -d src/orm/data-source.ts",\n        "seed": "ts-node -r dotenv/config src/orm/seed.ts"\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"script-usage-examples",children:"Script Usage Examples"}),"\n",(0,t.jsx)(n.h4,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Make changes to entities\n# 2. Generate migration\nnpm run typeorm:generate -- src/migrations/AddUserProfile\n\n# 3. Review generated migration\n# 4. Run migration\nnpm run typeorm:run\n\n# 5. Seed with test data\nnpm run seed\n"})}),"\n",(0,t.jsx)(n.h4,{id:"production-deployment",children:"Production Deployment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Deploy new code\n# 2. Run migrations\nnpm run typeorm:run\n\n# 3. Verify migration status\n# 4. Seed production data (if needed)\nnpm run seed\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"migration-best-practices-1",children:"Migration Best Practices"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Atomic Changes"}),": M\u1ed7i migration ch\u1ec9 thay \u0111\u1ed5i m\u1ed9t thing \u0111\u1ec3 d\u1ec5 rollback."]})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Proper Naming"}),": S\u1eed d\u1ee5ng t\xean m\xf4 t\u1ea3 r\xf5 r\xe0ng cho migration files."]})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Test Migrations"}),": Lu\xf4n test migrations trong development tr\u01b0\u1edbc khi deploy production."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Never Modify Applied Migrations"}),": Kh\xf4ng s\u1eeda migrations \u0111\xe3 \u0111\u01b0\u1ee3c apply trong production."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Backup Before Migration"}),": Lu\xf4n backup database tr\u01b0\u1edbc khi ch\u1ea1y migrations quan tr\u1ecdng."]})}),"\n",(0,t.jsx)(n.h3,{id:"seeding-best-practices",children:"Seeding Best Practices"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Check Existing Data"}),": Lu\xf4n ki\u1ec3m tra data \u0111\xe3 t\u1ed3n t\u1ea1i tr\u01b0\u1edbc khi seed."]})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Environment Awareness"}),": S\u1eed d\u1ee5ng environment-specific seeding cho development v\xe0 testing."]})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dependency Order"}),": Seed data theo th\u1ee9 t\u1ef1 dependencies (users tr\u01b0\u1edbc products)."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Production Seeding"}),": C\u1ea9n th\u1eadn khi seed production data, ch\u1ec9 seed data c\u1ea7n thi\u1ebft."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Idempotent"}),": Seeding functions n\xean idempotent (c\xf3 th\u1ec3 ch\u1ea1y nhi\u1ec1u l\u1ea7n an to\xe0n)."]})}),"\n",(0,t.jsx)(n.h2,{id:"v\xed-d\u1ee5-ho\xe0n-ch\u1ec9nh",children:"V\xed d\u1ee5 ho\xe0n ch\u1ec9nh"}),"\n",(0,t.jsx)(n.h3,{id:"migration-workflow",children:"Migration Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. T\u1ea1o migration t\u1eeb entity changes\nnpm run typeorm:generate -- src/migrations/AddUserProfileFields\n\n# 2. Review v\xe0 edit migration file\n# 3. Run migration\nnpm run typeorm:run\n\n# 4. Verify migration\n# 5. Seed test data\nnpm run seed\n"})}),"\n",(0,t.jsx)(n.h3,{id:"seeding-workflow",children:"Seeding Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Edit seed functions\n# 2. Run seeding\nnpm run seed\n\n# 3. Verify seeded data\n# 4. Test application with seeded data\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cicd-integration",children:"CI/CD Integration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/deploy.yml\n- name: Run Database Migrations\n  run: |\n      npm run typeorm:run\n      npm run seed\n\n- name: Verify Migration Status\n  run: |\n      # Verify all migrations applied successfully\n"})}),"\n",(0,t.jsx)(n.h3,{id:"rollback-strategy",children:"Rollback Strategy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# N\u1ebfu migration g\xe2y v\u1ea5n \u0111\u1ec1\nnpm run typeorm:revert\n\n# Verify rollback\n# Fix migration file\nnpm run typeorm:run\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);