"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[5955],{24527:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"overview/pipes","title":"Pipes","description":"T\xecm hi\u1ec3u v\u1ec1 Pipes - c\xe1ch NestJS validate v\xe0 transform data tr\u01b0\u1edbc khi \u0111\u1ebfn controller","source":"@site/docs/overview/pipes.md","sourceDirName":"overview","slug":"/overview/pipes","permalink":"/document/vi/docs/overview/pipes","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/overview/pipes.md","tags":[],"version":"current","frontMatter":{"title":"Pipes","description":"T\xecm hi\u1ec3u v\u1ec1 Pipes - c\xe1ch NestJS validate v\xe0 transform data tr\u01b0\u1edbc khi \u0111\u1ebfn controller"},"sidebar":"tutorialSidebar","previous":{"title":"Interceptors","permalink":"/document/vi/docs/overview/interceptors"},"next":{"title":"Decorators","permalink":"/document/vi/docs/overview/decorators"}}');var t=i(74848),s=i(28453);const l={title:"Pipes",description:"T\xecm hi\u1ec3u v\u1ec1 Pipes - c\xe1ch NestJS validate v\xe0 transform data tr\u01b0\u1edbc khi \u0111\u1ebfn controller"},a="Pipes",o={},c=[{value:"Pipes l\xe0 g\xec?",id:"pipes-l\xe0-g\xec",level:2},{value:"C\xe1c lo\u1ea1i Pipes",id:"c\xe1c-lo\u1ea1i-pipes",level:2},{value:"1. Built-in Pipes",id:"1-built-in-pipes",level:3},{value:"2. Custom Pipes",id:"2-custom-pipes",level:3},{value:"3. Validation Pipes",id:"3-validation-pipes",level:3},{value:"4. Transform Pipes",id:"4-transform-pipes",level:3},{value:"T\u1ea1o Pipe c\u01a1 b\u1ea3n",id:"t\u1ea1o-pipe-c\u01a1-b\u1ea3n",level:2},{value:"C\u1ea5u tr\xfac Pipe",id:"c\u1ea5u-tr\xfac-pipe",level:2},{value:"PipeTransform Interface",id:"pipetransform-interface",level:3},{value:"Transform Method",id:"transform-method",level:3},{value:"ArgumentMetadata",id:"argumentmetadata",level:3},{value:"Return Value",id:"return-value",level:3},{value:"S\u1eed d\u1ee5ng Pipes",id:"s\u1eed-d\u1ee5ng-pipes",level:2},{value:"Global Pipes",id:"global-pipes",level:3},{value:"Controller Level",id:"controller-level",level:3},{value:"Method Level",id:"method-level",level:3},{value:"Parameter Level",id:"parameter-level",level:3},{value:"Built-in Pipes",id:"built-in-pipes",level:2},{value:"1. ParseIntPipe",id:"1-parseintpipe",level:3},{value:"2. ParseFloatPipe",id:"2-parsefloatpipe",level:3},{value:"3. ParseBoolPipe",id:"3-parseboolpipe",level:3},{value:"4. ParseArrayPipe",id:"4-parsearraypipe",level:3},{value:"Custom Pipes",id:"custom-pipes",level:2},{value:"1. Validation Pipe",id:"1-validation-pipe",level:3},{value:"2. Transform Pipe",id:"2-transform-pipe",level:3},{value:"3. Business Logic Pipe",id:"3-business-logic-pipe",level:3},{value:"Pipe Execution Order",id:"pipe-execution-order",level:2},{value:"Pipes vs Middleware vs Guards vs Interceptors",id:"pipes-vs-middleware-vs-guards-vs-interceptors",level:2},{value:"Middleware",id:"middleware",level:3},{value:"Guards",id:"guards",level:3},{value:"Interceptors",id:"interceptors",level:3},{value:"Pipes",id:"pipes-1",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Single Responsibility",id:"1-single-responsibility",level:3},{value:"2. Error Messages",id:"2-error-messages",level:3},{value:"3. Performance",id:"3-performance",level:3},{value:"Testing Pipes",id:"testing-pipes",level:2},{value:"Unit Testing",id:"unit-testing",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"pipes",children:"Pipes"})}),"\n",(0,t.jsx)(n.p,{children:'Pipes trong NestJS l\xe0 c\xe1c classes x\u1eed l\xfd v\xe0 validate data tr\u01b0\u1edbc khi \u0111\u1ebfn controller. Ch\xfang gi\u1ed1ng nh\u01b0 "b\u1ed9 l\u1ecdc" \u0111\u1ea3m b\u1ea3o data \u0111\xfang format, type v\xe0 validation rules tr\u01b0\u1edbc khi x\u1eed l\xfd.'}),"\n",(0,t.jsx)(n.mermaid,{value:'flowchart LR\n    A[HTTP Request] --\x3e B[Middleware]\n    B --\x3e C[Guards]\n    C --\x3e D[Interceptors]\n    D --\x3e E[Pipes]\n    E --\x3e F[Controller]\n    F --\x3e G[HTTP Response]\n    \n    subgraph Pipeline["NestJS Pipeline"]\n        B\n        C\n        D\n        E\n        F\n    end\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9\n    style G fill:#e1f5fe\n    style Pipeline fill:#f9f9f9,stroke:#666,stroke-width:2px,stroke-dasharray: 5 5'}),"\n",(0,t.jsx)(n.admonition,{title:"\ud83d\udca1 Kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n",type:"tip",children:(0,t.jsx)(n.p,{children:'Pipes gi\u1ed1ng nh\u01b0 "b\u1ed9 l\u1ecdc n\u01b0\u1edbc" - l\u1ecdc v\xe0 l\xe0m s\u1ea1ch data tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng. Ch\xfang \u0111\u1ea3m b\u1ea3o data an to\xe0n v\xe0 \u0111\xfang format.'})}),"\n",(0,t.jsx)(n.h2,{id:"pipes-l\xe0-g\xec",children:"Pipes l\xe0 g\xec?"}),"\n",(0,t.jsx)(n.p,{children:"Pipes trong NestJS:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Validation"})," - Ki\u1ec3m tra data c\xf3 \u0111\xfang format kh\xf4ng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Transformation"})," - Chuy\u1ec3n \u0111\u1ed5i data t\u1eeb format n\xe0y sang format kh\xe1c"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type Conversion"})," - Chuy\u1ec3n \u0111\u1ed5i ki\u1ec3u d\u1eef li\u1ec7u"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"})," - X\u1eed l\xfd l\u1ed7i validation m\u1ed9t c\xe1ch nh\u1ea5t qu\xe1n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security"})," - \u0110\u1ea3m b\u1ea3o data an to\xe0n tr\u01b0\u1edbc khi x\u1eed l\xfd"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"c\xe1c-lo\u1ea1i-pipes",children:"C\xe1c lo\u1ea1i Pipes"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    A[Pipe Types] --\x3e B[Built-in Pipes]\n    A --\x3e C[Custom Pipes]\n    A --\x3e D[Validation Pipes]\n    A --\x3e E[Transform Pipes]\n    \n    B --\x3e F[ParseIntPipe]\n    B --\x3e G[ParseFloatPipe]\n    B --\x3e H[ParseBoolPipe]\n    B --\x3e I[ParseArrayPipe]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9\n    style G fill:#fff8e1\n    style H fill:#f3e5f5\n    style I fill:#e8f5e8"}),"\n",(0,t.jsx)(n.h3,{id:"1-built-in-pipes",children:"1. Built-in Pipes"}),"\n",(0,t.jsx)(n.p,{children:"Pipes c\xf3 s\u1eb5n trong NestJS"}),"\n",(0,t.jsx)(n.h3,{id:"2-custom-pipes",children:"2. Custom Pipes"}),"\n",(0,t.jsx)(n.p,{children:"Pipes t\xf9y ch\u1ec9nh theo logic nghi\u1ec7p v\u1ee5"}),"\n",(0,t.jsx)(n.h3,{id:"3-validation-pipes",children:"3. Validation Pipes"}),"\n",(0,t.jsx)(n.p,{children:"Pipes ki\u1ec3m tra validation rules"}),"\n",(0,t.jsx)(n.h3,{id:"4-transform-pipes",children:"4. Transform Pipes"}),"\n",(0,t.jsx)(n.p,{children:"Pipes chuy\u1ec3n \u0111\u1ed5i data"}),"\n",(0,t.jsx)(n.h2,{id:"t\u1ea1o-pipe-c\u01a1-b\u1ea3n",children:"T\u1ea1o Pipe c\u01a1 b\u1ea3n"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Basic Pipe Example"',children:"import { Injectable, PipeTransform, ArgumentMetadata } from '@nestjs/common';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    // Validate v\xe0 transform data\n    if (!value) {\n      throw new BadRequestException('Value is required');\n    }\n    return value;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"c\u1ea5u-tr\xfac-pipe",children:"C\u1ea5u tr\xfac Pipe"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\n    A[Pipe] --\x3e B[PipeTransform Interface]\n    A --\x3e C[Transform Method]\n    A --\x3e D[ArgumentMetadata]\n    A --\x3e E[Return Value]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec"}),"\n",(0,t.jsx)(n.h3,{id:"pipetransform-interface",children:"PipeTransform Interface"}),"\n",(0,t.jsx)(n.p,{children:"Interface b\u1eaft bu\u1ed9c cho t\u1ea5t c\u1ea3 pipes"}),"\n",(0,t.jsx)(n.h3,{id:"transform-method",children:"Transform Method"}),"\n",(0,t.jsx)(n.p,{children:"Method ch\xednh \u0111\u1ec3 x\u1eed l\xfd data"}),"\n",(0,t.jsx)(n.h3,{id:"argumentmetadata",children:"ArgumentMetadata"}),"\n",(0,t.jsx)(n.p,{children:"Metadata v\u1ec1 argument \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o"}),"\n",(0,t.jsx)(n.h3,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)(n.p,{children:"Data \u0111\xe3 \u0111\u01b0\u1ee3c validate/transform"}),"\n",(0,t.jsx)(n.h2,{id:"s\u1eed-d\u1ee5ng-pipes",children:"S\u1eed d\u1ee5ng Pipes"}),"\n",(0,t.jsx)(n.h3,{id:"global-pipes",children:"Global Pipes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Global Pipe Usage"',children:"// main.ts\napp.useGlobalPipes(new ValidationPipe());\n"})}),"\n",(0,t.jsx)(n.h3,{id:"controller-level",children:"Controller Level"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Controller Level Pipe"',children:"@UsePipes(ValidationPipe)\n@Controller('users')\nexport class UserController {\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"method-level",children:"Method Level"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Method Level Pipe"',children:"@Controller('users')\nexport class UserController {\n  @Post()\n  @UsePipes(ValidationPipe)\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"parameter-level",children:"Parameter Level"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Parameter Level Pipe"',children:"@Controller('users')\nexport class UserController {\n  @Get(':id')\n  findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.userService.findOne(id);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"built-in-pipes",children:"Built-in Pipes"}),"\n",(0,t.jsx)(n.h3,{id:"1-parseintpipe",children:"1. ParseIntPipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="ParseIntPipe Usage"',children:"@Get(':id')\nfindOne(@Param('id', ParseIntPipe) id: number) {\n  // id s\u1ebd l\xe0 number, kh\xf4ng ph\u1ea3i string\n  return this.userService.findOne(id);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-parsefloatpipe",children:"2. ParseFloatPipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="ParseFloatPipe Usage"',children:"@Get('price/:price')\ngetPrice(@Param('price', ParseFloatPipe) price: number) {\n  // price s\u1ebd l\xe0 float number\n  return this.calculatePrice(price);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-parseboolpipe",children:"3. ParseBoolPipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="ParseBoolPipe Usage"',children:"@Get('status/:active')\ngetStatus(@Param('active', ParseBoolPipe) active: boolean) {\n  // active s\u1ebd l\xe0 boolean\n  return this.getActiveUsers(active);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-parsearraypipe",children:"4. ParseArrayPipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="ParseArrayPipe Usage"',children:"@Get('search')\nsearch(@Query('tags', ParseArrayPipe) tags: string[]) {\n  // tags s\u1ebd l\xe0 array of strings\n  return this.searchByTags(tags);\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-pipes",children:"Custom Pipes"}),"\n",(0,t.jsx)(n.h3,{id:"1-validation-pipe",children:"1. Validation Pipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Custom Validation Pipe"',children:"@Injectable()\nexport class CustomValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    if (typeof value !== 'string') {\n      throw new BadRequestException('Value must be a string');\n    }\n    \n    if (value.length < 3) {\n      throw new BadRequestException('Value must be at least 3 characters');\n    }\n    \n    return value.trim();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-transform-pipe",children:"2. Transform Pipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Custom Transform Pipe"',children:"@Injectable()\nexport class UppercasePipe implements PipeTransform {\n  transform(value: string, metadata: ArgumentMetadata) {\n    if (typeof value === 'string') {\n      return value.toUpperCase();\n    }\n    return value;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-business-logic-pipe",children:"3. Business Logic Pipe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Business Logic Pipe"',children:"@Injectable()\nexport class AgeValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    const age = parseInt(value);\n    \n    if (isNaN(age)) {\n      throw new BadRequestException('Age must be a number');\n    }\n    \n    if (age < 0 || age > 150) {\n      throw new BadRequestException('Age must be between 0 and 150');\n    }\n    \n    return age;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"pipe-execution-order",children:"Pipe Execution Order"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    A[Request Data] --\x3e B[Global Pipes]\n    B --\x3e C[Controller Pipes]\n    C --\x3e D[Method Pipes]\n    D --\x3e E[Parameter Pipes]\n    E --\x3e F[Controller Method]\n    \n    style A fill:#e3f2fd\n    style B fill:#ffebee\n    style C fill:#fff3e0\n    style D fill:#e8f5e8\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Th\u1ee9 t\u1ef1 th\u1ef1c thi:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Global Pipes"})," - \xc1p d\u1ee5ng cho to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Controller Pipes"})," - \xc1p d\u1ee5ng cho t\u1ea5t c\u1ea3 methods trong controller"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method Pipes"})," - \xc1p d\u1ee5ng cho method c\u1ee5 th\u1ec3"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameter Pipes"})," - \xc1p d\u1ee5ng cho parameter c\u1ee5 th\u1ec3"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Controller Method"})," - Th\u1ef1c thi logic nghi\u1ec7p v\u1ee5"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pipes-vs-middleware-vs-guards-vs-interceptors",children:"Pipes vs Middleware vs Guards vs Interceptors"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\n    A[Request] --\x3e B[Middleware]\n    B --\x3e C[Guards]\n    C --\x3e D[Interceptors]\n    D --\x3e E[Pipes]\n    E --\x3e F[Controller]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,t.jsx)(n.h3,{id:"middleware",children:"Middleware"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timing"}),": Tr\u01b0\u1edbc Guards"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Request processing, logging, CORS"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scope"}),": Global, module, route level"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"guards",children:"Guards"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timing"}),": Sau Middleware, tr\u01b0\u1edbc Interceptors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Authentication, authorization, validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scope"}),": Controller, method level"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"interceptors",children:"Interceptors"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timing"}),": Tr\u01b0\u1edbc v\xe0 sau Controller"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Transformation, logging, caching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scope"}),": Global, controller, method level"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pipes-1",children:"Pipes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timing"}),": Tr\u01b0\u1edbc Controller, sau Interceptors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Data validation, transformation, type conversion"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scope"}),": Parameter level"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-single-responsibility",children:"1. Single Responsibility"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Single Responsibility Best Practice"',children:"// \u2705 T\u1ed1t - M\u1ed7i pipe m\u1ed9t nhi\u1ec7m v\u1ee5\n@Injectable()\nexport class StringValidationPipe implements PipeTransform {\n  // Ch\u1ec9 validate string\n}\n\n@Injectable()\nexport class NumberValidationPipe implements PipeTransform {\n  // Ch\u1ec9 validate number\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - Pipe qu\xe1 nhi\u1ec1u nhi\u1ec7m v\u1ee5\n@Injectable()\nexport class StringNumberValidationPipe implements PipeTransform {\n  // Validate c\u1ea3 string v\xe0 number\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-error-messages",children:"2. Error Messages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Error Messages Best Practice"',children:"// \u2705 T\u1ed1t - Error message r\xf5 r\xe0ng\n@Injectable()\nexport class ClearErrorPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    if (!value) {\n      throw new BadRequestException(\n        `Parameter '${metadata.data}' is required`\n      );\n    }\n    return value;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-performance",children:"3. Performance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Performance Best Practice"',children:"// \u2705 T\u1ed1t - Pipe nhanh v\xe0 hi\u1ec7u qu\u1ea3\n@Injectable()\nexport class FastPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    // Ch\u1ec9 x\u1eed l\xfd c\u1ea7n thi\u1ebft\n    if (typeof value === 'string') {\n      return value.trim();\n    }\n    return value;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testing-pipes",children:"Testing Pipes"}),"\n",(0,t.jsx)(n.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Pipe Unit Testing"',children:"describe('CustomValidationPipe', () => {\n  let pipe: CustomValidationPipe;\n\n  beforeEach(() => {\n    pipe = new CustomValidationPipe();\n  });\n\n  it('should validate valid string', () => {\n    const result = pipe.transform('valid string', {} as ArgumentMetadata);\n    expect(result).toBe('valid string');\n  });\n\n  it('should throw error for invalid input', () => {\n    expect(() => {\n      pipe.transform('ab', {} as ArgumentMetadata);\n    }).toThrow(BadRequestException);\n  });\n});\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.admonition,{title:"\ud83d\udca1 L\u1eddi khuy\xean t\u1ed5ng k\u1ebft",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Pipes cho data validation v\xe0 transformation"}),"\n",(0,t.jsx)(n.li,{children:"M\u1ed7i Pipe n\xean c\xf3 m\u1ed9t nhi\u1ec7m v\u1ee5 c\u1ee5 th\u1ec3"}),"\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Built-in Pipes khi c\xf3 th\u1ec3"}),"\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Middleware cho request processing"}),"\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Guards cho authentication/authorization"}),"\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Interceptors cho transformation"}),"\n"]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"B\xe0i ti\u1ebfp theo:"})," ",(0,t.jsx)(n.a,{href:"/docs/overview/exception-filters",children:"Exception Filters"})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var r=i(96540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);