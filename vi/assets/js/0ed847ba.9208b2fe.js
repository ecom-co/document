"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[1574],{9104:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"tips/memory-leaks","title":"Memory Leaks","description":"Gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 Memory Leaks trong NestJS - Nguy\xean nh\xe2n, c\xe1ch ph\xe1t hi\u1ec7n v\xe0 c\xe1c gi\u1ea3i ph\xe1p hi\u1ec7u qu\u1ea3","source":"@site/docs/tips/memory-leaks.md","sourceDirName":"tips","slug":"/tips/memory-leaks","permalink":"/document/vi/docs/tips/memory-leaks","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/tips/memory-leaks.md","tags":[],"version":"current","frontMatter":{"title":"Memory Leaks","description":"Gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 Memory Leaks trong NestJS - Nguy\xean nh\xe2n, c\xe1ch ph\xe1t hi\u1ec7n v\xe0 c\xe1c gi\u1ea3i ph\xe1p hi\u1ec7u qu\u1ea3"},"sidebar":"tutorialSidebar","previous":{"title":"Circular Dependency","permalink":"/document/vi/docs/tips/circular-dependency"},"next":{"title":"Performance Issues","permalink":"/document/vi/docs/tips/performance-issues"}}');var t=r(74848),i=r(28453);const o={title:"Memory Leaks",description:"Gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 Memory Leaks trong NestJS - Nguy\xean nh\xe2n, c\xe1ch ph\xe1t hi\u1ec7n v\xe0 c\xe1c gi\u1ea3i ph\xe1p hi\u1ec7u qu\u1ea3"},c="Memory Leaks trong NestJS",l={},a=[{value:"\ud83d\udcca Bi\u1ec3u \u0111\u1ed3 Memory Leaks",id:"-bi\u1ec3u-\u0111\u1ed3-memory-leaks",level:2},{value:"Bi\u1ec3u \u0111\u1ed3 1: Memory Leak Flow",id:"bi\u1ec3u-\u0111\u1ed3-1-memory-leak-flow",level:3},{value:"\ud83c\udfaf T\u1ea1i sao c\u1ea7n hi\u1ec3u v\u1ec1 Memory Leaks?",id:"-t\u1ea1i-sao-c\u1ea7n-hi\u1ec3u-v\u1ec1-memory-leaks",level:2},{value:"\ud83d\udd0d Memory Leaks l\xe0 g\xec?",id:"-memory-leaks-l\xe0-g\xec",level:2},{value:"\ud83d\udea8 Nguy\xean nh\xe2n g\xe2y ra Memory Leaks",id:"-nguy\xean-nh\xe2n-g\xe2y-ra-memory-leaks",level:2},{value:"1. Event Listeners kh\xf4ng \u0111\u01b0\u1ee3c Remove",id:"1-event-listeners-kh\xf4ng-\u0111\u01b0\u1ee3c-remove",level:3},{value:"2. Database Connections kh\xf4ng \u0111\u01b0\u1ee3c Close",id:"2-database-connections-kh\xf4ng-\u0111\u01b0\u1ee3c-close",level:3},{value:"\ud83d\udee0\ufe0f Gi\u1ea3i ph\xe1p cho Memory Leaks",id:"\ufe0f-gi\u1ea3i-ph\xe1p-cho-memory-leaks",level:2},{value:"1. Proper Resource Management",id:"1-proper-resource-management",level:3},{value:"2. Memory Monitoring",id:"2-memory-monitoring",level:3},{value:"\ud83e\uddea Testing Memory Leaks",id:"-testing-memory-leaks",level:2},{value:"1. Memory Leak Test",id:"1-memory-leak-test",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"memory-leaks-trong-nestjs",children:"Memory Leaks trong NestJS"})}),"\n",(0,t.jsx)(n.p,{children:"Memory Leaks (r\xf2 r\u1ec9 b\u1ed9 nh\u1edb) l\xe0 m\u1ed9t v\u1ea5n \u0111\u1ec1 nghi\xeam tr\u1ecdng trong NestJS c\xf3 th\u1ec3 g\xe2y ra \u1ee9ng d\u1ee5ng ch\u1eadm, crash ho\u1eb7c ti\xeau t\u1ed1n t\xe0i nguy\xean server. \u0110\xe2y l\xe0 v\u1ea5n \u0111\u1ec1 kh\xf3 ph\xe1t hi\u1ec7n v\xe0 debug, \u0111\u1eb7c bi\u1ec7t trong m\xf4i tr\u01b0\u1eddng production."}),"\n",(0,t.jsx)(n.h2,{id:"-bi\u1ec3u-\u0111\u1ed3-memory-leaks",children:"\ud83d\udcca Bi\u1ec3u \u0111\u1ed3 Memory Leaks"}),"\n",(0,t.jsx)(n.h3,{id:"bi\u1ec3u-\u0111\u1ed3-1-memory-leak-flow",children:"Bi\u1ec3u \u0111\u1ed3 1: Memory Leak Flow"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    A[Memory Usage] --\x3e|Normal| B[Stable Memory]\n    A --\x3e|Memory Leak| C[Growing Memory]\n    C --\x3e|Over Time| D[Memory Exhaustion]\n    D --\x3e|Result| E[Application Crash]\n    \n    F[Event Listeners] --\x3e|Not Removed| G[Memory Accumulation]\n    H[Database Connections] --\x3e|Not Closed| I[Connection Pool Exhaustion]\n    J[Timers/Intervals] --\x3e|Not Cleared| K[Background Processes]\n    \n    style A fill:#e8f5e8\n    style B fill:#4ecdc4\n    style C fill:#ff6b6b\n    style D fill:#ff4757\n    style E fill:#c44569\n    style F fill:#feca57\n    style G fill:#ff6b6b\n    style H fill:#45b7d1\n    style I fill:#ff6b6b\n    style J fill:#96ceb4\n    style K fill:#ff6b6b"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Gi\u1ea3i th\xedch:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory Usage"})," c\xf3 th\u1ec3 \u0111i theo 2 h\u01b0\u1edbng: Normal ho\u1eb7c Memory Leak"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Normal"}),": Memory \u1ed5n \u0111\u1ecbnh, kh\xf4ng t\u0103ng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory Leak"}),": Memory t\u0103ng d\u1ea7n theo th\u1eddi gian"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory Exhaustion"}),": Khi memory h\u1ebft, \u1ee9ng d\u1ee5ng crash"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"C\xe1c nguy\xean nh\xe2n"}),": Event listeners, Database connections, Timers kh\xf4ng \u0111\u01b0\u1ee3c cleanup"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{title:"\u26a0\ufe0f V\u1ea5n \u0111\u1ec1 nghi\xeam tr\u1ecdng",type:"danger",children:[(0,t.jsx)(n.p,{children:"Memory Leaks c\xf3 th\u1ec3 g\xe2y ra:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u1ee8ng d\u1ee5ng ch\u1eadm d\u1ea7n theo th\u1eddi gian"}),"\n",(0,t.jsx)(n.li,{children:"Server crash kh\xf4ng r\xf5 nguy\xean nh\xe2n"}),"\n",(0,t.jsx)(n.li,{children:"T\u1ed1n k\xe9m t\xe0i nguy\xean server"}),"\n",(0,t.jsx)(n.li,{children:"Kh\xf3 debug v\xe0 reproduce"}),"\n",(0,t.jsx)(n.li,{children:"\u1ea2nh h\u01b0\u1edfng \u0111\u1ebfn user experience"}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"-t\u1ea1i-sao-c\u1ea7n-hi\u1ec3u-v\u1ec1-memory-leaks",children:"\ud83c\udfaf T\u1ea1i sao c\u1ea7n hi\u1ec3u v\u1ec1 Memory Leaks?"}),"\n",(0,t.jsx)(n.p,{children:'Memory Leaks trong NestJS l\xe0 v\u1ea5n \u0111\u1ec1 "silent killer" - ch\xfang t\xedch t\u1ee5 d\u1ea7n d\u1ea7n v\xe0 ch\u1ec9 bi\u1ec3u hi\u1ec7n khi \u0111\xe3 qu\xe1 mu\u1ed9n. Hi\u1ec3u r\xf5 v\u1ec1 memory leaks s\u1ebd gi\xfap b\u1ea1n:'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ph\xe1t hi\u1ec7n s\u1edbm"})," v\u1ea5n \u0111\u1ec1 tr\u01b0\u1edbc khi qu\xe1 nghi\xeam tr\u1ecdng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"T\u1ed1i \u01b0u performance"})," c\u1ee7a \u1ee9ng d\u1ee5ng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ti\u1ebft ki\u1ec7m t\xe0i nguy\xean"})," server"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"T\u0103ng \u0111\u1ed9 \u1ed5n \u0111\u1ecbnh"})," c\u1ee7a h\u1ec7 th\u1ed1ng"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Gi\u1ea3m th\u1eddi gian downtime"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-memory-leaks-l\xe0-g\xec",children:"\ud83d\udd0d Memory Leaks l\xe0 g\xec?"}),"\n",(0,t.jsx)(n.p,{children:"Memory Leaks x\u1ea3y ra khi:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory \u0111\u01b0\u1ee3c allocate"})," nh\u01b0ng kh\xf4ng \u0111\u01b0\u1ee3c ",(0,t.jsx)(n.strong,{children:"release"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resources \u0111\u01b0\u1ee3c t\u1ea1o"})," nh\u01b0ng kh\xf4ng \u0111\u01b0\u1ee3c ",(0,t.jsx)(n.strong,{children:"cleanup"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"References \u0111\u01b0\u1ee3c gi\u1eef"})," nh\u01b0ng kh\xf4ng c\xf2n c\u1ea7n thi\u1ebft"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event listeners"})," \u0111\u01b0\u1ee3c \u0111\u0103ng k\xfd nh\u01b0ng kh\xf4ng \u0111\u01b0\u1ee3c ",(0,t.jsx)(n.strong,{children:"remove"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-nguy\xean-nh\xe2n-g\xe2y-ra-memory-leaks",children:"\ud83d\udea8 Nguy\xean nh\xe2n g\xe2y ra Memory Leaks"}),"\n",(0,t.jsx)(n.h3,{id:"1-event-listeners-kh\xf4ng-\u0111\u01b0\u1ee3c-remove",children:"1. Event Listeners kh\xf4ng \u0111\u01b0\u1ee3c Remove"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="V\xed d\u1ee5 Event Listener Memory Leak"',children:"// \u274c Kh\xf4ng t\u1ed1t - Memory Leak\n@Injectable()\nexport class UserService {\n  private eventEmitter = new EventEmitter();\n  \n  async createUser(userData: CreateUserDto) {\n    const user = await this.userRepository.save(userData);\n    \n    // Event listener \u0111\u01b0\u1ee3c \u0111\u0103ng k\xfd nh\u01b0ng kh\xf4ng bao gi\u1edd remove\n    this.eventEmitter.on('user.created', () => {\n      this.sendWelcomeEmail(user.email);\n    });\n    \n    return user;\n  }\n}\n\n// \u2705 T\u1ed1t - Kh\xf4ng c\xf3 Memory Leak\n@Injectable()\nexport class UserService {\n  private eventEmitter = new EventEmitter();\n  private listeners: Array<() => void> = [];\n  \n  async createUser(userData: CreateUserDto) {\n    const user = await this.userRepository.save(userData);\n    \n    // L\u01b0u reference \u0111\u1ec3 remove sau\n    const listener = () => this.sendWelcomeEmail(user.email);\n    this.eventEmitter.on('user.created', listener);\n    this.listeners.push(listener);\n    \n    return user;\n  }\n  \n  // Cleanup method\n  cleanup() {\n    this.listeners.forEach(listener => {\n      this.eventEmitter.off('user.created', listener);\n    });\n    this.listeners = [];\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-database-connections-kh\xf4ng-\u0111\u01b0\u1ee3c-close",children:"2. Database Connections kh\xf4ng \u0111\u01b0\u1ee3c Close"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="V\xed d\u1ee5 Database Connection Memory Leak"',children:"// \u274c Kh\xf4ng t\u1ed1t - Connection Leak\n@Injectable()\nexport class UserRepository {\n  async findUsers() {\n    const connection = await this.dataSource.createQueryRunner();\n    \n    try {\n      const users = await connection.query('SELECT * FROM users');\n      return users;\n    } catch (error) {\n      throw error;\n    }\n    // \u274c Qu\xean close connection!\n  }\n}\n\n// \u2705 T\u1ed1t - Proper Connection Management\n@Injectable()\nexport class UserRepository {\n  async findUsers() {\n    const connection = await this.dataSource.createQueryRunner();\n    \n    try {\n      const users = await connection.query('SELECT * FROM users');\n      return users;\n    } catch (error) {\n      throw error;\n    } finally {\n      // \u2705 Lu\xf4n close connection\n      await connection.release();\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-gi\u1ea3i-ph\xe1p-cho-memory-leaks",children:"\ud83d\udee0\ufe0f Gi\u1ea3i ph\xe1p cho Memory Leaks"}),"\n",(0,t.jsx)(n.h3,{id:"1-proper-resource-management",children:"1. Proper Resource Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Resource Management Pattern"',children:"@Injectable()\nexport class ResourceManagerService {\n  private resources: Array<{ id: string; cleanup: () => void }> = [];\n  \n  registerResource(id: string, cleanup: () => void) {\n    this.resources.push({ id, cleanup });\n  }\n  \n  cleanupResource(id: string) {\n    const index = this.resources.findIndex(r => r.id === id);\n    if (index !== -1) {\n      const resource = this.resources[index];\n      resource.cleanup();\n      this.resources.splice(index, 1);\n    }\n  }\n  \n  cleanupAll() {\n    this.resources.forEach(resource => resource.cleanup());\n    this.resources = [];\n  }\n  \n  onModuleDestroy() {\n    this.cleanupAll();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-memory-monitoring",children:"2. Memory Monitoring"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Memory Monitor Service"',children:"@Injectable()\nexport class MemoryMonitorService {\n  private memoryUsage: Array<{ timestamp: number; usage: number }> = [];\n  \n  @Cron('*/30 * * * * *') // M\u1ed7i 30 gi\xe2y\n  monitorMemory() {\n    const usage = process.memoryUsage();\n    const timestamp = Date.now();\n    \n    this.memoryUsage.push({\n      timestamp,\n      usage: usage.heapUsed\n    });\n    \n    // Gi\u1eef 1000 records g\u1ea7n nh\u1ea5t\n    if (this.memoryUsage.length > 1000) {\n      this.memoryUsage.shift();\n    }\n    \n    // Ki\u1ec3m tra memory growth\n    this.checkMemoryGrowth();\n  }\n  \n  private checkMemoryGrowth() {\n    if (this.memoryUsage.length < 10) return;\n    \n    const recent = this.memoryUsage.slice(-10);\n    const first = recent[0].usage;\n    const last = recent[recent.length - 1].usage;\n    \n    // N\u1ebfu memory t\u0103ng > 10% trong 5 ph\xfat\n    if (last > first * 1.1) {\n      this.logMemoryLeakWarning();\n    }\n  }\n  \n  private logMemoryLeakWarning() {\n    console.warn('\u26a0\ufe0f Potential Memory Leak Detected!');\n    console.warn(`Memory increased from ${this.memoryUsage[0].usage} to ${this.memoryUsage[this.memoryUsage.length - 1].usage}`);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-testing-memory-leaks",children:"\ud83e\uddea Testing Memory Leaks"}),"\n",(0,t.jsx)(n.h3,{id:"1-memory-leak-test",children:"1. Memory Leak Test"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Memory Leak Test"',children:"describe('Memory Leak Tests', () => {\n  let app: INestApplication;\n  \n  beforeEach(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule]\n    }).compile();\n    \n    app = moduleFixture.createNestApplication();\n    await app.init();\n  });\n  \n  afterEach(async () => {\n    await app.close();\n  });\n  \n  it('should not leak memory during multiple operations', async () => {\n    const initialMemory = process.memoryUsage().heapUsed;\n    \n    // Th\u1ef1c hi\u1ec7n nhi\u1ec1u operations\n    for (let i = 0; i < 1000; i++) {\n      await request(app.getHttpServer())\n        .post('/users')\n        .send({ name: `User ${i}`, email: `user${i}@example.com` });\n    }\n    \n    // Force garbage collection\n    if (global.gc) {\n      global.gc();\n    }\n    \n    const finalMemory = process.memoryUsage().heapUsed;\n    const memoryIncrease = finalMemory - initialMemory;\n    \n    // Memory increase kh\xf4ng \u0111\u01b0\u1ee3c qu\xe1 10MB\n    expect(memoryIncrease).toBeLessThan(10 * 1024 * 1024);\n  });\n});\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.admonition,{title:"\ud83d\udca1 L\u1eddi khuy\xean t\u1ed5ng k\u1ebft",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lu\xf4n cleanup resources"})," sau khi s\u1eed d\u1ee5ng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor memory usage"})," th\u01b0\u1eddng xuy\xean"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test memory leaks"})," trong development"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"S\u1eed d\u1ee5ng proper lifecycle hooks"})," (onModuleDestroy, onApplicationShutdown)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implement resource pooling"})," cho database connections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Avoid circular references"})," trong services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use event-driven architecture"})," \u0111\u1ec3 gi\u1ea3m coupling"]}),"\n"]})}),"\n",(0,t.jsx)(n.admonition,{title:"\ud83d\udcda T\xe0i li\u1ec7u tham kh\u1ea3o",type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://nodejs.org/en/docs/guides/memory-management/",children:"Node.js Memory Management"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.nestjs.com/fundamentals/lifecycle-events",children:"NestJS Lifecycle Events"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://nodejs.org/en/docs/guides/debugging-getting-started/",children:"Memory Leak Detection Tools"})}),"\n"]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"B\xe0i ti\u1ebfp theo:"})," ",(0,t.jsx)(n.a,{href:"/docs/tips/performance-issues",children:"Performance Issues trong NestJS"})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var s=r(96540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);