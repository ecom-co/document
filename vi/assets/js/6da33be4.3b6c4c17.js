"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[9221],{4778:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"overview/interceptors","title":"Interceptors","description":"T\xecm hi\u1ec3u v\u1ec1 Interceptors - c\xe1ch NestJS x\u1eed l\xfd request v\xe0 response tr\u01b0\u1edbc v\xe0 sau khi controller th\u1ef1c thi","source":"@site/docs/overview/interceptors.md","sourceDirName":"overview","slug":"/overview/interceptors","permalink":"/document/vi/docs/overview/interceptors","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/overview/interceptors.md","tags":[],"version":"current","frontMatter":{"title":"Interceptors","description":"T\xecm hi\u1ec3u v\u1ec1 Interceptors - c\xe1ch NestJS x\u1eed l\xfd request v\xe0 response tr\u01b0\u1edbc v\xe0 sau khi controller th\u1ef1c thi"},"sidebar":"tutorialSidebar","previous":{"title":"Guards","permalink":"/document/vi/docs/overview/guards"},"next":{"title":"Pipes","permalink":"/document/vi/docs/overview/pipes"}}');var l=r(4848),s=r(8453);const i={title:"Interceptors",description:"T\xecm hi\u1ec3u v\u1ec1 Interceptors - c\xe1ch NestJS x\u1eed l\xfd request v\xe0 response tr\u01b0\u1edbc v\xe0 sau khi controller th\u1ef1c thi"},o="Interceptors",c={},a=[{value:"Interceptors l\xe0 g\xec?",id:"interceptors-l\xe0-g\xec",level:2},{value:"C\xe1c lo\u1ea1i Interceptors",id:"c\xe1c-lo\u1ea1i-interceptors",level:2},{value:"1. Logging Interceptors",id:"1-logging-interceptors",level:3},{value:"2. Transform Interceptors",id:"2-transform-interceptors",level:3},{value:"3. Caching Interceptors",id:"3-caching-interceptors",level:3},{value:"4. Error Interceptors",id:"4-error-interceptors",level:3},{value:"5. Custom Interceptors",id:"5-custom-interceptors",level:3},{value:"T\u1ea1o Interceptor c\u01a1 b\u1ea3n",id:"t\u1ea1o-interceptor-c\u01a1-b\u1ea3n",level:2},{value:"C\u1ea5u tr\xfac Interceptor",id:"c\u1ea5u-tr\xfac-interceptor",level:2},{value:"NestInterceptor Interface",id:"nestinterceptor-interface",level:3},{value:"ExecutionContext",id:"executioncontext",level:3},{value:"CallHandler",id:"callhandler",level:3},{value:"Observable",id:"observable",level:3},{value:"S\u1eed d\u1ee5ng Interceptors",id:"s\u1eed-d\u1ee5ng-interceptors",level:2},{value:"Global Interceptors",id:"global-interceptors",level:3},{value:"Controller Level",id:"controller-level",level:3},{value:"Method Level",id:"method-level",level:3},{value:"Common Interceptor Examples",id:"common-interceptor-examples",level:2},{value:"1. Logging Interceptor",id:"1-logging-interceptor",level:3},{value:"2. Transform Interceptor",id:"2-transform-interceptor",level:3},{value:"3. Cache Interceptor",id:"3-cache-interceptor",level:3},{value:"Interceptor Execution Order",id:"interceptor-execution-order",level:2},{value:"Interceptors vs Middleware vs Guards",id:"interceptors-vs-middleware-vs-guards",level:2},{value:"Middleware",id:"middleware",level:3},{value:"Guards",id:"guards",level:3},{value:"Interceptors",id:"interceptors-1",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Single Responsibility",id:"1-single-responsibility",level:3},{value:"2. Performance",id:"2-performance",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"Testing Interceptors",id:"testing-interceptors",level:2},{value:"Unit Testing",id:"unit-testing",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"interceptors",children:"Interceptors"})}),"\n",(0,l.jsx)(n.p,{children:'Interceptors trong NestJS l\xe0 c\xe1c classes x\u1eed l\xfd request tr\u01b0\u1edbc v\xe0 sau khi controller th\u1ef1c thi. Ch\xfang gi\u1ed1ng nh\u01b0 "b\u1ed9 l\u1ecdc" c\xf3 th\u1ec3 transform data, log th\xf4ng tin, cache response v\xe0 x\u1eed l\xfd errors.'}),"\n",(0,l.jsx)(n.mermaid,{value:'flowchart LR\n    A[HTTP Request] --\x3e B[Middleware]\n    B --\x3e C[Guards]\n    C --\x3e D[Interceptors Before]\n    D --\x3e E[Controller]\n    E --\x3e F[Interceptors After]\n    F --\x3e G[HTTP Response]\n    \n    subgraph Pipeline["NestJS Pipeline"]\n        B\n        C\n        D\n        E\n        F\n    end\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#e1f5fe\n    style G fill:#e8f5e8\n    style Pipeline fill:#f9f9f9,stroke:#666,stroke-width:2px,stroke-dasharray: 5 5'}),"\n",(0,l.jsx)(n.admonition,{title:"\ud83d\udca1 Kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n",type:"tip",children:(0,l.jsx)(n.p,{children:'Interceptors gi\u1ed1ng nh\u01b0 "b\u1ed9 l\u1ecdc hai chi\u1ec1u" - x\u1eed l\xfd request tr\u01b0\u1edbc khi \u0111\u1ebfn controller v\xe0 x\u1eed l\xfd response tr\u01b0\u1edbc khi tr\u1ea3 v\u1ec1 client.'})}),"\n",(0,l.jsx)(n.h2,{id:"interceptors-l\xe0-g\xec",children:"Interceptors l\xe0 g\xec?"}),"\n",(0,l.jsx)(n.p,{children:"Interceptors trong NestJS:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Request Transformation"})," - Thay \u0111\u1ed5i request tr\u01b0\u1edbc khi \u0111\u1ebfn controller"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Response Transformation"})," - Thay \u0111\u1ed5i response tr\u01b0\u1edbc khi tr\u1ea3 v\u1ec1"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Logging & Timing"})," - Ghi log v\xe0 \u0111o th\u1eddi gian x\u1eed l\xfd"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Caching"})," - Cache response \u0111\u1ec3 t\u0103ng performance"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Error Handling"})," - X\u1eed l\xfd l\u1ed7i m\u1ed9t c\xe1ch nh\u1ea5t qu\xe1n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"c\xe1c-lo\u1ea1i-interceptors",children:"C\xe1c lo\u1ea1i Interceptors"}),"\n",(0,l.jsx)(n.mermaid,{value:"flowchart TD\n    A[Interceptor Types] --\x3e B[Logging Interceptors]\n    A --\x3e C[Transform Interceptors]\n    A --\x3e D[Caching Interceptors]\n    A --\x3e E[Error Interceptors]\n    A --\x3e F[Custom Interceptors]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,l.jsx)(n.h3,{id:"1-logging-interceptors",children:"1. Logging Interceptors"}),"\n",(0,l.jsx)(n.p,{children:"Ghi log request/response v\xe0 \u0111o th\u1eddi gian"}),"\n",(0,l.jsx)(n.h3,{id:"2-transform-interceptors",children:"2. Transform Interceptors"}),"\n",(0,l.jsx)(n.p,{children:"Transform data tr\u01b0\u1edbc v\xe0 sau khi x\u1eed l\xfd"}),"\n",(0,l.jsx)(n.h3,{id:"3-caching-interceptors",children:"3. Caching Interceptors"}),"\n",(0,l.jsx)(n.p,{children:"Cache response \u0111\u1ec3 t\u0103ng performance"}),"\n",(0,l.jsx)(n.h3,{id:"4-error-interceptors",children:"4. Error Interceptors"}),"\n",(0,l.jsx)(n.p,{children:"X\u1eed l\xfd l\u1ed7i m\u1ed9t c\xe1ch nh\u1ea5t qu\xe1n"}),"\n",(0,l.jsx)(n.h3,{id:"5-custom-interceptors",children:"5. Custom Interceptors"}),"\n",(0,l.jsx)(n.p,{children:"Interceptors t\xf9y ch\u1ec9nh theo logic nghi\u1ec7p v\u1ee5"}),"\n",(0,l.jsx)(n.h2,{id:"t\u1ea1o-interceptor-c\u01a1-b\u1ea3n",children:"T\u1ea1o Interceptor c\u01a1 b\u1ea3n"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Basic Interceptor Example"',children:"import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(\n      map(data => ({ data, timestamp: new Date().toISOString() }))\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"c\u1ea5u-tr\xfac-interceptor",children:"C\u1ea5u tr\xfac Interceptor"}),"\n",(0,l.jsx)(n.mermaid,{value:"flowchart LR\n    A[Interceptor] --\x3e B[NestInterceptor Interface]\n    A --\x3e C[ExecutionContext]\n    A --\x3e D[CallHandler]\n    A --\x3e E[Observable]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec"}),"\n",(0,l.jsx)(n.h3,{id:"nestinterceptor-interface",children:"NestInterceptor Interface"}),"\n",(0,l.jsx)(n.p,{children:"Interface b\u1eaft bu\u1ed9c cho t\u1ea5t c\u1ea3 interceptors"}),"\n",(0,l.jsx)(n.h3,{id:"executioncontext",children:"ExecutionContext"}),"\n",(0,l.jsx)(n.p,{children:"Context ch\u1ee9a th\xf4ng tin v\u1ec1 request"}),"\n",(0,l.jsx)(n.h3,{id:"callhandler",children:"CallHandler"}),"\n",(0,l.jsx)(n.p,{children:"Handler \u0111\u1ec3 g\u1ecdi controller method"}),"\n",(0,l.jsx)(n.h3,{id:"observable",children:"Observable"}),"\n",(0,l.jsx)(n.p,{children:"Stream data \u0111\u1ec3 x\u1eed l\xfd b\u1ea5t \u0111\u1ed3ng b\u1ed9"}),"\n",(0,l.jsx)(n.h2,{id:"s\u1eed-d\u1ee5ng-interceptors",children:"S\u1eed d\u1ee5ng Interceptors"}),"\n",(0,l.jsx)(n.h3,{id:"global-interceptors",children:"Global Interceptors"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Global Interceptor Usage"',children:"// main.ts\napp.useGlobalInterceptors(new LoggingInterceptor());\n"})}),"\n",(0,l.jsx)(n.h3,{id:"controller-level",children:"Controller Level"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Controller Level Interceptor"',children:"@UseInterceptors(TransformInterceptor)\n@Controller('users')\nexport class UserController {\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"method-level",children:"Method Level"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Method Level Interceptor"',children:"@Controller('users')\nexport class UserController {\n  @Get()\n  @UseInterceptors(CacheInterceptor)\n  findAll() {\n    return this.userService.findAll();\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"common-interceptor-examples",children:"Common Interceptor Examples"}),"\n",(0,l.jsx)(n.h3,{id:"1-logging-interceptor",children:"1. Logging Interceptor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Logging Interceptor"',children:"@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const request = context.switchToHttp().getRequest();\n    const method = request.method;\n    const url = request.url;\n    const now = Date.now();\n\n    return next.handle().pipe(\n      tap(() => {\n        const duration = Date.now() - now;\n        console.log(`${method} ${url} - ${duration}ms`);\n      })\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-transform-interceptor",children:"2. Transform Interceptor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Transform Interceptor"',children:"@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(\n      map(data => {\n        if (Array.isArray(data)) {\n          return { items: data, count: data.length };\n        }\n        return { data };\n      })\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-cache-interceptor",children:"3. Cache Interceptor"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Cache Interceptor"',children:"@Injectable()\nexport class CacheInterceptor implements NestInterceptor {\n  private cache = new Map<string, any>();\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const request = context.switchToHttp().getRequest();\n    const key = `${request.method}:${request.url}`;\n\n    if (this.cache.has(key)) {\n      return of(this.cache.get(key));\n    }\n\n    return next.handle().pipe(\n      tap(data => this.cache.set(key, data))\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"interceptor-execution-order",children:"Interceptor Execution Order"}),"\n",(0,l.jsx)(n.mermaid,{value:"flowchart TD\n    A[Request] --\x3e B[Global Interceptors]\n    B --\x3e C[Controller Interceptors]\n    C --\x3e D[Method Interceptors]\n    D --\x3e E[Controller Method]\n    E --\x3e F[Method Interceptors]\n    F --\x3e G[Controller Interceptors]\n    G --\x3e H[Global Interceptors]\n    H --\x3e I[Response]\n    \n    style A fill:#e3f2fd\n    style B fill:#ffebee\n    style C fill:#fff3e0\n    style D fill:#e8f5e8\n    style E fill:#fce4ec\n    style F fill:#e8f5e8\n    style G fill:#fff3e0\n    style H fill:#ffebee\n    style I fill:#e1f5fe"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Th\u1ee9 t\u1ef1 th\u1ef1c thi:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Global Interceptors"})," (Before)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Controller Interceptors"})," (Before)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Method Interceptors"})," (Before)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Controller Method"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Method Interceptors"})," (After)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Controller Interceptors"})," (After)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Global Interceptors"})," (After)"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"interceptors-vs-middleware-vs-guards",children:"Interceptors vs Middleware vs Guards"}),"\n",(0,l.jsx)(n.mermaid,{value:"flowchart LR\n    A[Request] --\x3e B[Middleware]\n    B --\x3e C[Guards]\n    C --\x3e D[Interceptors]\n    D --\x3e E[Controller]\n    \n    style A fill:#e3f2fd\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec"}),"\n",(0,l.jsx)(n.h3,{id:"middleware",children:"Middleware"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Timing"}),": Tr\u01b0\u1edbc Guards"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Purpose"}),": Request processing, logging, CORS"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Scope"}),": Global, module, route level"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"guards",children:"Guards"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Timing"}),": Sau Middleware, tr\u01b0\u1edbc Interceptors"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Purpose"}),": Authentication, authorization, validation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Scope"}),": Controller, method level"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"interceptors-1",children:"Interceptors"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Timing"}),": Tr\u01b0\u1edbc v\xe0 sau Controller"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Purpose"}),": Transformation, logging, caching"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Scope"}),": Global, controller, method level"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsx)(n.h3,{id:"1-single-responsibility",children:"1. Single Responsibility"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Single Responsibility Best Practice"',children:"// \u2705 T\u1ed1t - M\u1ed7i interceptor m\u1ed9t nhi\u1ec7m v\u1ee5\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  // Ch\u1ec9 x\u1eed l\xfd logging\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  // Ch\u1ec9 x\u1eed l\xfd transformation\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - Interceptor qu\xe1 nhi\u1ec1u nhi\u1ec7m v\u1ee5\n@Injectable()\nexport class LoggingTransformCacheInterceptor implements NestInterceptor {\n  // X\u1eed l\xfd logging, transformation, v\xe0 caching\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-performance",children:"2. Performance"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Performance Best Practice"',children:"// \u2705 T\u1ed1t - S\u1eed d\u1ee5ng RxJS operators hi\u1ec7u qu\u1ea3\n@Injectable()\nexport class EfficientInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(\n      map(data => this.transform(data)),\n      catchError(error => this.handleError(error))\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-error-handling",children:"3. Error Handling"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Error Handling Best Practice"',children:"// \u2705 T\u1ed1t - X\u1eed l\xfd l\u1ed7i gracefully\n@Injectable()\nexport class SafeInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(\n      catchError(error => {\n        console.error('Interceptor error:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"testing-interceptors",children:"Testing Interceptors"}),"\n",(0,l.jsx)(n.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",metastring:'title="Interceptor Unit Testing"',children:"describe('TransformInterceptor', () => {\n  let interceptor: TransformInterceptor;\n  let mockExecutionContext: ExecutionContext;\n  let mockCallHandler: CallHandler;\n\n  beforeEach(() => {\n    interceptor = new TransformInterceptor();\n    mockExecutionContext = {} as ExecutionContext;\n    mockCallHandler = {\n      handle: () => of({ name: 'John', age: 30 })\n    };\n  });\n\n  it('should transform response data', (done) => {\n    interceptor.intercept(mockExecutionContext, mockCallHandler).subscribe({\n      next: (result) => {\n        expect(result).toEqual({\n          data: { name: 'John', age: 30 },\n          timestamp: expect.any(String)\n        });\n        done();\n      },\n      error: done\n    });\n  });\n});\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.admonition,{title:"\ud83d\udca1 L\u1eddi khuy\xean t\u1ed5ng k\u1ebft",type:"tip",children:(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Interceptors cho transformation, logging, caching"}),"\n",(0,l.jsx)(n.li,{children:"M\u1ed7i Interceptor n\xean c\xf3 m\u1ed9t nhi\u1ec7m v\u1ee5 c\u1ee5 th\u1ec3"}),"\n",(0,l.jsx)(n.li,{children:"S\u1eed d\u1ee5ng RxJS operators hi\u1ec7u qu\u1ea3"}),"\n",(0,l.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Middleware cho request processing"}),"\n",(0,l.jsx)(n.li,{children:"S\u1eed d\u1ee5ng Guards cho authentication/authorization"}),"\n"]})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"B\xe0i ti\u1ebfp theo:"})," ",(0,l.jsx)(n.a,{href:"/docs/overview/pipes",children:"Pipes"})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const l={},s=t.createContext(l);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);