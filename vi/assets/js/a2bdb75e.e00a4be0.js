"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[1155],{11470:(e,n,i)=>{i.d(n,{A:()=>C});var t=i(96540),s=i(34164),r=i(23104),a=i(56347),o=i(205),l=i(57485),d=i(31682),c=i(70679);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:i}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:i,default:t}})=>({value:e,label:n,attributes:i,default:t}))}(i);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function h({queryString:e=!1,groupId:n}){const i=(0,a.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(s),(0,t.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})},[s,i])]}function g(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,r=p(e),[a,l]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r})),[d,u]=h({queryString:i,groupId:s}),[g,v]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,s]=(0,c.Dv)(n);return[i,(0,t.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),y=(()=>{const e=d??g;return m({value:e,tabValues:r})?e:null})();(0,o.A)(()=>{y&&l(y)},[y]);return{selectedValue:a,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),v(e)},[u,v,r]),tabValues:r}}var v=i(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=i(74848);function b({className:e,block:n,selectedValue:i,selectValue:t,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),d=e=>{const n=e.currentTarget,s=o.indexOf(n),r=a[s].value;r!==i&&(l(n),t(r))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=o.indexOf(e.currentTarget)+1;n=o[i]??o[0];break}case"ArrowLeft":{const i=o.indexOf(e.currentTarget)-1;n=o[i]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:t})=>(0,x.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:d,...t,className:(0,s.A)("tabs__item",y.tabItem,t?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:i}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===i);return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function f(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",y.tabList),children:[(0,x.jsx)(b,{...n,...e}),(0,x.jsx)(j,{...n,...e})]})}function C(e){const n=(0,v.A)();return(0,x.jsx)(f,{...e,children:u(e.children)},String(n))}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},77495:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ecom-co/libs/typeorm/docs/development-guide","title":"Development Guide \u2014 Workflow v\xe0 Publishing Process","description":"H\u01b0\u1edbng d\u1eabn development workflow, c\xe1ch th\xeam entities m\u1edbi, build library v\xe0 publish package v\u1edbi version management.","source":"@site/docs/ecom-co/libs/typeorm/docs/development-guide.md","sourceDirName":"ecom-co/libs/typeorm/docs","slug":"/development-guide","permalink":"/document/vi/docs/development-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/ecom-co/libs/typeorm/docs/development-guide.md","tags":[{"inline":true,"label":"development","permalink":"/document/vi/docs/tags/development"},{"inline":true,"label":"workflow","permalink":"/document/vi/docs/tags/workflow"},{"inline":true,"label":"entities","permalink":"/document/vi/docs/tags/entities"},{"inline":true,"label":"build","permalink":"/document/vi/docs/tags/build"},{"inline":true,"label":"publish","permalink":"/document/vi/docs/tags/publish"},{"inline":true,"label":"versioning","permalink":"/document/vi/docs/tags/versioning"},{"inline":true,"label":"npm","permalink":"/document/vi/docs/tags/npm"}],"version":"current","frontMatter":{"id":"development-guide","title":"Development Guide \u2014 Workflow v\xe0 Publishing Process","sidebar_label":"Development Guide","slug":"/development-guide","description":"H\u01b0\u1edbng d\u1eabn development workflow, c\xe1ch th\xeam entities m\u1edbi, build library v\xe0 publish package v\u1edbi version management.","tags":["development","workflow","entities","build","publish","versioning","npm"]},"sidebar":"tutorialSidebar","previous":{"title":"Migrations & Seeding","permalink":"/document/vi/docs/migrations-seeding"},"next":{"title":"Elasticsearch Library","permalink":"/document/vi/docs/ecom-co/libs/elasticsearch/elasticsearch-library"}}');var s=i(74848),r=i(28453);i(11470);const a={id:"development-guide",title:"Development Guide \u2014 Workflow v\xe0 Publishing Process",sidebar_label:"Development Guide",slug:"/development-guide",description:"H\u01b0\u1edbng d\u1eabn development workflow, c\xe1ch th\xeam entities m\u1edbi, build library v\xe0 publish package v\u1edbi version management.",tags:["development","workflow","entities","build","publish","versioning","npm"]},o=void 0,l={},d=[{value:"T\u1ed5ng quan",id:"t\u1ed5ng-quan",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Setup Development Environment",id:"1-setup-development-environment",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Clone v\xe0 Install",id:"clone-v\xe0-install",level:4},{value:"Database Setup",id:"database-setup",level:4},{value:"2. Development Cycle",id:"2-development-cycle",level:3},{value:"Workflow Diagram",id:"workflow-diagram",level:4},{value:"Daily Development",id:"daily-development",level:4},{value:"Adding New Entities",id:"adding-new-entities",level:2},{value:"1. Create Entity Class",id:"1-create-entity-class",level:3},{value:"Basic Entity Structure",id:"basic-entity-structure",level:4},{value:"Entity v\u1edbi Transformers",id:"entity-v\u1edbi-transformers",level:4},{value:"2. Update Core Entities",id:"2-update-core-entities",level:3},{value:"Add to CORE_ENTITIES",id:"add-to-core_entities",level:4},{value:"Update Main Export",id:"update-main-export",level:4},{value:"3. Update Related Entities",id:"3-update-related-entities",level:3},{value:"Update Product Entity",id:"update-product-entity",level:4},{value:"4. Create Migration",id:"4-create-migration",level:3},{value:"Generate Migration",id:"generate-migration",level:4},{value:"Review Generated Migration",id:"review-generated-migration",level:4},{value:"5. Update Seeds",id:"5-update-seeds",level:3},{value:"Add Category Seeds",id:"add-category-seeds",level:4},{value:"Update Main Seed Function",id:"update-main-seed-function",level:4},{value:"6. Test New Entity",id:"6-test-new-entity",level:3},{value:"Run Migration",id:"run-migration",level:4},{value:"Test Seeding",id:"test-seeding",level:4},{value:"Test in Application",id:"test-in-application",level:4},{value:"Building Library",id:"building-library",level:2},{value:"1. Build Configuration",id:"1-build-configuration",level:3},{value:"TypeScript Configuration",id:"typescript-configuration",level:4},{value:"Package Configuration",id:"package-configuration",level:4},{value:"2. Build Process",id:"2-build-process",level:3},{value:"Build Commands",id:"build-commands",level:4},{value:"Build Output",id:"build-output",level:4},{value:"3. Build Validation",id:"3-build-validation",level:3},{value:"Type Checking",id:"type-checking",level:4},{value:"Linting",id:"linting",level:4},{value:"Testing",id:"testing",level:4},{value:"Publishing Process",id:"publishing-process",level:2},{value:"1. Version Management",id:"1-version-management",level:3},{value:"Semantic Versioning",id:"semantic-versioning",level:4},{value:"Version Scripts",id:"version-scripts",level:4},{value:"2. Pre-publish Checklist",id:"2-pre-publish-checklist",level:3},{value:"Code Quality",id:"code-quality",level:4},{value:"Documentation",id:"documentation",level:4},{value:"Git Status",id:"git-status",level:4},{value:"3. Publishing Steps",id:"3-publishing-steps",level:3},{value:"Publish Command",id:"publish-command",level:4},{value:"Publish Process",id:"publish-process",level:4},{value:"Post-publish",id:"post-publish",level:4},{value:"4. Publishing Configuration",id:"4-publishing-configuration",level:3},{value:".npmignore",id:"npmignore",level:4},{value:"Package.json Files Field",id:"packagejson-files-field",level:4},{value:"Publish Config",id:"publish-config",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"Development Best Practices",id:"development-best-practices",level:3},{value:"Entity Best Practices",id:"entity-best-practices",level:3},{value:"Publishing Best Practices",id:"publishing-best-practices",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Build Errors",id:"build-errors",level:4},{value:"Migration Issues",id:"migration-issues",level:4},{value:"Publishing Issues",id:"publishing-issues",level:4},{value:"Debug Commands",id:"debug-commands",level:3},{value:"V\xed d\u1ee5 ho\xe0n ch\u1ec9nh",id:"v\xed-d\u1ee5-ho\xe0n-ch\u1ec9nh",level:2},{value:"Complete Entity Addition Workflow",id:"complete-entity-addition-workflow",level:3},{value:"Complete Publishing Workflow",id:"complete-publishing-workflow",level:3}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Development Guide cung c\u1ea5p h\u01b0\u1edbng d\u1eabn chi ti\u1ebft v\u1ec1 development workflow, c\xe1ch th\xeam entities m\u1edbi, build library v\xe0 publish package v\u1edbi proper version management."})}),"\n",(0,s.jsx)(n.h2,{id:"t\u1ed5ng-quan",children:"T\u1ed5ng quan"}),"\n",(0,s.jsx)(n.p,{children:"Development Guide bao g\u1ed3m:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Development Workflow"})," - Quy tr\xecnh ph\xe1t tri\u1ec3n v\xe0 testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Adding New Entities"})," - C\xe1ch th\xeam entities m\u1edbi v\xe0o library"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Building Library"})," - Build process v\xe0 configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Publishing Process"})," - NPM publishing v\u1edbi version management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Best Practices"})," - Coding standards v\xe0 guidelines"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"1-setup-development-environment",children:"1. Setup Development Environment"}),"\n",(0,s.jsx)(n.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Y\xeau c\u1ea7u h\u1ec7 th\u1ed1ng\nNode.js >= 18.0.0\nnpm >= 8.0.0\nPostgreSQL >= 12.0\nTypeScript >= 5.0\n"})}),"\n",(0,s.jsx)(n.h4,{id:"clone-v\xe0-install",children:"Clone v\xe0 Install"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone repository\ngit clone https://github.com/e-commerce-platform-co/lib-orm.git\ncd lib-orm\n\n# Install dependencies\nnpm install\n\n# Setup environment\ncp .env.example .env\n# Edit .env v\u1edbi database configuration\n"})}),"\n",(0,s.jsx)(n.h4,{id:"database-setup",children:"Database Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# T\u1ea1o database\ncreatedb lib_orm_dev\n\n# Run initial migration\nnpm run typeorm:run\n\n# Seed development data\nnpm run seed\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-development-cycle",children:"2. Development Cycle"}),"\n",(0,s.jsx)(n.h4,{id:"workflow-diagram",children:"Workflow Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[Feature Request] --\x3e B[Create Branch]\n    B --\x3e C[Implement Feature]\n    C --\x3e D[Add Tests]\n    D --\x3e E[Update Documentation]\n    E --\x3e F[Create PR]\n    F --\x3e G[Code Review]\n    G --\x3e H[Merge to Main]\n    H --\x3e I[Build & Test]\n    I --\x3e J[Publish Package]"}),"\n",(0,s.jsx)(n.h4,{id:"daily-development",children:"Daily Development"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1. Pull latest changes\ngit pull origin main\n\n# 2. Create feature branch\ngit checkout -b feature/add-category-entity\n\n# 3. Make changes\n# - Add new entity\n# - Update existing code\n# - Add tests\n\n# 4. Test changes\nnpm run build\nnpm run lint\nnpm run test\n\n# 5. Commit changes\ngit add .\ngit commit -m "feat: add Category entity with relationships"\n\n# 6. Push branch\ngit push origin feature/add-category-entity\n\n# 7. Create Pull Request\n'})}),"\n",(0,s.jsx)(n.h2,{id:"adding-new-entities",children:"Adding New Entities"}),"\n",(0,s.jsx)(n.h3,{id:"1-create-entity-class",children:"1. Create Entity Class"}),"\n",(0,s.jsx)(n.h4,{id:"basic-entity-structure",children:"Basic Entity Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/entities/core/category.entity.ts\nimport { Entity, Column, OneToMany } from 'typeorm';\nimport { OrmBaseEntity } from '../base.entity';\nimport { Product } from './product.entity';\n\n@Entity({ name: 'categories', comment: 'Product categories' })\nexport class Category extends OrmBaseEntity {\n    @Column({\n        type: 'varchar',\n        length: 100,\n        comment: 'Category name',\n    })\n    name!: string;\n\n    @Column({\n        type: 'text',\n        nullable: true,\n        comment: 'Category description',\n    })\n    description?: string;\n\n    @Column({\n        type: 'varchar',\n        length: 50,\n        nullable: true,\n        comment: 'Category slug for URLs',\n    })\n    slug?: string;\n\n    @Column({\n        type: 'int',\n        default: 0,\n        comment: 'Display order',\n    })\n    sortOrder!: number;\n\n    @Column({\n        type: 'boolean',\n        default: true,\n        comment: 'Category visibility',\n    })\n    isActive!: boolean;\n\n    // Relationships\n    @OneToMany(() => Product, (product) => product.category)\n    products?: Product[];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"entity-v\u1edbi-transformers",children:"Entity v\u1edbi Transformers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/entities/core/category.entity.ts\nimport { Entity, Column, OneToMany } from 'typeorm';\nimport { BooleanTransformer, NumericTransformer } from '../../transformers';\nimport { OrmBaseEntity } from '../base.entity';\n\n@Entity({ name: 'categories' })\nexport class Category extends OrmBaseEntity {\n    @Column({\n        type: 'varchar',\n        length: 100,\n    })\n    name!: string;\n\n    @Column({\n        type: 'int',\n        transformer: new BooleanTransformer(),\n        default: 1,\n        comment: 'Category visibility (1=visible, 0=hidden)',\n    })\n    isVisible!: boolean;\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        transformer: new NumericTransformer(),\n        nullable: true,\n        comment: 'Category priority (0.00-100.00)',\n    })\n    priority?: number | null;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-update-core-entities",children:"2. Update Core Entities"}),"\n",(0,s.jsx)(n.h4,{id:"add-to-core_entities",children:"Add to CORE_ENTITIES"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/entities/core/index.ts\nexport * from './category.entity';\n\nimport { User } from './user.entity';\nimport { Product } from './product.entity';\nimport { Category } from './category.entity';\n\nexport const CORE_ENTITIES: EntityClassOrSchema[] = [\n    User,\n    Product,\n    Category, // Th\xeam Category entity\n];\n"})}),"\n",(0,s.jsx)(n.h4,{id:"update-main-export",children:"Update Main Export"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/entities/index.ts\nexport * from './core';\nexport * from './category.entity'; // Export Category entity\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-update-related-entities",children:"3. Update Related Entities"}),"\n",(0,s.jsx)(n.h4,{id:"update-product-entity",children:"Update Product Entity"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/entities/core/product.entity.ts\nimport { Entity, Column, ManyToOne } from 'typeorm';\nimport { OrmBaseEntity } from '../base.entity';\nimport { User } from './user.entity';\nimport { Category } from './category.entity'; // Import Category\n\n@Entity({ name: 'products' })\nexport class Product extends OrmBaseEntity {\n    // ... existing fields ...\n\n    @Column({\n        name: 'categoryId',\n        nullable: true,\n        comment: 'Category ID',\n    })\n    categoryId?: string;\n\n    @ManyToOne(() => Category, (category) => category.products, {\n        nullable: true,\n    })\n    category?: Category; // Add category relationship\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-create-migration",children:"4. Create Migration"}),"\n",(0,s.jsx)(n.h4,{id:"generate-migration",children:"Generate Migration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate migration t\u1eeb entity changes\nnpm run typeorm:generate -- src/migrations/AddCategoryEntity\n"})}),"\n",(0,s.jsx)(n.h4,{id:"review-generated-migration",children:"Review Generated Migration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'// src/migrations/1754759300000-AddCategoryEntity.ts\nexport class AddCategoryEntity1754759300000 implements MigrationInterface {\n    public async up(queryRunner: QueryRunner): Promise<void> {\n        // Review v\xe0 edit n\u1ebfu c\u1ea7n\n        await queryRunner.query(`\n      CREATE TABLE "categories" (\n        "id" uuid NOT NULL DEFAULT uuid_generate_v4(),\n        "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n        "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n        "deletedAt" TIMESTAMP WITH TIME ZONE,\n        "name" character varying(100) NOT NULL,\n        "description" text,\n        "slug" character varying(50),\n        "sortOrder" integer NOT NULL DEFAULT \'0\',\n        "isActive" integer NOT NULL DEFAULT \'1\',\n        CONSTRAINT "PK_categories" PRIMARY KEY ("id")\n      )\n    `);\n\n        await queryRunner.query(`\n      ALTER TABLE "products" \n      ADD COLUMN "categoryId" uuid\n    `);\n\n        await queryRunner.query(`\n      ALTER TABLE "products" \n      ADD CONSTRAINT "FK_products_category" \n      FOREIGN KEY ("categoryId") REFERENCES "categories"("id")\n    `);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n        await queryRunner.query(`\n      ALTER TABLE "products" \n      DROP CONSTRAINT "FK_products_category"\n    `);\n\n        await queryRunner.query(`\n      ALTER TABLE "products" \n      DROP COLUMN "categoryId"\n    `);\n\n        await queryRunner.query(\'DROP TABLE "categories"\');\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-update-seeds",children:"5. Update Seeds"}),"\n",(0,s.jsx)(n.h4,{id:"add-category-seeds",children:"Add Category Seeds"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/category.seed.ts\nimport type { DataSource } from 'typeorm';\nimport { Category } from '@ecom-co/orm';\n\nexport const seedCategories = async (ds: DataSource): Promise<void> => {\n    const categoryRepo = ds.getRepository(Category);\n\n    // Check if categories already exist\n    const existingCategories = await categoryRepo.count();\n    if (existingCategories > 0) {\n        console.log('Categories already seeded, skipping...');\n        return;\n    }\n\n    // Create sample categories\n    const categories = [\n        {\n            name: 'Electronics',\n            description: 'Electronic devices and gadgets',\n            slug: 'electronics',\n            sortOrder: 1,\n            isActive: true,\n        },\n        {\n            name: 'Clothing',\n            description: 'Apparel and fashion items',\n            slug: 'clothing',\n            sortOrder: 2,\n            isActive: true,\n        },\n        {\n            name: 'Books',\n            description: 'Books and publications',\n            slug: 'books',\n            sortOrder: 3,\n            isActive: true,\n        },\n    ];\n\n    await categoryRepo.save(categories.map((category) => categoryRepo.create(category)));\n\n    console.log(`Seeded ${categories.length} categories`);\n};\n"})}),"\n",(0,s.jsx)(n.h4,{id:"update-main-seed-function",children:"Update Main Seed Function"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/seeds/index.ts\nimport type { DataSource } from 'typeorm';\nimport { seedUsers } from './user.seed';\nimport { seedCategories } from './category.seed';\nimport { seedProducts } from './product.seed';\n\nexport const runSeeds = async (ds: DataSource): Promise<void> => {\n    console.log('Starting database seeding...');\n\n    try {\n        // Seed users first\n        await seedUsers(ds);\n\n        // Seed categories (required for products)\n        await seedCategories(ds);\n\n        // Seed products (depends on users and categories)\n        await seedProducts(ds);\n\n        console.log('Database seeding completed successfully');\n    } catch (error) {\n        console.error('Seeding failed:', error);\n        throw error;\n    }\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"6-test-new-entity",children:"6. Test New Entity"}),"\n",(0,s.jsx)(n.h4,{id:"run-migration",children:"Run Migration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Apply migration\nnpm run typeorm:run\n\n# Verify migration\n# Check database tables\n"})}),"\n",(0,s.jsx)(n.h4,{id:"test-seeding",children:"Test Seeding"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Run seeds\nnpm run seed\n\n# Verify seeded data\n# Check database content\n"})}),"\n",(0,s.jsx)(n.h4,{id:"test-in-application",children:"Test in Application"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Test Category entity\nimport { Category } from '@ecom-co/orm';\n\nconst category = new Category();\ncategory.name = 'Test Category';\ncategory.description = 'Test description';\ncategory.slug = 'test-category';\ncategory.sortOrder = 1;\ncategory.isActive = true;\n\n// Test relationships\nconst product = new Product();\nproduct.name = 'Test Product';\nproduct.categoryId = category.id;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"building-library",children:"Building Library"}),"\n",(0,s.jsx)(n.h3,{id:"1-build-configuration",children:"1. Build Configuration"}),"\n",(0,s.jsx)(n.h4,{id:"typescript-configuration",children:"TypeScript Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// tsconfig.build.json\n{\n    "extends": "./tsconfig.json",\n    "exclude": ["src/**/*.spec.ts", "src/**/*.test.ts", "src/seeds/**/*", "src/orm/**/*", "src/migrations/**/*"],\n    "compilerOptions": {\n        "outDir": "./dist",\n        "declaration": true,\n        "declarationMap": true,\n        "sourceMap": true\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"package-configuration",children:"Package Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n    "main": "dist/index.js",\n    "types": "dist/index.d.ts",\n    "files": ["dist", "README.md"],\n    "scripts": {\n        "build": "tsc -p tsconfig.build.json",\n        "build:watch": "tsc -p tsconfig.build.json --watch",\n        "clean": "rm -rf dist"\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-build-process",children:"2. Build Process"}),"\n",(0,s.jsx)(n.h4,{id:"build-commands",children:"Build Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clean previous build\nnpm run clean\n\n# Build library\nnpm run build\n\n# Build with watch mode (development)\nnpm run build:watch\n"})}),"\n",(0,s.jsx)(n.h4,{id:"build-output",children:"Build Output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"dist/\n\u251c\u2500\u2500 core/\n\u2502   \u251c\u2500\u2500 index.d.ts\n\u2502   \u251c\u2500\u2500 index.d.ts.map\n\u2502   \u251c\u2500\u2500 index.js\n\u2502   \u251c\u2500\u2500 utils.d.ts\n\u2502   \u251c\u2500\u2500 utils.d.ts.map\n\u2502   \u2514\u2500\u2500 utils.js\n\u251c\u2500\u2500 entities/\n\u2502   \u251c\u2500\u2500 base.entity.d.ts\n\u2502   \u251c\u2500\u2500 base.entity.d.ts.map\n\u2502   \u251c\u2500\u2500 base.entity.js\n\u2502   \u251c\u2500\u2500 core/\n\u2502   \u2502   \u251c\u2500\u2500 index.d.ts\n\u2502   \u2502   \u251c\u2500\u2500 index.d.ts.map\n\u2502   \u2502   \u251c\u2500\u2500 index.js\n\u2502   \u2502   \u251c\u2500\u2500 category.entity.d.ts\n\u2502   \u2502   \u251c\u2500\u2500 category.entity.d.ts.map\n\u2502   \u2502   \u251c\u2500\u2500 category.entity.js\n\u2502   \u2502   \u251c\u2500\u2500 product.entity.d.ts\n\u2502   \u2502   \u251c\u2500\u2500 product.entity.d.ts.map\n\u2502   \u2502   \u251c\u2500\u2500 product.entity.js\n\u2502   \u2502   \u251c\u2500\u2500 user.entity.d.ts\n\u2502   \u2502   \u251c\u2500\u2500 user.entity.d.ts.map\n\u2502   \u2502   \u2514\u2500\u2500 user.entity.js\n\u2502   \u251c\u2500\u2500 index.d.ts\n\u2502   \u251c\u2500\u2500 index.d.ts.map\n\u2502   \u2514\u2500\u2500 index.js\n\u251c\u2500\u2500 index.d.ts\n\u251c\u2500\u2500 index.d.ts.map\n\u2514\u2500\u2500 index.js\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-build-validation",children:"3. Build Validation"}),"\n",(0,s.jsx)(n.h4,{id:"type-checking",children:"Type Checking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check TypeScript compilation\nnpm run build\n\n# Verify no type errors\n# Check generated .d.ts files\n"})}),"\n",(0,s.jsx)(n.h4,{id:"linting",children:"Linting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Run ESLint\nnpm run lint\n\n# Fix auto-fixable issues\nnpm run lint:fix\n"})}),"\n",(0,s.jsx)(n.h4,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Run tests (if available)\nnpm test\n\n# Verify build works in test environment\n"})}),"\n",(0,s.jsx)(n.h2,{id:"publishing-process",children:"Publishing Process"}),"\n",(0,s.jsx)(n.h3,{id:"1-version-management",children:"1. Version Management"}),"\n",(0,s.jsx)(n.h4,{id:"semantic-versioning",children:"Semantic Versioning"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Patch version (bug fixes)\nnpm run release:patch\n\n# Minor version (new features, backward compatible)\nnpm run release:minor\n\n# Major version (breaking changes)\nnpm run release:major\n"})}),"\n",(0,s.jsx)(n.h4,{id:"version-scripts",children:"Version Scripts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n    "scripts": {\n        "release:patch": "npm version patch && npm publish",\n        "release:minor": "npm version minor && npm publish",\n        "release:major": "npm version major && npm publish",\n        "prepublishOnly": "npm run clean && npm run build"\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-pre-publish-checklist",children:"2. Pre-publish Checklist"}),"\n",(0,s.jsx)(n.h4,{id:"code-quality",children:"Code Quality"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1. Run linting\nnpm run lint\n\n# 2. Fix any issues\nnpm run lint:fix\n\n# 3. Run tests (if available)\nnpm test\n\n# 4. Check build\nnpm run build\n"})}),"\n",(0,s.jsx)(n.h4,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1. Update README.md\n# 2. Update CHANGELOG.md\n# 3. Update documentation files\n# 4. Review API changes\n"})}),"\n",(0,s.jsx)(n.h4,{id:"git-status",children:"Git Status"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1. Check git status\ngit status\n\n# 2. Commit all changes\ngit add .\ngit commit -m "chore: prepare for release v1.2.0"\n\n# 3. Push to remote\ngit push origin main\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-publishing-steps",children:"3. Publishing Steps"}),"\n",(0,s.jsx)(n.h4,{id:"publish-command",children:"Publish Command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Publish new version\nnpm run release:patch\n# ho\u1eb7c\nnpm run release:minor\n# ho\u1eb7c\nnpm run release:major\n"})}),"\n",(0,s.jsx)(n.h4,{id:"publish-process",children:"Publish Process"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1. npm version patch/minor/major\n#    - Updates package.json version\n#    - Creates git tag\n#    - Commits version change\n\n# 2. npm run prepublishOnly\n#    - Cleans dist folder\n#    - Builds library\n\n# 3. npm publish\n#    - Publishes to npm registry\n#    - Uses .npmignore and files field\n"})}),"\n",(0,s.jsx)(n.h4,{id:"post-publish",children:"Post-publish"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1. Push git tag\ngit push origin --tags\n\n# 2. Create GitHub release\n# 3. Update documentation\n# 4. Notify team\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-publishing-configuration",children:"4. Publishing Configuration"}),"\n",(0,s.jsx)(n.h4,{id:"npmignore",children:".npmignore"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gitignore",children:"# .npmignore\nsrc/\ntests/\nexamples/\n.github/\n.vscode/\n*.log\n.env*\n"})}),"\n",(0,s.jsx)(n.h4,{id:"packagejson-files-field",children:"Package.json Files Field"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n    "files": ["dist", "README.md"]\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"publish-config",children:"Publish Config"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n    "publishConfig": {\n        "registry": "https://npm.pkg.github.com"\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"development-best-practices",children:"Development Best Practices"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Branch Naming"}),": S\u1eed d\u1ee5ng conventional branch names: ",(0,s.jsx)(n.code,{children:"feature/"}),", ",(0,s.jsx)(n.code,{children:"bugfix/"}),", ",(0,s.jsx)(n.code,{children:"hotfix/"}),"."]})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Commit Messages"}),": S\u1eed d\u1ee5ng conventional commits: ",(0,s.jsx)(n.code,{children:"feat:"}),", ",(0,s.jsx)(n.code,{children:"fix:"}),", ",(0,s.jsx)(n.code,{children:"docs:"}),", ",(0,s.jsx)(n.code,{children:"chore:"}),"."]})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Code Review"}),": Lu\xf4n c\xf3 code review tr\u01b0\u1edbc khi merge PR."]})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Breaking Changes"}),": \u0110\xe1nh d\u1ea5u breaking changes r\xf5 r\xe0ng v\xe0 update major version."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Testing"}),": Vi\u1ebft tests cho new features v\xe0 ensure existing tests pass."]})}),"\n",(0,s.jsx)(n.h3,{id:"entity-best-practices",children:"Entity Best Practices"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Extend Base Entity"}),": Lu\xf4n extend ",(0,s.jsx)(n.code,{children:"OrmBaseEntity"})," \u0111\u1ec3 c\xf3 audit trail."]})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Meaningful Names"}),": S\u1eed d\u1ee5ng t\xean r\xf5 r\xe0ng cho entities v\xe0 columns."]})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Comments"}),": Th\xeam comments cho complex fields v\xe0 relationships."]})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Validation"}),": Implement proper validation trong entities."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),": S\u1eed d\u1ee5ng appropriate relationship types v\xe0 cascade options."]})}),"\n",(0,s.jsx)(n.h3,{id:"publishing-best-practices",children:"Publishing Best Practices"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Semantic Versioning"}),": Tu\xe2n th\u1ee7 semantic versioning guidelines."]})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Changelog"}),": Maintain CHANGELOG.md v\u1edbi detailed changes."]})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Pre-publish Testing"}),": Test build v\xe0 functionality tr\u01b0\u1edbc khi publish."]})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Breaking Changes"}),": Communicate breaking changes clearly."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Release Notes"}),": Write comprehensive release notes cho major versions."]})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.h4,{id:"build-errors",children:"Build Errors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# TypeScript compilation errors\nnpm run build\n\n# Check for:\n# - Import/export issues\n# - Type mismatches\n# - Missing dependencies\n"})}),"\n",(0,s.jsx)(n.h4,{id:"migration-issues",children:"Migration Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Migration conflicts\nnpm run typeorm:run\n\n# Check for:\n# - Database connection issues\n# - Migration file syntax errors\n# - Constraint conflicts\n"})}),"\n",(0,s.jsx)(n.h4,{id:"publishing-issues",children:"Publishing Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Authentication errors\nnpm login\n\n# Registry issues\nnpm config set registry https://npm.pkg.github.com\n\n# Permission issues\nnpm whoami\nnpm access ls-packages\n"})}),"\n",(0,s.jsx)(n.h3,{id:"debug-commands",children:"Debug Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check TypeScript configuration\nnpx tsc --showConfig\n\n# Check npm configuration\nnpm config list\n\n# Check package.json\nnpm run build --dry-run\n\n# Check dist folder\nls -la dist/\n"})}),"\n",(0,s.jsx)(n.h2,{id:"v\xed-d\u1ee5-ho\xe0n-ch\u1ec9nh",children:"V\xed d\u1ee5 ho\xe0n ch\u1ec9nh"}),"\n",(0,s.jsx)(n.h3,{id:"complete-entity-addition-workflow",children:"Complete Entity Addition Workflow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1. Create feature branch\ngit checkout -b feature/add-order-entity\n\n# 2. Create Order entity\n# src/entities/core/order.entity.ts\n\n# 3. Update CORE_ENTITIES\n# src/entities/core/index.ts\n\n# 4. Generate migration\nnpm run typeorm:generate -- src/migrations/AddOrderEntity\n\n# 5. Review and edit migration\n# src/migrations/xxx-AddOrderEntity.ts\n\n# 6. Test migration\nnpm run typeorm:run\n\n# 7. Add seeds\n# src/seeds/order.seed.ts\n\n# 8. Test seeding\nnpm run seed\n\n# 9. Build and test\nnpm run build\nnpm run lint\n\n# 10. Commit changes\ngit add .\ngit commit -m "feat: add Order entity with relationships"\n\n# 11. Push and create PR\ngit push origin feature/add-order-entity\n'})}),"\n",(0,s.jsx)(n.h3,{id:"complete-publishing-workflow",children:"Complete Publishing Workflow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1. Prepare for release\nnpm run lint\nnpm run build\nnpm test\n\n# 2. Update documentation\n# README.md, CHANGELOG.md\n\n# 3. Commit changes\ngit add .\ngit commit -m "chore: prepare for release v1.3.0"\ngit push origin main\n\n# 4. Publish\nnpm run release:minor\n\n# 5. Post-publish\ngit push origin --tags\n# Create GitHub release\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);