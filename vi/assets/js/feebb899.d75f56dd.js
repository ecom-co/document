"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[9737],{26071:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"microservices/microservices-overview","title":"Microservices Overview","description":"T\xecm hi\u1ec3u v\u1ec1 Microservices Architecture - ki\u1ebfn tr\xfac ph\xe2n t\xe1n hi\u1ec7n \u0111\u1ea1i cho \u1ee9ng d\u1ee5ng l\u1edbn","source":"@site/docs/microservices/microservices-overview.md","sourceDirName":"microservices","slug":"/microservices/microservices-overview","permalink":"/document/vi/docs/microservices/microservices-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/microservices/microservices-overview.md","tags":[],"version":"current","frontMatter":{"title":"Microservices Overview","description":"T\xecm hi\u1ec3u v\u1ec1 Microservices Architecture - ki\u1ebfn tr\xfac ph\xe2n t\xe1n hi\u1ec7n \u0111\u1ea1i cho \u1ee9ng d\u1ee5ng l\u1edbn"},"sidebar":"tutorialSidebar","previous":{"title":"Error Handling","permalink":"/document/vi/docs/http-exception/error-handling"},"next":{"title":"Communication Overview","permalink":"/document/vi/docs/microservices/communication/communication-overview"}}');var t=i(74848),s=i(28453);const c={title:"Microservices Overview",description:"T\xecm hi\u1ec3u v\u1ec1 Microservices Architecture - ki\u1ebfn tr\xfac ph\xe2n t\xe1n hi\u1ec7n \u0111\u1ea1i cho \u1ee9ng d\u1ee5ng l\u1edbn"},l="Microservices Overview",o={},a=[{value:"Microservices l\xe0 g\xec?",id:"microservices-l\xe0-g\xec",level:2},{value:"So s\xe1nh Monolith vs Microservices",id:"so-s\xe1nh-monolith-vs-microservices",level:2},{value:"B\u1ea3ng so s\xe1nh chi ti\u1ebft",id:"b\u1ea3ng-so-s\xe1nh-chi-ti\u1ebft",level:3},{value:"Ki\u1ebfn tr\xfac Microservices",id:"ki\u1ebfn-tr\xfac-microservices",level:2},{value:"1. API Gateway Pattern",id:"1-api-gateway-pattern",level:3},{value:"2. Service Communication",id:"2-service-communication",level:3},{value:"<strong>Synchronous Communication</strong>",id:"synchronous-communication",level:4},{value:"<strong>Asynchronous Communication</strong>",id:"asynchronous-communication",level:4},{value:"Microservices trong NestJS",id:"microservices-trong-nestjs",level:2},{value:"1. C\xe0i \u0111\u1eb7t c\u01a1 b\u1ea3n",id:"1-c\xe0i-\u0111\u1eb7t-c\u01a1-b\u1ea3n",level:3},{value:"2. C\u1ea5u h\xecnh Microservice",id:"2-c\u1ea5u-h\xecnh-microservice",level:3},{value:"3. Service Definition",id:"3-service-definition",level:3},{value:"4. Client Service",id:"4-client-service",level:3},{value:"Microservices Patterns",id:"microservices-patterns",level:2},{value:"1. Saga Pattern",id:"1-saga-pattern",level:3},{value:"2. CQRS Pattern",id:"2-cqrs-pattern",level:3},{value:"3. Circuit Breaker Pattern",id:"3-circuit-breaker-pattern",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Service Design",id:"1-service-design",level:3},{value:"2. Communication Strategy",id:"2-communication-strategy",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"Challenges v\xe0 Solutions",id:"challenges-v\xe0-solutions",level:2},{value:"1. <strong>Distributed Data Management</strong>",id:"1-distributed-data-management",level:3},{value:"2. <strong>Service Discovery</strong>",id:"2-service-discovery",level:3},{value:"3. <strong>Network Latency</strong>",id:"3-network-latency",level:3},{value:"4. <strong>Testing Complexity</strong>",id:"4-testing-complexity",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"microservices-overview",children:"Microservices Overview"})}),"\n",(0,t.jsx)(n.p,{children:"Microservices l\xe0 m\u1ed9t ki\u1ebfn tr\xfac ph\u1ea7n m\u1ec1m trong \u0111\xf3 \u1ee9ng d\u1ee5ng \u0111\u01b0\u1ee3c chia th\xe0nh c\xe1c services nh\u1ecf, \u0111\u1ed9c l\u1eadp, m\u1ed7i service th\u1ef1c hi\u1ec7n m\u1ed9t ch\u1ee9c n\u0103ng nghi\u1ec7p v\u1ee5 c\u1ee5 th\u1ec3."}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    A[Client Applications] --\x3e B[API Gateway]\n    B --\x3e C[User Service]\n    B --\x3e D[Order Service]\n    B --\x3e E[Payment Service]\n    B --\x3e F[Notification Service]\n    \n    C --\x3e G[(User DB)]\n    D --\x3e H[(Order DB)]\n    E --\x3e I[(Payment DB)]\n    F --\x3e J[(Notification DB)]\n    \n    C -.->|gRPC| D\n    D -.->|gRPC| E\n    E -.->|Event| F\n    \n    style A fill:#e3f2fd\n    style B fill:#fff3e0\n    style C fill:#e8f5e8\n    style D fill:#f3e5f5\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,t.jsx)(n.admonition,{title:"\ud83d\udca1 Kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n",type:"tip",children:(0,t.jsx)(n.p,{children:'Microservices gi\u1ed1ng nh\u01b0 "c\xe1c c\u1eeda h\xe0ng nh\u1ecf" - m\u1ed7i c\u1eeda h\xe0ng chuy\xean v\u1ec1 m\u1ed9t m\u1eb7t h\xe0ng, c\xf3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng \u0111\u1ed9c l\u1eadp v\xe0 d\u1ec5 d\xe0ng m\u1edf r\u1ed9ng.'})}),"\n",(0,t.jsx)(n.h2,{id:"microservices-l\xe0-g\xec",children:"Microservices l\xe0 g\xec?"}),"\n",(0,t.jsx)(n.p,{children:"Microservices trong NestJS:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Service Decomposition"})," - Chia nh\u1ecf \u1ee9ng d\u1ee5ng th\xe0nh c\xe1c services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Service Independence"})," - M\u1ed7i service \u0111\u1ed9c l\u1eadp v\u1ec1 database, deployment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Technology Diversity"})," - M\u1ed7i service c\xf3 th\u1ec3 d\xf9ng c\xf4ng ngh\u1ec7 kh\xe1c nhau"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability"})," - C\xf3 th\u1ec3 scale t\u1eebng service ri\xeang bi\u1ec7t"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fault Isolation"})," - L\u1ed7i \u1edf m\u1ed9t service kh\xf4ng \u1ea3nh h\u01b0\u1edfng service kh\xe1c"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"so-s\xe1nh-monolith-vs-microservices",children:"So s\xe1nh Monolith vs Microservices"}),"\n",(0,t.jsx)(n.mermaid,{value:'flowchart LR\n    subgraph "Monolithic Architecture"\n        A[Single Application]\n        A --\x3e B[User Module]\n        A --\x3e C[Order Module]\n        A --\x3e D[Payment Module]\n        A --\x3e E[Notification Module]\n        A --\x3e F[(Single Database)]\n    end\n    \n    subgraph "Microservices Architecture"\n        G[API Gateway]\n        G --\x3e H[User Service]\n        G --\x3e I[Order Service]\n        G --\x3e J[Payment Service]\n        G --\x3e K[Notification Service]\n        H --\x3e L[(User DB)]\n        I --\x3e M[(Order DB)]\n        J --\x3e N[(Payment DB)]\n        K --\x3e O[(Notification DB)]\n    end\n    \n    style A fill:#ffebee\n    style G fill:#e8f5e8'}),"\n",(0,t.jsx)(n.h3,{id:"b\u1ea3ng-so-s\xe1nh-chi-ti\u1ebft",children:"B\u1ea3ng so s\xe1nh chi ti\u1ebft"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Ti\xeau ch\xed"}),(0,t.jsx)(n.th,{children:"Monolith"}),(0,t.jsx)(n.th,{children:"Microservices"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Development"})}),(0,t.jsx)(n.td,{children:"D\u1ec5 ph\xe1t tri\u1ec3n ban \u0111\u1ea7u"}),(0,t.jsx)(n.td,{children:"Ph\u1ee9c t\u1ea1p h\u01a1n, c\u1ea7n team coordination"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Deployment"})}),(0,t.jsx)(n.td,{children:"Deploy to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng"}),(0,t.jsx)(n.td,{children:"Deploy t\u1eebng service ri\xeang bi\u1ec7t"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Scaling"})}),(0,t.jsx)(n.td,{children:"Scale to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng"}),(0,t.jsx)(n.td,{children:"Scale t\u1eebng service theo nhu c\u1ea7u"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Technology"})}),(0,t.jsx)(n.td,{children:"M\u1ed9t c\xf4ng ngh\u1ec7 duy nh\u1ea5t"}),(0,t.jsx)(n.td,{children:"\u0110a d\u1ea1ng c\xf4ng ngh\u1ec7 cho t\u1eebng service"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Database"})}),(0,t.jsx)(n.td,{children:"M\u1ed9t database duy nh\u1ea5t"}),(0,t.jsx)(n.td,{children:"Database ri\xeang cho t\u1eebng service"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Fault Tolerance"})}),(0,t.jsx)(n.td,{children:"L\u1ed7i \u1ea3nh h\u01b0\u1edfng to\xe0n b\u1ed9"}),(0,t.jsx)(n.td,{children:"L\u1ed7i ch\u1ec9 \u1ea3nh h\u01b0\u1edfng service c\u1ee5 th\u1ec3"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Team Size"})}),(0,t.jsx)(n.td,{children:"Team l\u1edbn, kh\xf3 qu\u1ea3n l\xfd"}),(0,t.jsx)(n.td,{children:"Team nh\u1ecf, d\u1ec5 qu\u1ea3n l\xfd"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Testing"})}),(0,t.jsx)(n.td,{children:"Testing to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng"}),(0,t.jsx)(n.td,{children:"Testing t\u1eebng service ri\xeang bi\u1ec7t"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"ki\u1ebfn-tr\xfac-microservices",children:"Ki\u1ebfn tr\xfac Microservices"}),"\n",(0,t.jsx)(n.h3,{id:"1-api-gateway-pattern",children:"1. API Gateway Pattern"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    A[Client] --\x3e B[API Gateway]\n    B --\x3e C[Authentication]\n    B --\x3e D[Rate Limiting]\n    B --\x3e E[Load Balancing]\n    B --\x3e F[Routing]\n    \n    F --\x3e G[User Service]\n    F --\x3e H[Order Service]\n    F --\x3e I[Payment Service]\n    F --\x3e J[Notification Service]\n    \n    style A fill:#e3f2fd\n    style B fill:#fff3e0\n    style C fill:#e8f5e8\n    style D fill:#f3e5f5\n    style E fill:#fce4ec\n    style F fill:#f1f8e9"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Vai tr\xf2 c\u1ee7a API Gateway:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Single Entry Point"})," - \u0110i\u1ec3m v\xe0o duy nh\u1ea5t cho t\u1ea5t c\u1ea3 clients"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentication & Authorization"})," - X\xe1c th\u1ef1c v\xe0 ph\xe2n quy\u1ec1n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rate Limiting"})," - Gi\u1edbi h\u1ea1n s\u1ed1 l\u01b0\u1ee3ng request"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Load Balancing"})," - Ph\xe2n ph\u1ed1i t\u1ea3i"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Routing"})," - \u0110\u1ecbnh tuy\u1ebfn request \u0111\u1ebfn service ph\xf9 h\u1ee3p"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"})," - Theo d\xf5i v\xe0 log t\u1ea5t c\u1ea3 requests"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-service-communication",children:"2. Service Communication"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\n    A[User Service] --\x3e|gRPC| B[Order Service]\n    B --\x3e|gRPC| C[Payment Service]\n    C --\x3e|Event| D[Notification Service]\n    C --\x3e|Event| E[Analytics Service]\n    \n    F[Message Queue] --\x3e|Async| D\n    F --\x3e|Async| E\n    \n    style A fill:#e8f5e8\n    style B fill:#f3e5f5\n    style C fill:#fff3e0\n    style D fill:#fce4ec\n    style E fill:#f1f8e9\n    style F fill:#e3f2fd"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"C\xe1c lo\u1ea1i communication:"})}),"\n",(0,t.jsx)(n.h4,{id:"synchronous-communication",children:(0,t.jsx)(n.strong,{children:"Synchronous Communication"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"gRPC"})," - Google Remote Procedure Call"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HTTP/REST"})," - RESTful API calls"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Direct calls"})," - Service-to-service calls"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"asynchronous-communication",children:(0,t.jsx)(n.strong,{children:"Asynchronous Communication"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Message Queues"})," - RabbitMQ, Apache Kafka"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event-driven"})," - Publish/Subscribe pattern"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Sourcing"})," - L\u01b0u tr\u1eef events"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"microservices-trong-nestjs",children:"Microservices trong NestJS"}),"\n",(0,t.jsx)(n.h3,{id:"1-c\xe0i-\u0111\u1eb7t-c\u01a1-b\u1ea3n",children:"1. C\xe0i \u0111\u1eb7t c\u01a1 b\u1ea3n"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @nestjs/microservices\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-c\u1ea5u-h\xecnh-microservice",children:"2. C\u1ea5u h\xecnh Microservice"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Microservice Configuration"',children:"// main.ts\nimport { NestFactory } from '@nestjs/core';\nimport { Transport } from '@nestjs/microservices';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice(AppModule, {\n    transport: Transport.TCP,\n    options: {\n      host: 'localhost',\n      port: 3001,\n    },\n  });\n  \n  await app.listen();\n  console.log('Microservice is listening on port 3001');\n}\nbootstrap();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-service-definition",children:"3. Service Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="User Service Definition"',children:"// user.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\n\n@Injectable()\nexport class UserService {\n  @MessagePattern({ cmd: 'find_user' })\n  findOne(@Payload() data: { id: string }) {\n    return this.userRepository.findOne(data.id);\n  }\n\n  @MessagePattern({ cmd: 'create_user' })\n  create(@Payload() data: CreateUserDto) {\n    return this.userRepository.create(data);\n  }\n\n  @MessagePattern({ cmd: 'update_user' })\n  update(@Payload() data: { id: string; updateData: UpdateUserDto }) {\n    return this.userRepository.update(data.id, data.updateData);\n  }\n\n  @MessagePattern({ cmd: 'delete_user' })\n  remove(@Payload() data: { id: string }) {\n    return this.userRepository.remove(data.id);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-client-service",children:"4. Client Service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Client Service"',children:"// order.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { ClientProxy, ClientProxyFactory, Transport } from '@nestjs/microservices';\n\n@Injectable()\nexport class OrderService {\n  private client: ClientProxy;\n\n  constructor() {\n    this.client = ClientProxyFactory.create({\n      transport: Transport.TCP,\n      options: {\n        host: 'localhost',\n        port: 3001,\n      },\n    });\n  }\n\n  async createOrder(createOrderDto: CreateOrderDto) {\n    // Validate user exists\n    const user = await this.client.send({ cmd: 'find_user' }, { id: createOrderDto.userId }).toPromise();\n    \n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    // Create order\n    const order = await this.orderRepository.create(createOrderDto);\n    \n    // Notify user service about new order\n    this.client.emit('order_created', { userId: createOrderDto.userId, orderId: order.id });\n    \n    return order;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"microservices-patterns",children:"Microservices Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"1-saga-pattern",children:"1. Saga Pattern"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\n    A[Create Order] --\x3e B[Reserve Inventory]\n    B --\x3e C[Process Payment]\n    C --\x3e D[Confirm Order]\n    \n    B --\x3e|Failure| E[Cancel Order]\n    C --\x3e|Failure| F[Release Inventory]\n    F --\x3e E\n    \n    style A fill:#e8f5e8\n    style B fill:#f3e5f5\n    style C fill:#fff3e0\n    style D fill:#fce4ec\n    style E fill:#ffebee\n    style F fill:#ffebee"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Saga Pattern"})," - Qu\u1ea3n l\xfd distributed transactions:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Choreography"})," - Services t\u1ef1 ph\u1ed1i h\u1ee3p"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Orchestration"})," - Central coordinator \u0111i\u1ec1u khi\u1ec3n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compensation"})," - Rollback khi c\xf3 l\u1ed7i"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-cqrs-pattern",children:"2. CQRS Pattern"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    A[Command] --\x3e B[Command Handler]\n    B --\x3e C[Domain Logic]\n    C --\x3e D[Event Store]\n    \n    E[Query] --\x3e F[Query Handler]\n    F --\x3e G[Read Model]\n    G --\x3e H[Response]\n    \n    D --\x3e I[Event Handlers]\n    I --\x3e G\n    \n    style A fill:#e8f5e8\n    style E fill:#f3e5f5\n    style D fill:#fff3e0\n    style G fill:#fce4ec"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"CQRS Pattern"})," - Command Query Responsibility Segregation:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Commands"})," - Thay \u0111\u1ed5i state (Create, Update, Delete)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Queries"})," - \u0110\u1ecdc data (Read operations)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Sourcing"})," - L\u01b0u tr\u1eef events thay v\xec state"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-circuit-breaker-pattern",children:"3. Circuit Breaker Pattern"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\n    A[Client] --\x3e B{Circuit State}\n    B --\x3e|CLOSED| C[Service Call]\n    B --\x3e|OPEN| D[Fast Fail]\n    B --\x3e|HALF_OPEN| E[Test Call]\n    \n    C --\x3e|Success| F[Reset Counter]\n    C --\x3e|Failure| G[Increment Counter]\n    \n    G --\x3e|Threshold Reached| H[Open Circuit]\n    E --\x3e|Success| I[Close Circuit]\n    E --\x3e|Failure| H\n    \n    style A fill:#e3f2fd\n    style B fill:#fff3e0\n    style C fill:#e8f5e8\n    style D fill:#ffebee"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Circuit Breaker Pattern"})," - B\u1ea3o v\u1ec7 service kh\u1ecfi failures:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CLOSED"})," - Service ho\u1ea1t \u0111\u1ed9ng b\xecnh th\u01b0\u1eddng"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OPEN"})," - Service b\u1ecb block, tr\u1ea3 v\u1ec1 error ngay l\u1eadp t\u1ee9c"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HALF_OPEN"})," - Test service c\xf3 ho\u1ea1t \u0111\u1ed9ng kh\xf4ng"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-service-design",children:"1. Service Design"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Service Design Best Practice"',children:"// \u2705 T\u1ed1t - Service c\xf3 tr\xe1ch nhi\u1ec7m r\xf5 r\xe0ng\n@Injectable()\nexport class UserService {\n  // Ch\u1ec9 x\u1eed l\xfd user-related operations\n  async findOne(id: string): Promise<User> { /* ... */ }\n  async create(data: CreateUserDto): Promise<User> { /* ... */ }\n  async update(id: string, data: UpdateUserDto): Promise<User> { /* ... */ }\n  async remove(id: string): Promise<void> { /* ... */ }\n}\n\n// \u274c Kh\xf4ng t\u1ed1t - Service l\xe0m qu\xe1 nhi\u1ec1u vi\u1ec7c\n@Injectable()\nexport class UserService {\n  async findOne(id: string): Promise<User> { /* ... */ }\n  async createOrder(data: CreateOrderDto): Promise<Order> { /* ... */ } // Kh\xf4ng n\xean\n  async processPayment(data: PaymentDto): Promise<Payment> { /* ... */ } // Kh\xf4ng n\xean\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-communication-strategy",children:"2. Communication Strategy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Communication Strategy Best Practice"',children:"// \u2705 T\u1ed1t - S\u1eed d\u1ee5ng \u0111\xfang lo\u1ea1i communication\n// Synchronous cho operations c\u1ea7n response ngay\nconst user = await this.userClient.send({ cmd: 'find_user' }, { id }).toPromise();\n\n// Asynchronous cho operations kh\xf4ng c\u1ea7n response ngay\nthis.notificationClient.emit('user_created', { userId: user.id });\n\n// \u274c Kh\xf4ng t\u1ed1t - S\u1eed d\u1ee5ng sai lo\u1ea1i communication\n// Synchronous cho operations kh\xf4ng c\u1ea7n response ngay\nawait this.notificationClient.send({ cmd: 'send_email' }, { userId }).toPromise();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-error-handling",children:"3. Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="Error Handling Best Practice"',children:"// \u2705 T\u1ed1t - X\u1eed l\xfd l\u1ed7i m\u1ed9t c\xe1ch graceful\nasync createOrder(data: CreateOrderDto) {\n  try {\n    const user = await this.userClient.send({ cmd: 'find_user' }, { id: data.userId }).toPromise();\n    \n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    \n    return await this.orderRepository.create(data);\n  } catch (error) {\n    if (error instanceof BadRequestException) {\n      throw error;\n    }\n    \n    // Log v\xe0 retry cho transient errors\n    this.logger.error('Failed to create order', error);\n    throw new InternalServerErrorException('Failed to create order');\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"challenges-v\xe0-solutions",children:"Challenges v\xe0 Solutions"}),"\n",(0,t.jsxs)(n.h3,{id:"1-distributed-data-management",children:["1. ",(0,t.jsx)(n.strong,{children:"Distributed Data Management"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Challenge"}),": Data consistency across services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Saga pattern, Event sourcing, CQRS"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"2-service-discovery",children:["2. ",(0,t.jsx)(n.strong,{children:"Service Discovery"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Challenge"}),": Services c\u1ea7n t\xecm nhau"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Service registry (Eureka, Consul), DNS"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"3-network-latency",children:["3. ",(0,t.jsx)(n.strong,{children:"Network Latency"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Challenge"}),": Communication overhead"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Async communication, Caching, CDN"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"4-testing-complexity",children:["4. ",(0,t.jsx)(n.strong,{children:"Testing Complexity"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Challenge"}),": Testing distributed system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Contract testing, Integration testing, Chaos engineering"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.admonition,{title:"\ud83d\udca1 L\u1eddi khuy\xean t\u1ed5ng k\u1ebft",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"B\u1eaft \u0111\u1ea7u v\u1edbi services \u0111\u01a1n gi\u1ea3n, kh\xf4ng over-engineer"}),"\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng \u0111\xfang lo\u1ea1i communication cho t\u1eebng use case"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper error handling v\xe0 retry logic"}),"\n",(0,t.jsx)(n.li,{children:"Monitor v\xe0 log t\u1ea5t c\u1ea3 service interactions"}),"\n",(0,t.jsx)(n.li,{children:"Test t\u1eebng service ri\xeang bi\u1ec7t v\xe0 integration testing"}),"\n",(0,t.jsx)(n.li,{children:"S\u1eed d\u1ee5ng patterns ph\xf9 h\u1ee3p (Saga, CQRS, Circuit Breaker)"}),"\n"]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"B\xe0i ti\u1ebfp theo:"})," ",(0,t.jsx)(n.a,{href:"/docs/microservices/communication-protocols",children:"Communication Protocols"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var r=i(96540);const t={},s=r.createContext(t);function c(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);