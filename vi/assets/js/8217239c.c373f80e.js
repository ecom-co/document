"use strict";(self.webpackChunktemplate_docs=self.webpackChunktemplate_docs||[]).push([[1300],{11470:(e,n,t)=>{t.d(n,{A:()=>b});var a=t(96540),r=t(34164),c=t(23104),s=t(56347),o=t(205),i=t(57485),d=t(31682),l=t(70679);function u(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,i.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,c=h(e),[s,i]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:c})),[d,u]=m({queryString:t,groupId:r}),[g,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,l.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),j=(()=>{const e=d??g;return p({value:e,tabValues:c})?e:null})();(0,o.A)(()=>{j&&i(j)},[j]);return{selectedValue:s,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:c}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),x(e)},[u,x,c]),tabValues:c}}var x=t(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function f({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:i}=(0,c.a_)(),d=e=>{const n=e.currentTarget,r=o.indexOf(n),c=s[r].value;c!==t&&(i(n),a(c))},l=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:a})=>(0,v.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:l,onClick:d,...a,className:(0,r.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function S({lazy:e,children:n,selectedValue:t}){const c=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=c.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:c.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function y(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,v.jsx)(f,{...n,...e}),(0,v.jsx)(S,{...n,...e})]})}function b(e){const n=(0,x.A)();return(0,v.jsx)(y,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(96540);const r={},c=a.createContext(r);function s(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(c.Provider,{value:n},e.children)}},47851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ecom-co/libs/typeorm/docs/data-source","title":"Data Source \u2014 Standalone Connection v\xe0 Connection Caching","description":"Data Source module cung c\u1ea5p standalone database connection cho scripts, CLI tools v\xe0 migration system v\u1edbi connection caching v\xe0 management.","source":"@site/docs/ecom-co/libs/typeorm/docs/data-source.md","sourceDirName":"ecom-co/libs/typeorm/docs","slug":"/data-source","permalink":"/document/vi/docs/data-source","draft":false,"unlisted":false,"editUrl":"https://github.com/ecom-co/document/tree/main/docs/ecom-co/libs/typeorm/docs/data-source.md","tags":[{"inline":true,"label":"data-source","permalink":"/document/vi/docs/tags/data-source"},{"inline":true,"label":"standalone","permalink":"/document/vi/docs/tags/standalone"},{"inline":true,"label":"connection","permalink":"/document/vi/docs/tags/connection"},{"inline":true,"label":"caching","permalink":"/document/vi/docs/tags/caching"},{"inline":true,"label":"migration","permalink":"/document/vi/docs/tags/migration"},{"inline":true,"label":"seeding","permalink":"/document/vi/docs/tags/seeding"}],"version":"current","frontMatter":{"id":"data-source","title":"Data Source \u2014 Standalone Connection v\xe0 Connection Caching","sidebar_label":"Data Source","slug":"/data-source","description":"Data Source module cung c\u1ea5p standalone database connection cho scripts, CLI tools v\xe0 migration system v\u1edbi connection caching v\xe0 management.","tags":["data-source","standalone","connection","caching","migration","seeding"]},"sidebar":"tutorialSidebar","previous":{"title":"ORM Module","permalink":"/document/vi/docs/orm-module"},"next":{"title":"Entities","permalink":"/document/vi/docs/entities"}}');var r=t(74848),c=t(28453);t(11470);const s={id:"data-source",title:"Data Source \u2014 Standalone Connection v\xe0 Connection Caching",sidebar_label:"Data Source",slug:"/data-source",description:"Data Source module cung c\u1ea5p standalone database connection cho scripts, CLI tools v\xe0 migration system v\u1edbi connection caching v\xe0 management.",tags:["data-source","standalone","connection","caching","migration","seeding"]},o=void 0,i={},d=[{value:"T\u1ed5ng quan",id:"t\u1ed5ng-quan",level:2},{value:"Default DataSource",id:"default-datasource",level:2},{value:"C\u1ea5u h\xecnh m\u1eb7c \u0111\u1ecbnh",id:"c\u1ea5u-h\xecnh-m\u1eb7c-\u0111\u1ecbnh",level:3},{value:"C\u1ea5u h\xecnh Environment",id:"c\u1ea5u-h\xecnh-environment",level:3},{value:"C\u1ea5u h\xecnh t\u1ef1 \u0111\u1ed9ng",id:"c\u1ea5u-h\xecnh-t\u1ef1-\u0111\u1ed9ng",level:3},{value:"S\u1eed d\u1ee5ng Default DataSource",id:"s\u1eed-d\u1ee5ng-default-datasource",level:3},{value:"Standalone Connection",id:"standalone-connection",level:2},{value:"connectStandalone",id:"connectstandalone",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"V\xed d\u1ee5 s\u1eed d\u1ee5ng",id:"v\xed-d\u1ee5-s\u1eed-d\u1ee5ng",level:4},{value:"Connection Caching",id:"connection-caching",level:3},{value:"Cache Key Generation",id:"cache-key-generation",level:4},{value:"Cache Behavior",id:"cache-behavior",level:4},{value:"Cache Management",id:"cache-management",level:4},{value:"getCachedDataSource",id:"getcacheddatasource",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"V\xed d\u1ee5 s\u1eed d\u1ee5ng",id:"v\xed-d\u1ee5-s\u1eed-d\u1ee5ng-1",level:4},{value:"disconnectStandalone",id:"disconnectstandalone",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"V\xed d\u1ee5 s\u1eed d\u1ee5ng",id:"v\xed-d\u1ee5-s\u1eed-d\u1ee5ng-2",level:4},{value:"S\u1eed d\u1ee5ng trong Scripts",id:"s\u1eed-d\u1ee5ng-trong-scripts",level:2},{value:"Migration Scripts",id:"migration-scripts",level:3},{value:"Seeding Scripts",id:"seeding-scripts",level:3},{value:"CLI Tools",id:"cli-tools",level:3},{value:"Multiple Data Sources",id:"multiple-data-sources",level:2},{value:"C\u1ea5u h\xecnh nhi\u1ec1u connections",id:"c\u1ea5u-h\xecnh-nhi\u1ec1u-connections",level:3},{value:"S\u1eed d\u1ee5ng named connections",id:"s\u1eed-d\u1ee5ng-named-connections",level:3},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:".env file",id:"env-file",level:3},{value:"Environment-specific configuration",id:"environment-specific-configuration",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"V\xed d\u1ee5 ho\xe0n ch\u1ec9nh",id:"v\xed-d\u1ee5-ho\xe0n-ch\u1ec9nh",level:2},{value:"Migration Runner",id:"migration-runner",level:3},{value:"Database Seeder",id:"database-seeder",level:3},{value:"Database Health Checker",id:"database-health-checker",level:3}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Data Source module cung c\u1ea5p standalone database connection system cho scripts, CLI tools, migration v\xe0 seeding, v\u1edbi connection caching v\xe0 management capabilities."})}),"\n",(0,r.jsx)(n.h2,{id:"t\u1ed5ng-quan",children:"T\u1ed5ng quan"}),"\n",(0,r.jsx)(n.p,{children:"Data Source module bao g\u1ed3m:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default DataSource"})," - C\u1ea5u h\xecnh m\u1eb7c \u0111\u1ecbnh cho \u1ee9ng d\u1ee5ng ch\xednh"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standalone Connection"})," - Connection utilities cho scripts v\xe0 CLI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connection Caching"})," - Cache connections \u0111\u1ec3 t\xe1i s\u1eed d\u1ee5ng"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Migration Support"})," - H\u1ed7 tr\u1ee3 TypeORM migration system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Environment Configuration"})," - C\u1ea5u h\xecnh t\u1eeb environment variables"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"default-datasource",children:"Default DataSource"}),"\n",(0,r.jsx)(n.h3,{id:"c\u1ea5u-h\xecnh-m\u1eb7c-\u0111\u1ecbnh",children:"C\u1ea5u h\xecnh m\u1eb7c \u0111\u1ecbnh"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// src/orm/data-source.ts\nconst dataSource = new DataSource({\n    type: 'postgres',\n    entities: CORE_ENTITIES,\n    logging: !isProduction,\n    migrations: ['src/migrations/*.{ts,js}'],\n    migrationsTableName: 'migrations',\n    url: databaseUrl,\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"c\u1ea5u-h\xecnh-environment",children:"C\u1ea5u h\xecnh Environment"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Environment Variable"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DATABASE_URL"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"PostgreSQL connection string"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NODE_ENV"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Environment mode"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"development"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"c\u1ea5u-h\xecnh-t\u1ef1-\u0111\u1ed9ng",children:"C\u1ea5u h\xecnh t\u1ef1 \u0111\u1ed9ng"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// T\u1ef1 \u0111\u1ed9ng detect production mode\nconst isProduction = process.env.NODE_ENV === 'production';\n\n// Logging ch\u1ec9 b\u1eadt trong development\nlogging: !isProduction,\n\n// S\u1eed d\u1ee5ng CORE_ENTITIES t\u1eeb entities module\nentities: CORE_ENTITIES,\n\n// Migration files pattern\nmigrations: ['src/migrations/*.{ts,js}'],\n"})}),"\n",(0,r.jsx)(n.h3,{id:"s\u1eed-d\u1ee5ng-default-datasource",children:"S\u1eed d\u1ee5ng Default DataSource"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import dataSource from '@ecom-co/orm/orm/data-source';\n\n// Initialize connection\nawait dataSource.initialize();\n\n// Use data source\nconst userRepository = dataSource.getRepository(User);\n\n// Close connection\nawait dataSource.destroy();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"standalone-connection",children:"Standalone Connection"}),"\n",(0,r.jsx)(n.h3,{id:"connectstandalone",children:"connectStandalone"}),"\n",(0,r.jsx)(n.p,{children:"Function ch\xednh \u0111\u1ec3 t\u1ea1o standalone database connection v\u1edbi caching support."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export const connectStandalone = async (\n  options: DataSourceOptions,\n  { reuse = true }: { reuse?: boolean } = {},\n): Promise<DataSource>\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DataSourceOptions"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"TypeORM data source options"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"config.reuse"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"N\u1ebfu true, t\xe1i s\u1eed d\u1ee5ng cached connection"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise<DataSource>"})," - Initialized v\xe0 connected data source"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"v\xed-d\u1ee5-s\u1eed-d\u1ee5ng",children:"V\xed d\u1ee5 s\u1eed d\u1ee5ng"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { connectStandalone } from '@ecom-co/orm';\n\n// T\u1ea1o connection m\u1edbi\nconst dataSource = await connectStandalone({\n    type: 'postgres',\n    url: process.env.DATABASE_URL,\n    entities: [User, Product],\n});\n\n// S\u1eed d\u1ee5ng connection\nconst userRepo = dataSource.getRepository(User);\nconst users = await userRepo.find();\n\n// Connection s\u1ebd \u0111\u01b0\u1ee3c cache t\u1ef1 \u0111\u1ed9ng\n"})}),"\n",(0,r.jsx)(n.h3,{id:"connection-caching",children:"Connection Caching"}),"\n",(0,r.jsx)(n.h4,{id:"cache-key-generation",children:"Cache Key Generation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const getCacheKey = (options: DataSourceOptions): string => options.name ?? 'default';\n"})}),"\n",(0,r.jsx)(n.h4,{id:"cache-behavior",children:"Cache Behavior"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Scenario"}),(0,r.jsx)(n.th,{children:"Behavior"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"First connection"})}),(0,r.jsx)(n.td,{children:"Create new"}),(0,r.jsx)(n.td,{children:"T\u1ea1o connection m\u1edbi v\xe0 cache"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Same options"})}),(0,r.jsx)(n.td,{children:"Reuse cached"}),(0,r.jsx)(n.td,{children:"T\xe1i s\u1eed d\u1ee5ng connection \u0111\xe3 cache"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Different options"})}),(0,r.jsx)(n.td,{children:"Create new"}),(0,r.jsx)(n.td,{children:"T\u1ea1o connection m\u1edbi v\u1edbi cache key kh\xe1c"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Cache disabled"})}),(0,r.jsx)(n.td,{children:"Always create new"}),(0,r.jsx)(n.td,{children:"Kh\xf4ng s\u1eed d\u1ee5ng cache"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"cache-management",children:"Cache Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Cache \u0111\u01b0\u1ee3c qu\u1ea3n l\xfd t\u1ef1 \u0111\u1ed9ng\nconst dataSourceCache = new Map<string, DataSource>();\n\n// Connection \u0111\u01b0\u1ee3c cache theo name ho\u1eb7c 'default'\nif (reuse && dataSourceCache.has(key)) {\n    const cached = dataSourceCache.get(key)!;\n\n    if (cached.isInitialized) return cached;\n\n    await cached.initialize();\n    return cached;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getcacheddatasource",children:"getCachedDataSource"}),"\n",(0,r.jsx)(n.p,{children:"L\u1ea5y cached data source theo t\xean."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export const getCachedDataSource = (name = 'default'): DataSource | undefined\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"T\xean c\u1ee7a cached data source (m\u1eb7c \u0111\u1ecbnh: 'default')"})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DataSource | undefined"})," - Cached data source ho\u1eb7c undefined n\u1ebfu kh\xf4ng t\xecm th\u1ea5y"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"v\xed-d\u1ee5-s\u1eed-d\u1ee5ng-1",children:"V\xed d\u1ee5 s\u1eed d\u1ee5ng"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getCachedDataSource } from '@ecom-co/orm';\n\n// L\u1ea5y default cached connection\nconst defaultDs = getCachedDataSource();\n\n// L\u1ea5y named connection\nconst analyticsDs = getCachedDataSource('analytics');\n\nif (defaultDs && defaultDs.isInitialized) {\n    // S\u1eed d\u1ee5ng connection\n    const userRepo = defaultDs.getRepository(User);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"disconnectstandalone",children:"disconnectStandalone"}),"\n",(0,r.jsx)(n.p,{children:"Ng\u1eaft k\u1ebft n\u1ed1i cached data source v\xe0 x\xf3a kh\u1ecfi cache."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export const disconnectStandalone = async (name = 'default'): Promise<void>\n"})}),"\n",(0,r.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"T\xean c\u1ee7a data source \u0111\u1ec3 ng\u1eaft k\u1ebft n\u1ed1i"})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise<void>"})," - Promise resolve khi ng\u1eaft k\u1ebft n\u1ed1i ho\xe0n t\u1ea5t"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"v\xed-d\u1ee5-s\u1eed-d\u1ee5ng-2",children:"V\xed d\u1ee5 s\u1eed d\u1ee5ng"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { disconnectStandalone } from '@ecom-co/orm';\n\n// Ng\u1eaft k\u1ebft n\u1ed1i default connection\nawait disconnectStandalone();\n\n// Ng\u1eaft k\u1ebft n\u1ed1i named connection\nawait disconnectStandalone('analytics');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"s\u1eed-d\u1ee5ng-trong-scripts",children:"S\u1eed d\u1ee5ng trong Scripts"}),"\n",(0,r.jsx)(n.h3,{id:"migration-scripts",children:"Migration Scripts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport { connectStandalone } from '@ecom-co/orm';\nimport { User, Product } from '@ecom-co/orm';\n\nasync function runMigration() {\n    const dataSource = await connectStandalone({\n        type: 'postgres',\n        url: process.env.DATABASE_URL,\n        entities: [User, Product],\n    });\n\n    try {\n        // Run migration logic\n        await dataSource.runMigrations();\n        console.log('Migration completed successfully');\n    } finally {\n        // Cleanup\n        if (dataSource.isInitialized) {\n            await dataSource.destroy();\n        }\n    }\n}\n\nrunMigration().catch(console.error);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"seeding-scripts",children:"Seeding Scripts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport { connectStandalone } from '@ecom-co/orm';\nimport { User, Product } from '@ecom-co/orm';\n\nasync function seedDatabase() {\n    const dataSource = await connectStandalone({\n        type: 'postgres',\n        url: process.env.DATABASE_URL,\n        entities: [User, Product],\n    });\n\n    try {\n        const userRepo = dataSource.getRepository(User);\n        const productRepo = dataSource.getRepository(Product);\n\n        // Create seed data\n        const user = await userRepo.save(\n            userRepo.create({\n                email: 'admin@example.com',\n                firstName: 'Admin',\n                lastName: 'User',\n                isActive: true,\n            }),\n        );\n\n        await productRepo.save(\n            productRepo.create({\n                name: 'Sample Product',\n                description: 'A sample product for testing',\n                isActive: true,\n                userId: user.id,\n            }),\n        );\n\n        console.log('Database seeded successfully');\n    } finally {\n        if (dataSource.isInitialized) {\n            await dataSource.destroy();\n        }\n    }\n}\n\nseedDatabase().catch(console.error);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cli-tools",children:"CLI Tools"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport { connectStandalone, getCachedDataSource } from '@ecom-co/orm';\n\nasync function cliTool() {\n    // K\u1ebft n\u1ed1i database\n    const dataSource = await connectStandalone({\n        type: 'postgres',\n        url: process.env.DATABASE_URL,\n        entities: [User, Product],\n        name: 'cli-tool', // Named connection\n    });\n\n    try {\n        // CLI logic\n        const userRepo = dataSource.getRepository(User);\n        const userCount = await userRepo.count();\n        console.log(`Total users: ${userCount}`);\n\n        // Connection \u0111\u01b0\u1ee3c cache, c\xf3 th\u1ec3 t\xe1i s\u1eed d\u1ee5ng\n        const cachedDs = getCachedDataSource('cli-tool');\n        if (cachedDs) {\n            console.log('Connection cached successfully');\n        }\n    } finally {\n        // Cleanup\n        await disconnectStandalone('cli-tool');\n    }\n}\n\ncliTool().catch(console.error);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"multiple-data-sources",children:"Multiple Data Sources"}),"\n",(0,r.jsx)(n.h3,{id:"c\u1ea5u-h\xecnh-nhi\u1ec1u-connections",children:"C\u1ea5u h\xecnh nhi\u1ec1u connections"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { connectStandalone } from '@ecom-co/orm';\n\nasync function setupMultipleConnections() {\n    // Primary database\n    const primaryDs = await connectStandalone({\n        type: 'postgres',\n        url: process.env.DATABASE_URL,\n        entities: [User, Product],\n        name: 'primary',\n    });\n\n    // Analytics database\n    const analyticsDs = await connectStandalone({\n        type: 'postgres',\n        url: process.env.ANALYTICS_DATABASE_URL,\n        entities: [AnalyticsEvent],\n        name: 'analytics',\n    });\n\n    // Test database\n    const testDs = await connectStandalone({\n        type: 'postgres',\n        url: process.env.TEST_DATABASE_URL,\n        entities: [User, Product],\n        name: 'test',\n    });\n\n    return { primaryDs, analyticsDs, testDs };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"s\u1eed-d\u1ee5ng-named-connections",children:"S\u1eed d\u1ee5ng named connections"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getCachedDataSource } from '@ecom-co/orm';\n\nasync function useNamedConnections() {\n    const primaryDs = getCachedDataSource('primary');\n    const analyticsDs = getCachedDataSource('analytics');\n\n    if (primaryDs && analyticsDs) {\n        // S\u1eed d\u1ee5ng primary database\n        const userRepo = primaryDs.getRepository(User);\n        const users = await userRepo.find();\n\n        // S\u1eed d\u1ee5ng analytics database\n        const eventRepo = analyticsDs.getRepository(AnalyticsEvent);\n        const events = await eventRepo.find();\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"env-file",children:".env file"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-env",children:"# Database Configuration\nDATABASE_URL=postgresql://username:password@localhost:5432/main_db\n\n# Multiple databases\nANALYTICS_DATABASE_URL=postgresql://username:password@localhost:5432/analytics_db\nTEST_DATABASE_URL=postgresql://username:5432/test_db\n\n# Environment\nNODE_ENV=development\n\n# Optional: Custom settings\nDB_HOST=localhost\nDB_PORT=5432\nDB_USERNAME=username\nDB_PASSWORD=password\nDB_DATABASE=main_db\n"})}),"\n",(0,r.jsx)(n.h3,{id:"environment-specific-configuration",children:"Environment-specific configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'dotenv/config';\n\nconst getDatabaseConfig = () => {\n    const env = process.env.NODE_ENV || 'development';\n\n    switch (env) {\n        case 'production':\n            return {\n                logging: false,\n                ssl: { rejectUnauthorized: false },\n            };\n\n        case 'test':\n            return {\n                logging: false,\n                dropSchema: true,\n            };\n\n        default: // development\n            return {\n                logging: true,\n                synchronize: false,\n            };\n    }\n};\n\nconst dataSource = await connectStandalone({\n    type: 'postgres',\n    url: process.env.DATABASE_URL,\n    entities: [User, Product],\n    ...getDatabaseConfig(),\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Named Connections"}),": S\u1eed d\u1ee5ng named connections cho multiple data sources \u0111\u1ec3 d\u1ec5 qu\u1ea3n l\xfd."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Connection Reuse"}),": Lu\xf4n s\u1eed d\u1ee5ng ",(0,r.jsx)(n.code,{children:"reuse: true"})," (m\u1eb7c \u0111\u1ecbnh) \u0111\u1ec3 t\u1ed1i \u01b0u performance."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Proper Cleanup"}),": Lu\xf4n g\u1ecdi ",(0,r.jsx)(n.code,{children:"disconnectStandalone"})," ho\u1eb7c ",(0,r.jsx)(n.code,{children:"dataSource.destroy()"})," \u0111\u1ec3 cleanup connections."]})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Environment Variables"}),": \u0110\u1ea3m b\u1ea3o ",(0,r.jsx)(n.code,{children:"DATABASE_URL"})," \u0111\u01b0\u1ee3c set trong environment tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng."]})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Migration Support"}),": Standalone connections h\u1ed7 tr\u1ee3 \u0111\u1ea7y \u0111\u1ee7 TypeORM migration system."]})}),"\n",(0,r.jsx)(n.h2,{id:"v\xed-d\u1ee5-ho\xe0n-ch\u1ec9nh",children:"V\xed d\u1ee5 ho\xe0n ch\u1ec9nh"}),"\n",(0,r.jsx)(n.h3,{id:"migration-runner",children:"Migration Runner"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport { connectStandalone, disconnectStandalone } from '@ecom-co/orm';\nimport { User, Product } from '@ecom-co/orm';\n\nasync function runMigrations() {\n    const dataSource = await connectStandalone({\n        type: 'postgres',\n        url: process.env.DATABASE_URL,\n        entities: [User, Product],\n        name: 'migration-runner',\n    });\n\n    try {\n        console.log('Running migrations...');\n\n        // Check if migrations are pending\n        const pendingMigrations = await dataSource.showMigrations();\n\n        if (pendingMigrations) {\n            await dataSource.runMigrations();\n            console.log('Migrations completed successfully');\n        } else {\n            console.log('No pending migrations');\n        }\n    } catch (error) {\n        console.error('Migration failed:', error);\n        throw error;\n    } finally {\n        await disconnectStandalone('migration-runner');\n    }\n}\n\n// CLI usage\nif (require.main === module) {\n    runMigrations().catch((error) => {\n        console.error('Migration script failed:', error);\n        process.exit(1);\n    });\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"database-seeder",children:"Database Seeder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport { connectStandalone, disconnectStandalone } from '@ecom-co/orm';\nimport { User, Product } from '@ecom-co/orm';\n\nasync function seedDatabase() {\n    const dataSource = await connectStandalone({\n        type: 'postgres',\n        url: process.env.DATABASE_URL,\n        entities: [User, Product],\n        name: 'seeder',\n    });\n\n    try {\n        console.log('Seeding database...');\n\n        const userRepo = dataSource.getRepository(User);\n        const productRepo = dataSource.getRepository(Product);\n\n        // Check if data already exists\n        const existingUsers = await userRepo.count();\n        if (existingUsers > 0) {\n            console.log('Database already seeded, skipping...');\n            return;\n        }\n\n        // Create admin user\n        const adminUser = await userRepo.save(\n            userRepo.create({\n                email: 'admin@example.com',\n                firstName: 'Admin',\n                lastName: 'User',\n                isActive: true,\n            }),\n        );\n\n        // Create sample products\n        const products = [\n            {\n                name: 'Sample Product 1',\n                description: 'First sample product',\n                isActive: true,\n                userId: adminUser.id,\n            },\n            {\n                name: 'Sample Product 2',\n                description: 'Second sample product',\n                isActive: true,\n                userId: adminUser.id,\n            },\n        ];\n\n        await productRepo.save(products.map((product) => productRepo.create(product)));\n\n        console.log('Database seeded successfully');\n    } catch (error) {\n        console.error('Seeding failed:', error);\n        throw error;\n    } finally {\n        await disconnectStandalone('seeder');\n    }\n}\n\n// CLI usage\nif (require.main === module) {\n    seedDatabase().catch((error) => {\n        console.error('Seeding script failed:', error);\n        process.exit(1);\n    });\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"database-health-checker",children:"Database Health Checker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport { connectStandalone, getCachedDataSource } from '@ecom-co/orm';\n\nasync function checkDatabaseHealth() {\n    try {\n        // Try to get cached connection first\n        let dataSource = getCachedDataSource('health-checker');\n\n        if (!dataSource) {\n            // Create new connection if not cached\n            dataSource = await connectStandalone({\n                type: 'postgres',\n                url: process.env.DATABASE_URL,\n                entities: [User, Product],\n                name: 'health-checker',\n            });\n        }\n\n        // Simple health check query\n        const startTime = Date.now();\n        await dataSource.query('SELECT 1');\n        const latency = Date.now() - startTime;\n\n        console.log(`Database health check passed. Latency: ${latency}ms`);\n        return { status: 'healthy', latency };\n    } catch (error) {\n        console.error('Database health check failed:', error.message);\n        return { status: 'unhealthy', error: error.message };\n    }\n}\n\n// Run health check\ncheckDatabaseHealth().then((result) => {\n    if (result.status === 'healthy') {\n        process.exit(0);\n    } else {\n        process.exit(1);\n    }\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);